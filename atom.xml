<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>间客六十</title>
  <icon>https://www.gravatar.com/avatar/cda2d170e4d695691a573126f5381220</icon>
  <subtitle>技术引领生活</subtitle>
  <link href="https://liusblog.top/atom.xml" rel="self"/>
  
  <link href="https://liusblog.top/"/>
  <updated>2024-11-29T02:36:12.811Z</updated>
  <id>https://liusblog.top/</id>
  
  <author>
    <name>spygg</name>
    <email>liushidc@163.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Qt图片转ICON多尺寸小工具</title>
    <link href="https://liusblog.top/2024/11/28/Qt%E5%9B%BE%E7%89%87%E8%BD%ACICON%E5%A4%9A%E5%B0%BA%E5%AF%B8%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
    <id>https://liusblog.top/2024/11/28/Qt%E5%9B%BE%E7%89%87%E8%BD%ACICON%E5%A4%9A%E5%B0%BA%E5%AF%B8%E5%B0%8F%E5%B7%A5%E5%85%B7/</id>
    <published>2024-11-28T15:41:58.000Z</published>
    <updated>2024-11-29T02:36:12.811Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>在逛吾爱破解论坛的时候，看到有个帖子，是关于图片转ICON的python版本，打包有点问题,加上自己确实有时候会用到每次都是打开在线网站,于是我就自己写了一个支持多尺寸的Qt图片转ICON小工具，分享给大家</p></blockquote><h2 id="实现过程-思路"><a href="#实现过程-思路" class="headerlink" title="实现过程(思路)"></a>实现过程(思路)</h2><p>众所周知,Qt已经帮我们封装好了图片转ICON的函数，但是Qt的图片转ICON函数只支持一个尺寸，所以我们需要自己写一个支持多尺寸的图片转ICON函数,将任意图片调用QImage的save函数(如果指定了后缀名为.ico，则自动保存为的ICON文件)。<br>函数原型如下：<br> <figure class="highlight h"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">save</span><span class="params">(<span class="keyword">const</span> QString &amp;fileName, <span class="keyword">const</span> <span class="keyword">char</span> *format = Q_NULLPTR, <span class="keyword">int</span> quality = <span class="number">-1</span>)</span> <span class="keyword">const</span></span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">save</span><span class="params">(QIODevice *device, <span class="keyword">const</span> <span class="keyword">char</span> *format = Q_NULLPTR, <span class="keyword">int</span> quality = <span class="number">-1</span>)</span> <span class="keyword">const</span></span></span><br></pre></td></tr></table></figure></p><p>在逛论坛的时候看到帖子得知Icon支持一个文件多个尺寸,同时在QIcon函数中发现有一个QICon添加多个图片的接口</p><figure class="highlight h"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addFile</span><span class="params">(<span class="keyword">const</span> QString &amp;fileName, <span class="keyword">const</span> QSize &amp;size = QSize(), Mode mode = Normal, State state = Off)</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addPixmap</span><span class="params">(<span class="keyword">const</span> QPixmap &amp;pixmap, Mode mode = Normal, State state = Off)</span></span></span><br></pre></td></tr></table></figure><p>同时也有函数</p><figure class="highlight h"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">QList&lt;QSize&gt; <span class="title">availableSizes</span><span class="params">()</span> <span class="keyword">const</span></span></span><br></pre></td></tr></table></figure><p>看来确实支持多尺寸,但是找来有找去就没有发现保存的接口</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ImgToIcon</span><span class="params">(<span class="keyword">const</span> QString &amp;imgPath, <span class="keyword">const</span> QString &amp;iconPath, <span class="keyword">const</span> QList&lt;<span class="keyword">int</span>&gt; &amp;sizeList)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 读取图片</span></span><br><span class="line">    <span class="function">QImage <span class="title">img</span><span class="params">(imgPath)</span></span>;</span><br><span class="line">    <span class="comment">// 创建QIcon对象</span></span><br><span class="line">    QIcon icon;</span><br><span class="line">    <span class="comment">// 遍历尺寸列表</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> size : sizeList)&#123;</span><br><span class="line">        <span class="comment">// 创建QPixmap对象</span></span><br><span class="line">        QImage scaledImage = img.<span class="built_in">scaled</span>(size, Qt::KeepAspectRatio, Qt::SmoothTransformation);</span><br><span class="line">        <span class="comment">// 将QPixmap对象添加到QIcon对象中</span></span><br><span class="line">        icon.<span class="built_in">addPixmap</span>(scaledImage);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 保存QIcon对象为文件</span></span><br><span class="line">    <span class="comment">//要是有这么个接口就好了</span></span><br><span class="line">    icon.<span class="built_in">save</span>(iconPath);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查看QIcon的头文件发现有个函数,可惜是私有的,不管了,先拿过来用用,但是转化结果不对</p><figure class="highlight h"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">friend</span> Q_GUI_EXPORT QDataStream &amp;<span class="keyword">operator</span>&lt;&lt;(QDataStream &amp;, <span class="keyword">const</span> QIcon &amp;);</span><br></pre></td></tr></table></figure><p>不死心就继续查找,发现QtIcoHandler内部类ICOReader的write接口看起来像实现了保存的接口只是没有暴露,于是改写摘录出来,最终完美收官</p><figure class="highlight h"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ICOReader::write</span><span class="params">(QIODevice *device, <span class="keyword">const</span> QVector&lt;QImage&gt; &amp;images)</span></span></span><br></pre></td></tr></table></figure><h2 id="软件界面"><a href="#软件界面" class="headerlink" title="软件界面"></a>软件界面</h2><p><img src="/photos/Qt%E5%9B%BE%E7%89%87%E8%BD%ACICON%E5%A4%9A%E5%B0%BA%E5%AF%B8%E5%B0%8F%E5%B7%A5%E5%85%B7/software.webp" alt="图片"></p><h2 id="结果验证"><a href="#结果验证" class="headerlink" title="结果验证"></a>结果验证</h2><p>支持多尺寸，支持png、jpg、bmp等格式,vs2019打开可以看到支持多尺寸</p><p><img src="/photos/Qt%E5%9B%BE%E7%89%87%E8%BD%ACICON%E5%A4%9A%E5%B0%BA%E5%AF%B8%E5%B0%8F%E5%B7%A5%E5%85%B7/result.webp" alt="图片"></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/spygg/QtImgToIcon">我的github</a></p><h2 id="Ps"><a href="#Ps" class="headerlink" title="Ps"></a>Ps</h2><p>记得很久以前发现有个将文件追加到图片后面的命令,于是惊叹竟然还有这个骚操作,现在想起来ICON 就是利用了图片格式玩的花样吧,具体代码上方的github链接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">　　copy /b 原图片.bmp+大片.mp4 目标.bmp　　</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Qt" scheme="https://liusblog.top/categories/Qt/"/>
    
    
    <category term="Qt" scheme="https://liusblog.top/tags/Qt/"/>
    
    <category term="ICON" scheme="https://liusblog.top/tags/ICON/"/>
    
    <category term="多尺寸" scheme="https://liusblog.top/tags/%E5%A4%9A%E5%B0%BA%E5%AF%B8/"/>
    
  </entry>
  
  <entry>
    <title>Qt低版本组播的bug</title>
    <link href="https://liusblog.top/2024/11/07/Qt%E4%BD%8E%E7%89%88%E6%9C%AC%E7%BB%84%E6%92%AD%E7%9A%84bug/"/>
    <id>https://liusblog.top/2024/11/07/Qt%E4%BD%8E%E7%89%88%E6%9C%AC%E7%BB%84%E6%92%AD%E7%9A%84bug/</id>
    <published>2024-11-07T07:09:12.000Z</published>
    <updated>2024-11-07T08:53:07.867Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>最近在某个项目中，发现了一个低版本Qt的bug，导致组播无法正常使用，经过一番排查，终于找到了原因，特此记录。</p></blockquote><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li>Qt：5.7.0 mingw32</li><li>操作系统：windows 11</li></ul><h2 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h2><p>在Qt5.7.0版本中，使用组播发送数据时，发现数据无法接收，经过长时间的排查，发现是Qt的bug，具体现象如下：</p><ol><li>在Qt5.7.0版本中，使用组播发送数据时，发现数据无法接收。</li><li>使用串口调试工具，发现发送的数据包没有问题（无论何种情况都可以）。</li><li>使用wireshark抓包，发现发送的数据包没有问题。</li><li>使用Qt自带的组播收发例子，本机测试发现可以正常接收数据， 但是当收发处于两台电脑时不能接收。</li></ol><h2 id="排查步骤"><a href="#排查步骤" class="headerlink" title="排查步骤"></a>排查步骤</h2><ol><li>使用调试工具<ul><li>   使用地址 0.0.0.0: port 不能接收到数据</li><li>   使用地址 192.168.1.100: port 可以接收到数据</li><li>   使用地址 239.255.255.255: port 不能接收到数据</li></ul></li><li>测试自带的组播收发例子<ul><li>   本机测试可以正常接收数据</li><li>   两台电脑测试不能接收数据</li></ul></li></ol><h2 id="尝试解决"><a href="#尝试解决" class="headerlink" title="尝试解决"></a>尝试解决</h2><p>经过一顿搜索，加上长时间的摸索（本机的虚拟网卡太多），长时间折腾后发现只有一个网卡的时候可以正常。必须祭出终极大杀器 <strong>socket sdk</strong> 如果还不行都不知道该怎么办了，结果测试竟然可行</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;winsock2.h&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ws2tcpip.h&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;ws2_32.lib&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sendData</span><span class="params">(SOCKET sock)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">dest_addr</span>;</span> <span class="comment">// 目标地址结构体</span></span><br><span class="line"> </span><br><span class="line"> <span class="comment">// 设置目标地址</span></span><br><span class="line"> <span class="built_in">memset</span>(&amp;dest_addr, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(dest_addr));</span><br><span class="line"> dest_addr.sin_family = AF_INET; <span class="comment">// IPv4</span></span><br><span class="line"> dest_addr.sin_port = <span class="built_in">htons</span>(groupPort); <span class="comment">// 目标端口号</span></span><br><span class="line"> dest_addr.sin_addr.s_addr = <span class="built_in">inet_addr</span>(groupIp); <span class="comment">// 目标IP地址</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> *sendData = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line"><span class="built_in">sendto</span>(sock, sendData, <span class="built_in">strlen</span>(sendData), <span class="number">0</span>, (<span class="keyword">const</span> struct sockaddr *)&amp;dest_addr, <span class="built_in"><span class="keyword">sizeof</span></span>(dest_addr));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">short</span> groupPort = <span class="number">37080</span>;</span><br><span class="line"><span class="keyword">char</span> *bindIp = <span class="string">&quot;192.168.8.112&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> *localIp = <span class="string">&quot;192.168.8.112&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> *groupIp = <span class="string">&quot;239.255.255.250&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n%s\n%s\n%d\n&quot;</span>, bindIp, localIp, groupIp, groupPort);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(argc &gt;= <span class="number">5</span>)&#123;</span><br><span class="line">bindIp = argv[<span class="number">1</span>];</span><br><span class="line">localIp = argv[<span class="number">2</span>];</span><br><span class="line">groupIp = argv[<span class="number">3</span>];</span><br><span class="line">groupPort = <span class="built_in">atoi</span>(argv[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> iRet = <span class="number">0</span>;</span><br><span class="line">WSADATA wsaData;</span><br><span class="line"><span class="built_in">WSAStartup</span>(<span class="built_in">MAKEWORD</span>(<span class="number">2</span>, <span class="number">2</span>), &amp;wsaData);</span><br><span class="line"></span><br><span class="line">SOCKET sock = <span class="built_in">socket</span>(AF_INET, SOCK_DGRAM, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">sockaddr_in addr;</span><br><span class="line">addr.sin_family = AF_INET;</span><br><span class="line">addr.sin_addr.S_un.S_addr = <span class="built_in">inet_addr</span>(bindIp);<span class="comment">//INADDR_ANY;</span></span><br><span class="line"><span class="comment">//addr.sin_addr.S_un.S_addr = inet_addr(&quot;127.0.0.1&quot;);</span></span><br><span class="line">addr.sin_port = <span class="built_in">htons</span>(groupPort);</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> bOptval = <span class="literal">true</span>;</span><br><span class="line">iRet = <span class="built_in">setsockopt</span>(sock, SOL_SOCKET, SO_REUSEADDR, (<span class="keyword">char</span>*)&amp;bOptval, <span class="built_in"><span class="keyword">sizeof</span></span>(bOptval));</span><br><span class="line"><span class="keyword">if</span> (iRet != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;setsockopt fail:%d&quot;</span>, <span class="built_in">WSAGetLastError</span>());</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">iRet = <span class="built_in">bind</span>(sock, (sockaddr*)&amp;addr, <span class="built_in"><span class="keyword">sizeof</span></span>(addr));</span><br><span class="line"><span class="keyword">if</span> (iRet != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;bind fail:%d\n&quot;</span>, <span class="built_in">WSAGetLastError</span>());</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;socket:%d bind success\n&quot;</span>, sock);</span><br><span class="line"></span><br><span class="line">ip_mreq multiCast;</span><br><span class="line">multiCast.imr_interface.S_un.S_addr = <span class="built_in">inet_addr</span>(localIp);</span><br><span class="line">multiCast.imr_multiaddr.S_un.S_addr = <span class="built_in">inet_addr</span>(groupIp);</span><br><span class="line">iRet = <span class="built_in">setsockopt</span>(sock, IPPROTO_IP, IP_ADD_MEMBERSHIP, (<span class="keyword">char</span>*)&amp;multiCast, <span class="built_in"><span class="keyword">sizeof</span></span>(multiCast));</span><br><span class="line"><span class="keyword">if</span> (iRet != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;setsockopt fail:%d\n&quot;</span>, <span class="built_in">WSAGetLastError</span>());</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;udp group start: %d, %d\n&quot;</span>, IPPROTO_IP, IP_ADD_MEMBERSHIP);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in"><span class="keyword">sizeof</span></span>(sockaddr);</span><br><span class="line"><span class="keyword">char</span> strRecv[<span class="number">1024</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">memset</span>(strRecv, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(strRecv));</span><br><span class="line">iRet = <span class="built_in">recvfrom</span>(sock, strRecv, <span class="built_in"><span class="keyword">sizeof</span></span>(strRecv) - <span class="number">1</span>, <span class="number">0</span>, (sockaddr*)&amp;addr, &amp;len);</span><br><span class="line"><span class="keyword">if</span> (iRet &lt;= <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;recvfrom fail:%d&quot;</span>, <span class="built_in">WSAGetLastError</span>());</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;recv data:%s\n&quot;</span>, strRecv);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">closesocket</span>(sock);</span><br><span class="line"><span class="built_in">WSACleanup</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>经过对比发现Qt的源码中地址 mreq4.imr_interface.s_addr 赋值时候 QHostAddress firstIP = addressEntries.first().ip();可能为IPV6地址，导致IPV6地址赋值给IPV4地址，导致组播失败。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (iface.<span class="built_in">isValid</span>()) &#123;</span><br><span class="line">    <span class="keyword">const</span> QList&lt;QNetworkAddressEntry&gt; addressEntries = iface.<span class="built_in">addressEntries</span>();</span><br><span class="line">    <span class="keyword">if</span> (!addressEntries.<span class="built_in">isEmpty</span>()) &#123;</span><br><span class="line">        QHostAddress firstIP = addressEntries.<span class="built_in">first</span>().<span class="built_in">ip</span>();</span><br><span class="line">        mreq4.imr_interface.s_addr = <span class="built_in">htonl</span>(firstIP.<span class="built_in">toIPv4Address</span>());</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        d-&gt;<span class="built_in">setError</span>(QAbstractSocket::NetworkError,</span><br><span class="line">                    QNativeSocketEnginePrivate::NetworkUnreachableErrorString);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    mreq4.imr_interface.s_addr = INADDR_ANY;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><ol><li>更新Qt版本，最新版的Qt已经修复了这个问题<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (iface.<span class="built_in">isValid</span>()) &#123;</span><br><span class="line">        <span class="keyword">const</span> QList&lt;QNetworkAddressEntry&gt; addressEntries = iface.<span class="built_in">addressEntries</span>();</span><br><span class="line">        <span class="keyword">bool</span> found = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> QNetworkAddressEntry &amp;entry : addressEntries) &#123;</span><br><span class="line">            <span class="keyword">const</span> QHostAddress ip = entry.<span class="built_in">ip</span>();</span><br><span class="line">            <span class="keyword">if</span> (ip.<span class="built_in">protocol</span>() == QAbstractSocket::IPv4Protocol) &#123;</span><br><span class="line">                mreq4.imr_interface.s_addr = <span class="built_in">htonl</span>(ip.<span class="built_in">toIPv4Address</span>());</span><br><span class="line">                found = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!found) &#123;</span><br><span class="line">            d-&gt;<span class="built_in">setError</span>(QAbstractSocket::NetworkError,</span><br><span class="line">                        QNativeSocketEnginePrivate::NetworkUnreachableErrorString);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        mreq4.imr_interface.s_addr = INADDR_ANY;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li>修改代码如下<br>在工程文件中添加<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">win32 &#123;</span><br><span class="line">    LIBS += -lWs2_32</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>修改关键代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> Q_OS_WIN32</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;winsock2.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ws2tcpip.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="comment">//...........................</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//Qt 5.7 bug fix, 第一个IP可能为ip v6</span></span><br><span class="line">            <span class="keyword">if</span> (firstIP.<span class="built_in">protocol</span>() == groupAddress.<span class="built_in">protocol</span>()) &#123;</span><br><span class="line">                ok = udpsock-&gt;<span class="built_in">joinMulticastGroup</span>(groupAddress, iface);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> Q_OS_WIN32</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; addressEntries.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">                    QHostAddress addrTemp = addressEntries.<span class="built_in">at</span>(i).<span class="built_in">ip</span>();</span><br><span class="line">                    <span class="keyword">if</span> (addrTemp.<span class="built_in">protocol</span>() == groupAddress.<span class="built_in">protocol</span>()) &#123;</span><br><span class="line">                        ip_mreq multiCast;</span><br><span class="line">                        multiCast.imr_interface.S_un.S_addr = <span class="built_in">inet_addr</span>(</span><br><span class="line">                            addrTemp.<span class="built_in">toString</span>().<span class="built_in">toUtf8</span>().<span class="built_in">constData</span>());</span><br><span class="line">                        multiCast.imr_multiaddr.S_un.S_addr = <span class="built_in">inet_addr</span>(</span><br><span class="line">                            groupAddress.<span class="built_in">toString</span>().<span class="built_in">toUtf8</span>().<span class="built_in">constData</span>());</span><br><span class="line">                        <span class="keyword">int</span> res = <span class="built_in">setsockopt</span>(udpsock-&gt;<span class="built_in">socketDescriptor</span>(),</span><br><span class="line">                                             <span class="number">0</span>,</span><br><span class="line">                                             <span class="number">12</span>,</span><br><span class="line">                                             (<span class="keyword">char</span> *) &amp;multiCast,</span><br><span class="line">                                             <span class="built_in"><span class="keyword">sizeof</span></span>(multiCast));</span><br><span class="line"></span><br><span class="line">                        ok = (res == <span class="number">0</span>);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">                ok = udpsock-&gt;<span class="built_in">joinMulticastGroup</span>(groupAddress, iface);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="血的经验"><a href="#血的经验" class="headerlink" title="血的经验"></a>血的经验</h2><ol><li>使用三方标准工具测试</li><li>使用原始sdk测试</li><li>Qt也可能存在bug</li><li>搜索引擎可能存在误导</li><li>csdn === 田文镜</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Qt" scheme="https://liusblog.top/categories/Qt/"/>
    
    
    <category term="Qt" scheme="https://liusblog.top/tags/Qt/"/>
    
    <category term="组播" scheme="https://liusblog.top/tags/%E7%BB%84%E6%92%AD/"/>
    
    <category term="多网卡" scheme="https://liusblog.top/tags/%E5%A4%9A%E7%BD%91%E5%8D%A1/"/>
    
    <category term="低版本" scheme="https://liusblog.top/tags/%E4%BD%8E%E7%89%88%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>跨平台开发flutter之android</title>
    <link href="https://liusblog.top/2024/08/22/%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91flutter%E4%B9%8Bandroid/"/>
    <id>https://liusblog.top/2024/08/22/%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91flutter%E4%B9%8Bandroid/</id>
    <published>2024-08-22T02:08:37.000Z</published>
    <updated>2024-08-22T02:19:34.199Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="首要参考网站"><a href="#首要参考网站" class="headerlink" title="首要参考网站"></a>首要参考网站</h2><p><a href="https://flutter.cn/">flutter开发者中文网站</a> 上有详细的教程和文档，可以参考</p><h2 id="学习资源"><a href="#学习资源" class="headerlink" title="学习资源"></a>学习资源</h2><ol><li>视频</li></ol><p><a href="https://www.bilibili.com/video/BV1S4411E7LY/?spm_id_from=333.999.0.0&vd_source=9ccaaf121898ceb7d2572b9e691d554f">大地老师的Flutter教程_Dart Flutter3.x入门实战视频教程</a></p><ol start="2"><li>书籍</li></ol><p>[dart语言文档]<a href="https://dart.ac.cn/guides">https://dart.ac.cn/guides</a><br><a href="https://book.flutterchina.club/">Flutter实战</a> </p><h2 id="遇到问题"><a href="#遇到问题" class="headerlink" title="遇到问题"></a>遇到问题</h2><p>其他平台都好说,就是android比较折腾</p><ol start="0"><li>确认android已经配置好了</li><li>先运行flutter doctor，检查环境是否配置正确</li><li>在目录下找 C:\Users\你的用户名.gradle\init.gradle,如果不存在就新建一个，添加以下内容</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        maven &#123; url &#x27;https:<span class="comment">//maven.aliyun.com/repository/public/&#x27; &#125;</span></span><br><span class="line">        maven &#123; url &#x27;https:<span class="comment">//maven.aliyun.com/repository/spring/&#x27;&#125;</span></span><br><span class="line">        maven &#123; url &#x27;https:<span class="comment">//maven.aliyun.com/repository/google/&#x27;&#125;</span></span><br><span class="line">        maven &#123; url &#x27;https:<span class="comment">//maven.aliyun.com/repository/gradle-plugin/&#x27;&#125;</span></span><br><span class="line">        maven &#123; url &#x27;https:<span class="comment">//maven.aliyun.com/repository/spring-plugin/&#x27;&#125;</span></span><br><span class="line">        maven &#123; url &#x27;https:<span class="comment">//maven.aliyun.com/repository/grails-core/&#x27;&#125;</span></span><br><span class="line">        maven &#123; url &#x27;https:<span class="comment">//maven.aliyun.com/repository/apache-snapshots/&#x27;&#125;</span></span><br><span class="line">        maven &#123; url &#x27;https:<span class="comment">//storage.flutter-io.cn/download.flutter.io&#x27; &#125;</span></span><br><span class="line">        google()</span><br><span class="line">        mavenCentral()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="flutter" scheme="https://liusblog.top/categories/flutter/"/>
    
    
    <category term="flutter" scheme="https://liusblog.top/tags/flutter/"/>
    
    <category term="android" scheme="https://liusblog.top/tags/android/"/>
    
    <category term="cross-platform" scheme="https://liusblog.top/tags/cross-platform/"/>
    
  </entry>
  
  <entry>
    <title>Qt一些开发记录</title>
    <link href="https://liusblog.top/2024/08/01/Qt%E4%B8%80%E4%BA%9B%E5%BC%80%E5%8F%91%E8%AE%B0%E5%BD%95/"/>
    <id>https://liusblog.top/2024/08/01/Qt%E4%B8%80%E4%BA%9B%E5%BC%80%E5%8F%91%E8%AE%B0%E5%BD%95/</id>
    <published>2024-08-01T02:47:19.000Z</published>
    <updated>2024-08-01T03:17:18.524Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="矩阵库推荐"><a href="#矩阵库推荐" class="headerlink" title="矩阵库推荐"></a>矩阵库推荐</h2><blockquote><p>在工程中常常需要计算矩阵,这里推荐一个Qt 矩阵库eigen</p></blockquote><h3 id="下载库"><a href="#下载库" class="headerlink" title="下载库"></a>下载库</h3><p><a href="https://eigen.tuxfamily.org/index.php?title=Main_Page">官网</a></p><h3 id="引入到-Qt-工程中"><a href="#引入到-Qt-工程中" class="headerlink" title="引入到 Qt 工程中"></a>引入到 Qt 工程中</h3><p>将 源码中的 的 Eigen 目录拷贝到 Qt 工程的目录<br>目录中新建 eigen.pri 文件内容如下<br>INCLUDEPATH += $$PWD</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>新建 C++类<br>在头文件中添加</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Eigen/Dense&gt;</span></span></span><br></pre></td></tr></table></figure><p>在 cpp 文件中添加</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> Eigen;</span><br><span class="line"></span><br><span class="line"><span class="comment">//注解:Eigen::Matrix3f 表示 3x3 的矩阵,其中 f 表示 float 类型</span></span><br><span class="line"><span class="comment">//同理如果想申请多维度的矩阵,只需要将 3 替换为其他数字即可,位置用X表示</span></span><br><span class="line"><span class="comment">//如MatrixXd 表示多维度 double 类型的矩阵</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//.......</span></span><br><span class="line"><span class="comment">//一维矩阵</span></span><br><span class="line"><span class="function">VectorXf <span class="title">V</span><span class="params">(<span class="number">20</span>)</span></span>;</span><br><span class="line"><span class="comment">//赋值,一维元素引用和赋值</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++)&#123;</span><br><span class="line">    <span class="built_in">V</span>(i) = i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">MatrixXf <span class="title">M</span><span class="params">(<span class="number">10</span>, <span class="number">20</span>)</span></span>;</span><br><span class="line"><span class="comment">//矩阵赋值和引用</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">20</span>; j++)&#123;</span><br><span class="line">        <span class="built_in">M</span>(i, j) = (i * <span class="number">20</span> + j);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//矩阵相乘</span></span><br><span class="line"><span class="function">VectorXf <span class="title">V2</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line">V2 = M * V;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 计算伪逆</span></span><br><span class="line"><span class="function">Eigen::MatrixXd <span class="title">A</span><span class="params">(<span class="number">4</span>, <span class="number">3</span>)</span></span>;</span><br><span class="line">A &lt;&lt; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>,</span><br><span class="line">    <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>,</span><br><span class="line">    <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>,</span><br><span class="line">    <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>;</span><br><span class="line"></span><br><span class="line">Eigen::MatrixXd pinvA = A.<span class="built_in">completeOrthogonalDecomposition</span>().<span class="built_in">pseudoInverse</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//此处不可连乘</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="TIPS"><a href="#TIPS" class="headerlink" title="TIPS"></a>TIPS</h3><p>如果不慎失误矩阵的维数不一致可能导致运行时 assert 错误,经过查看源代码发现可以定义 EIGEN_NO_DEBUG 即可,更简单的方法为在 pri 文件中添加语句,修改后的 pri 文件如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#CONFIG(debug, debug|release):&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"><span class="comment">#else&#123;</span></span><br><span class="line"><span class="comment">##release版本</span></span><br><span class="line"><span class="comment">#    DEFINES += EIGEN_NO_DEBUG</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line">DEFINES += EIGEN_NO_DEBUG</span><br><span class="line">INCLUDEPATH += $<span class="variable">$PWD</span></span><br></pre></td></tr></table></figure><h2 id="C语言数组与指针"><a href="#C语言数组与指针" class="headerlink" title="C语言数组与指针"></a>C语言数组与指针</h2><h3 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h3><p>大家都知道声明一个二维数组, 但是在实际使用中发现二维数组不够灵活,如果要转为一维的数组指针.<br>思考如何声明一个二维的数组指针呢?如<code>double a[2][3]</code>;的类型竟然是 <strong>double(*)[3]</strong>;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将二维转为一维</span></span><br><span class="line"><span class="keyword">double</span> a[<span class="number">2</span>][<span class="number">3</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;;</span><br><span class="line"><span class="keyword">double</span> *b = (<span class="keyword">double</span>*)a;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//将一维指针强制转为二维数组引用</span></span><br><span class="line"><span class="keyword">double</span> c[<span class="number">6</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;;</span><br><span class="line"><span class="comment">//转为 2x3数组</span></span><br><span class="line"><span class="built_in"><span class="keyword">double</span></span> (*d)[<span class="number">3</span>] = (<span class="built_in"><span class="keyword">double</span></span>(*)[<span class="number">3</span>])(c);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="使用举例"><a href="#使用举例" class="headerlink" title="使用举例"></a>使用举例</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将指针转为二维数组,方便引用不然还要计算下标</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun1</span><span class="params">(<span class="keyword">int</span>* p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in"><span class="keyword">int</span></span>(*pp)[<span class="number">32</span>] = (<span class="built_in"><span class="keyword">int</span></span>(*)[<span class="number">32</span>])p;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; %d %d, %d\n&quot;</span>, p[i + j * <span class="number">32</span>], pp[j][i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> b[<span class="number">4</span>][<span class="number">32</span>] =  &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">32</span>; j++) &#123;</span><br><span class="line">            b[i][j] = j;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//工具提示c为 int(*)[32] 类型</span></span><br><span class="line">    <span class="keyword">auto</span> c = b;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">fun1</span>((<span class="keyword">int</span>*)b);</span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Qt" scheme="https://liusblog.top/categories/Qt/"/>
    
    
    <category term="Qt" scheme="https://liusblog.top/tags/Qt/"/>
    
    <category term="C++" scheme="https://liusblog.top/tags/C/"/>
    
    <category term="数组" scheme="https://liusblog.top/tags/%E6%95%B0%E7%BB%84/"/>
    
    <category term="指针" scheme="https://liusblog.top/tags/%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>frp远程穿透</title>
    <link href="https://liusblog.top/2024/04/24/frp%E8%BF%9C%E7%A8%8B%E7%A9%BF%E9%80%8F/"/>
    <id>https://liusblog.top/2024/04/24/frp%E8%BF%9C%E7%A8%8B%E7%A9%BF%E9%80%8F/</id>
    <published>2024-04-24T05:25:18.000Z</published>
    <updated>2024-10-26T01:56:57.124Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>说重点, 要有服务器, 或者使用别人提供的服务如:<br>[✓] <a href="https://frpee.com/">frpee服务</a><br>[✓] <a href="https://www.chmlfrp.cn/">ChmlFrp</a><br>[x] <a href="https://www.natfrp.com/">SakuraFrp樱花</a></p></blockquote><h2 id="自建服务器"><a href="#自建服务器" class="headerlink" title="自建服务器"></a>自建服务器</h2><p>需要自己购买服务器, 同时设置frps.ini文件, 本文不涉及</p><h2 id="使用第三方服务"><a href="#使用第三方服务" class="headerlink" title="使用第三方服务"></a>使用第三方服务</h2><p>使用上述frpee或者樱花服务<br>以frpee为例在注册好之后,会有示例frpc.ini文件配置(<strong>最新版为frpc.toml</strong>)</p><p>以自定义com为例<br>手动添加[com]小节, 有四个字段</p><table><thead><tr><th>字段</th><th>含义</th><th>说明</th></tr></thead><tbody><tr><td>type</td><td>类型</td><td>一般为tcp或者udp</td></tr><tr><td>local_ip</td><td>本地地址</td><td>一般为 127.0.0.1</td></tr><tr><td>local_port</td><td>本地端口</td><td>自定义</td></tr><tr><td>remote_port</td><td>暴露出去的端口</td><td>自定义</td></tr></tbody></table><p>比如要把本地的 127.0.0.1:9911的tcp服务器暴露出去<br>则远程网络连接为free.frpee.com:10624 (可能要转为114.132.227.97:10624)<br>如下图所示<br><img src="/photos/frp%E8%BF%9C%E7%A8%8B%E7%A9%BF%E9%80%8F/%E7%A4%BA%E4%BE%8B.webp" alt="图片"></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = free.frpee.com</span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">admin_addr</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">admin_port</span> = <span class="number">7400</span></span><br><span class="line"><span class="attr">admin_user</span> = admin</span><br><span class="line"><span class="attr">admin_pwd</span> = admin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 认证重点，输入你注册的账号密码 </span></span><br><span class="line"><span class="attr">user</span> = frpee用户名</span><br><span class="line"><span class="attr">meta_password</span> = frpee注册密码</span><br><span class="line"></span><br><span class="line"><span class="comment">#下面根据情况自行修改,完全遵循frp配置</span></span><br><span class="line"></span><br><span class="line"><span class="section">[com]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">9911</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">10624</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#[yclj]</span></span><br><span class="line"><span class="comment">#type = tcp</span></span><br><span class="line"><span class="comment">#local_ip = 127.0.0.1</span></span><br><span class="line"><span class="comment">#local_port = 3389</span></span><br><span class="line"><span class="comment">#remote_port = 10624</span></span><br><span class="line"><span class="comment"># [web2]</span></span><br><span class="line"><span class="comment"># type = http</span></span><br><span class="line"><span class="comment"># local_port = 8080</span></span><br><span class="line"><span class="comment"># custom_domains = youdomain.com</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="杂谈" scheme="https://liusblog.top/categories/%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="frp" scheme="https://liusblog.top/tags/frp/"/>
    
    <category term="内网穿透" scheme="https://liusblog.top/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>QtCreator系统找不到指定的路径</title>
    <link href="https://liusblog.top/2023/12/26/QtCreator%E7%B3%BB%E7%BB%9F%E6%89%BE%E4%B8%8D%E5%88%B0%E6%8C%87%E5%AE%9A%E7%9A%84%E8%B7%AF%E5%BE%84/"/>
    <id>https://liusblog.top/2023/12/26/QtCreator%E7%B3%BB%E7%BB%9F%E6%89%BE%E4%B8%8D%E5%88%B0%E6%8C%87%E5%AE%9A%E7%9A%84%E8%B7%AF%E5%BE%84/</id>
    <published>2023-12-26T03:37:20.000Z</published>
    <updated>2024-04-12T03:56:59.352Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>在windows上使用Qt5.7.0版本时打开QtCreator就提示 系统找不到指定的路径,强迫症患者忍不了,在编译了QtCreator源码之后终于把元凶找出特此记录</p></blockquote><p><img src="/photos/QtCreator%E7%B3%BB%E7%BB%9F%E6%89%BE%E4%B8%8D%E5%88%B0%E6%8C%87%E5%AE%9A%E7%9A%84%E8%B7%AF%E5%BE%84/%E7%B3%BB%E7%BB%9F%E6%89%BE%E4%B8%8D%E5%88%B0%E6%8C%87%E5%AE%9A%E7%9A%84%E8%B7%AF%E5%BE%84.webp" alt="图片"></p><h2 id="跟踪"><a href="#跟踪" class="headerlink" title="跟踪"></a>跟踪</h2><p>发现是读取文件C:\Qt\Qt5.7.0\5.7\mingw53_32\mkspecs\features\default_pre.prf时报错<br><img src="/photos/QtCreator%E7%B3%BB%E7%BB%9F%E6%89%BE%E4%B8%8D%E5%88%B0%E6%8C%87%E5%AE%9A%E7%9A%84%E8%B7%AF%E5%BE%84/%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0.webp" alt="图片"></p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>修改文件中的QMAKE_DIR_SEP 为DIR_SEPARATOR,根源可能是/dev/null之类的文件为linux系统所有,修改后问题解决<br><img src="/photos/QtCreator%E7%B3%BB%E7%BB%9F%E6%89%BE%E4%B8%8D%E5%88%B0%E6%8C%87%E5%AE%9A%E7%9A%84%E8%B7%AF%E5%BE%84/default_pre.webp" alt="图片"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Qt" scheme="https://liusblog.top/categories/Qt/"/>
    
    
    <category term="系统找不到指定的路径" scheme="https://liusblog.top/tags/%E7%B3%BB%E7%BB%9F%E6%89%BE%E4%B8%8D%E5%88%B0%E6%8C%87%E5%AE%9A%E7%9A%84%E8%B7%AF%E5%BE%84/"/>
    
    <category term="QtCreator" scheme="https://liusblog.top/tags/QtCreator/"/>
    
    <category term="Windows" scheme="https://liusblog.top/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>windows平台Qt的setGeometry警告</title>
    <link href="https://liusblog.top/2023/11/29/windows%E5%B9%B3%E5%8F%B0Qt%E7%9A%84setGeometry%E8%AD%A6%E5%91%8A/"/>
    <id>https://liusblog.top/2023/11/29/windows%E5%B9%B3%E5%8F%B0Qt%E7%9A%84setGeometry%E8%AD%A6%E5%91%8A/</id>
    <published>2023-11-29T05:53:28.000Z</published>
    <updated>2023-11-30T07:00:14.430Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>经常出现setGeometry: Unable to set geometry</p></blockquote><h1 id="查看调用堆栈如下"><a href="#查看调用堆栈如下" class="headerlink" title="查看调用堆栈如下"></a>查看调用堆栈如下</h1><p><img src="/photos/windows%E5%B9%B3%E5%8F%B0Qt%E7%9A%84setGeometry%E8%AD%A6%E5%91%8A/%E8%B0%83%E7%94%A8%E5%A0%86%E6%A0%88.webp" alt="图片"><br>查看showEvent函数发现如果没有Qt::WA_Moved属性则会调用<em>adjustPosition</em>函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">QDialog::showEvent</span><span class="params">(QShowEvent *event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!event-&gt;<span class="built_in">spontaneous</span>() &amp;&amp; !<span class="built_in">testAttribute</span>(Qt::WA_Moved)) &#123;</span><br><span class="line">        Qt::WindowStates  state = <span class="built_in">windowState</span>();</span><br><span class="line">        <span class="built_in">adjustPosition</span>(<span class="built_in">parentWidget</span>());</span><br><span class="line">        <span class="built_in">setAttribute</span>(Qt::WA_Moved, <span class="literal">false</span>); <span class="comment">// not really an explicit position</span></span><br><span class="line">        <span class="keyword">if</span> (state != <span class="built_in">windowState</span>())</span><br><span class="line">            <span class="built_in">setWindowState</span>(state);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>在调用show(); 以及相似函数前调用<br>设置Qt::WA_Moved刷卡</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setAttribute</span>(Qt::WA_Moved, <span class="literal">true</span>);</span><br><span class="line"><span class="built_in">showMaximized</span>();</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Qt" scheme="https://liusblog.top/categories/Qt/"/>
    
    
    <category term="Qt" scheme="https://liusblog.top/tags/Qt/"/>
    
    <category term="Windows" scheme="https://liusblog.top/tags/Windows/"/>
    
    <category term="setGeometry" scheme="https://liusblog.top/tags/setGeometry/"/>
    
  </entry>
  
  <entry>
    <title>qtcreator结合git实现编译历史</title>
    <link href="https://liusblog.top/2023/10/27/qtcreator%E7%BB%93%E5%90%88git%E5%AE%9E%E7%8E%B0%E7%BC%96%E8%AF%91%E5%8E%86%E5%8F%B2/"/>
    <id>https://liusblog.top/2023/10/27/qtcreator%E7%BB%93%E5%90%88git%E5%AE%9E%E7%8E%B0%E7%BC%96%E8%AF%91%E5%8E%86%E5%8F%B2/</id>
    <published>2023-10-27T08:20:55.000Z</published>
    <updated>2024-04-12T03:56:54.740Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>如果长期维护一个软件最好能在软件中可以看到软件的更新历史,由于git是很好的版本管理软件于是有了本文</p></blockquote><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="/photos/qtcreator%E7%BB%93%E5%90%88git%E5%AE%9E%E7%8E%B0%E7%BC%96%E8%AF%91%E5%8E%86%E5%8F%B2/%E6%95%88%E6%9E%9C.webp" alt="图片"></p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>其实实现原理很简单,就是利用git log 功能将历史导出到资源文件中,结合Qt的资源系统需要时读取显示即可<br>Qt有QMAKE_PRE_LINK变量,给此变量赋值可在编译之前执行一些指令</p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>以windows为例如下所示</p><p>QMAKE_PRE_LINK  += $$PWD/githistory.bat</p><ol><li><p>windows平台</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> %~dp0</span><br><span class="line"><span class="built_in">del</span>  /S qrc_rc.cpp</span><br><span class="line"><span class="built_in">echo</span> 编译时间:  <span class="variable">%date:~0,10%</span> <span class="variable">%time%</span> &gt; src/res/version.txt</span><br><span class="line"><span class="built_in">echo</span>.&gt;&gt; src/res/version.txt</span><br><span class="line">git log --<span class="built_in">date</span>=<span class="built_in">format</span>-local:&quot;<span class="variable">%%Y</span>-<span class="variable">%%m</span>-<span class="variable">%%d</span> <span class="variable">%%H</span>:<span class="variable">%%M</span>:<span class="variable">%%S</span>&quot; --pretty=&quot;<span class="built_in">format</span>:<span class="variable">%%c</span>d  <span class="variable">%%s</span>&quot; &gt;&gt; src/res/version.txt</span><br></pre></td></tr></table></figure></li><li><p>linux平台</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/bin/bash</span></span><br><span class="line"><span class="built_in">cd</span> `dirname <span class="variable">$0</span>`</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$PWD</span></span><br><span class="line"><span class="built_in">echo</span> 编译时间:  `date <span class="string">&quot;+%Y_%m_%d %H:%M:%S&quot;</span>` &gt; src/res/version.txt</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; &quot;</span> &gt;&gt; src/res/version.txt</span><br><span class="line"></span><br><span class="line">git <span class="built_in">log</span> --date=format-local:<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span> --pretty=<span class="string">&#x27;format:%cd  %s&#x27;</span> &gt;&gt; src/res/version.txt</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Qt" scheme="https://liusblog.top/categories/Qt/"/>
    
    
    <category term="QtCreator" scheme="https://liusblog.top/tags/QtCreator/"/>
    
    <category term="git" scheme="https://liusblog.top/tags/git/"/>
    
    <category term="提交历史" scheme="https://liusblog.top/tags/%E6%8F%90%E4%BA%A4%E5%8E%86%E5%8F%B2/"/>
    
    <category term="自动化" scheme="https://liusblog.top/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Windows下Mingw版本的FFMPEG源码编译</title>
    <link href="https://liusblog.top/2022/07/15/Windows%E4%B8%8BMingw%E7%89%88%E6%9C%AC%E7%9A%84FFMPEG%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/"/>
    <id>https://liusblog.top/2022/07/15/Windows%E4%B8%8BMingw%E7%89%88%E6%9C%AC%E7%9A%84FFMPEG%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/</id>
    <published>2022-07-15T14:02:38.000Z</published>
    <updated>2022-08-03T13:28:57.158Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>众所周知FFMPEG是非常牛逼的存在,但是在学习FFMPEG时一般都是依库的形式调用,总有种隔靴搔痒的感觉,于是爆肝了两天终于把代码加入到Qt工程中了</p></blockquote><h2 id="Mingw-版本编译-FFMPEG-动态静态库版本"><a href="#Mingw-版本编译-FFMPEG-动态静态库版本" class="headerlink" title="Mingw 版本编译 FFMPEG(动态静态库版本)"></a>Mingw 版本编译 FFMPEG(动态静态库版本)</h2><p>前置条件:</p><ol start="0"><li>先跳坑在<a href="https://liusblog.top/2019/05/21/ubuntu%E7%BC%96%E8%AF%91FFMPEG%E5%92%8Cffplay/#Window%E7%8E%AF%E5%A2%83">ubuntu编译FFMPEG和ffplay</a>中的Window小节有详细介绍,这个还是比较重要的,起码有个感性的认识</li><li>一个bash解析器,这个选git就行了,程序员还能不装个这?</li><li>mingw编译器一套(Qt自带的就行了)</li><li>打开git终端输入以下命令 (我是装了cywin以及另外的mingw64套件)所以要直接将PATH变量清零(只保留mingw和git命令环境),还有个要注意DOS中的c:\这里要改成/c,因为冒号 <strong>:</strong> 在<em>linux</em>中起到路径分割的作用, 而<em>windows</em>下是分号 <strong>;</strong> </li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=/c/Qt/Qt5.7.0/5.7/mingw53_32/bin:/c/Qt/Qt5.7.0/Tools/mingw530_32/bin:/c/programes/Git/usr/bin/</span><br><span class="line"> </span><br><span class="line"><span class="built_in">cd</span> ffmepg</span><br><span class="line">./configure</span><br></pre></td></tr></table></figure><h2 id="移到Qt中"><a href="#移到Qt中" class="headerlink" title="移到Qt中"></a>移到Qt中</h2><p>其实实现的有点挫(只实现了window环境下的x86_32位),为每个子模块编写一个pri文件包含起来</p><h3 id="重要知识点"><a href="#重要知识点" class="headerlink" title="重要知识点:"></a>重要知识点:</h3><ol><li>如何使用qmake编译汇编文件asm<br>参考mingw链接库版本中的下面一句话,结合QMake的非公开wiki(见文末)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yasm -f win32 -DPREFIX -I./ -I.// -Ilibavutil/ -Pconfig.asm    -o libavutil/fixed_dsp.o libavutil/fixed_dsp.asm</span><br></pre></td></tr></table></figure>可以新建一个yasm.pri内容如下</li></ol><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ASM_INCLUDE +=\</span><br><span class="line">$$PWD/config.asm</span><br><span class="line"></span><br><span class="line"><span class="comment">#ASM_SOURCE += xxxxx.asm</span></span><br><span class="line"></span><br><span class="line">ASM.name = yasm $&#123;QMAKE_FILE_IN&#125;</span><br><span class="line"><span class="comment">#所用到的汇编文件</span></span><br><span class="line">ASM.input = ASM_SOURCE</span><br><span class="line">ASM.variable_out = OBJECTS</span><br><span class="line">ASM.commands = yasm -f win32 -DPREFIX -I$$PWD -I$$PWD/.. -I$$PWD/../.. -P$$&#123;ASM_INCLUDE&#125; $&#123;QMAKE_FILE_NAME&#125;  -o $&#123;QMAKE_FILE_IN_BASE&#125;$$&#123;first(QMAKE_EXT_OBJ)&#125;</span><br><span class="line">ASM.output = $&#123;QMAKE_FILE_IN_BASE&#125;$$&#123;first(QMAKE_EXT_OBJ)&#125;</span><br><span class="line"></span><br><span class="line">QMAKE_EXTRA_COMPILERS += ASM</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>编译步骤<br>依次为libavutil, libswresample, libavcodec, libavformat, libswscale, libpostproc, libavdevice, libavfilter, 其中第一个必须编译libavutil模块,这个是个工具库,所有其他的部分可能会依赖它, 然后照猫画虎编译其他模块大致按照上面顺序, 在遇到依赖的就延后处理就是了</li></ol><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><ol><li>在克隆好的ffmpeg 中先执行 .configure命令 得到一些必要的配置文件(config.h, config_components.h等文件)</li><li>新建一个ffmpeg.pri</li></ol><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">INCLUDEPATH += $$PWD</span><br><span class="line">INCLUDEPATH += $$PWD/compat/atomics/pthread</span><br><span class="line"></span><br><span class="line">HEADERS += $$PWD/config.h\</span><br><span class="line">$$PWD/config_components.h\</span><br><span class="line">$$PWD/compat/w32pthreads.h</span><br><span class="line"></span><br><span class="line">SOURCES += $$PWD/compat/atomics/pthread/stdatomic.c</span><br><span class="line"></span><br><span class="line"><span class="comment"># 引入编译器</span></span><br><span class="line"><span class="keyword">include</span>($$PWD/yasm.pri)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 引入各个模块</span></span><br><span class="line"><span class="keyword">include</span>($$PWD/libavutil/libavutil.pri)</span><br><span class="line"><span class="keyword">include</span>($$PWD/libswresample/libswresample.pri)</span><br><span class="line"><span class="keyword">include</span>($$PWD/libavcodec/libavcodec.pri)</span><br><span class="line"><span class="keyword">include</span>($$PWD/libavformat/libavformat.pri)</span><br><span class="line"><span class="keyword">include</span>($$PWD/libswscale/libswscale.pri)</span><br><span class="line"><span class="keyword">include</span>($$PWD/libavdevice/libavdevice.pri)</span><br><span class="line"><span class="keyword">include</span>($$PWD/libavfilter/libavfilter.pri)</span><br><span class="line"><span class="keyword">include</span>($$PWD/libpostproc/libpostproc.pri)</span><br><span class="line"></span><br><span class="line"><span class="comment">#下面这些是为了利用configure的结果</span></span><br><span class="line">DEFINES += HAVE_AV_CONFIG_H</span><br><span class="line"></span><br><span class="line"><span class="comment">#这句可以避免一些编译错误</span></span><br><span class="line">DEFINES += _WIN32_WINNT=0x0600 _POSIX_C_SOURCE=200112 _XOPEN_SOURCE=600 ZLIB_CONST</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这一句可以避免文件同名冲突比如libavutil有两个cpu.c文件,编译时会遇到重定义错误</span></span><br><span class="line">CONFIG += object_parallel_to_source</span><br><span class="line"><span class="comment">#CONFIG += object_with_source</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下面这句不加, 在debug模式下会出现&#x27;asm&#x27; operand has impossible constraints的错误</span></span><br><span class="line">QMAKE_CFLAGS=  -fomit-frame-pointer</span><br><span class="line"></span><br><span class="line"><span class="comment"># 其他抠出来的可以不用</span></span><br><span class="line"><span class="comment">#QMAKE_CXXFLAGS = -D_ISOC99_SOURCE -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -U__STRICT_ANSI__ -D__USE_MINGW_ANSI_STDIO=1 -D__printf__=__gnu_printf__ -D_WIN32_WINNT=0x0600 -D_POSIX_C_SOURCE=200112 -D_XOPEN_SOURCE=600 -DZLIB_CONST -D__STDC_CONSTANT_MACROS -std=c++11</span></span><br><span class="line"><span class="comment">#QMAKE_CFLAGS=   -std=c11 -fomit-frame-pointer -g -Wdeclaration-after-statement\</span></span><br><span class="line"><span class="comment"># -Wall -Wdisabled-optimization -Wpointer-arith -Wredundant-decls -Wwrite-strings\</span></span><br><span class="line"><span class="comment"># -Wtype-limits -Wundef -Wmissing-prototypes -Wstrict-prototypes -Wempty-body\</span></span><br><span class="line"><span class="comment"># -Wno-parentheses -Wno-switch -Wno-format-zero-length -Wno-pointer-sign\</span></span><br><span class="line"><span class="comment"># -Wno-char-subscripts -O3 -fno-math-errno -fno-signed-zeros -fno-tree-vectorize\</span></span><br><span class="line"><span class="comment"># -Werror=format-security -Werror=implicit-function-declaration -Werror=missing-prototypes\</span></span><br><span class="line"><span class="comment"># -Werror=return-type -Werror=vla -Wformat -fdiagnostics-color=auto -Wno-maybe-uninitialized</span></span><br><span class="line"></span><br><span class="line">LIBS += -liconv -lm -latomic -lmfuuid  -lz -lbcrypt -lsecur32</span><br><span class="line"><span class="section">win32:&#123;</span></span><br><span class="line">    LIBS += -lole32 -lws2_32 -lgdi32 -lshell32  -lstrmiids -luser32 -lvfw32 -loleaut32 -lpsapi -lshlwapi -luuid</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li>参考每个模块文件夹下的makefile文件编写pri文件<br>写python脚本处理一下内容大致为以下步骤</li></ol><ul><li>将 <em>makefile</em> 文件中的OBJS中的各个.o替换成同名的.c</li><li>遇到形如 OBJS-$(CONFIG_CUDA) 之类的查找config.h中CONFIG_CUDA的定义如果为1 则替换.o 为.c或者.asm,如果为0则注释掉</li><li>遇到重名的.c 只保留一个(汇编只会警告,c文件重复会报错….)</li><li>到每个模块目录如果存在<strong>架构文件夹</strong>(如x86)则找到 <em>makefile</em> 参照建立对应的.pri文件</li></ul><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br></pre></td><td class="code"><pre><span class="line">NAME = avutil</span><br><span class="line">DESC = FFmpeg utility library</span><br><span class="line"></span><br><span class="line">HEADERS = adler32.h                                                     \</span><br><span class="line">          aes.h                                                         \</span><br><span class="line">          aes_ctr.h                                                     \</span><br><span class="line">          attributes.h                                                  \</span><br><span class="line">          audio_fifo.h                                                  \</span><br><span class="line">          avassert.h                                                    \</span><br><span class="line">          avstring.h                                                    \</span><br><span class="line">          avutil.h                                                      \</span><br><span class="line">          base64.h                                                      \</span><br><span class="line">          blowfish.h                                                    \</span><br><span class="line">          bprint.h                                                      \</span><br><span class="line">          bswap.h                                                       \</span><br><span class="line">          buffer.h                                                      \</span><br><span class="line">          cast5.h                                                       \</span><br><span class="line">          camellia.h                                                    \</span><br><span class="line">          channel_layout.h                                              \</span><br><span class="line">          common.h                                                      \</span><br><span class="line">          cpu.h                                                         \</span><br><span class="line">          crc.h                                                         \</span><br><span class="line">          csp.h                                                         \</span><br><span class="line">          des.h                                                         \</span><br><span class="line">          detection_bbox.h                                              \</span><br><span class="line">          dict.h                                                        \</span><br><span class="line">          display.h                                                     \</span><br><span class="line">          dovi_meta.h                                                   \</span><br><span class="line">          downmix_info.h                                                \</span><br><span class="line">          encryption_info.h                                             \</span><br><span class="line">          error.h                                                       \</span><br><span class="line">          eval.h                                                        \</span><br><span class="line">          fifo.h                                                        \</span><br><span class="line">          file.h                                                        \</span><br><span class="line">          frame.h                                                       \</span><br><span class="line">          hash.h                                                        \</span><br><span class="line">          hdr_dynamic_metadata.h                                        \</span><br><span class="line">          hdr_dynamic_vivid_metadata.h                                  \</span><br><span class="line">          hmac.h                                                        \</span><br><span class="line">          hwcontext.h                                                   \</span><br><span class="line">          hwcontext_cuda.h                                              \</span><br><span class="line">          hwcontext_d3d11va.h                                           \</span><br><span class="line">          hwcontext_drm.h                                               \</span><br><span class="line">          hwcontext_dxva2.h                                             \</span><br><span class="line">          hwcontext_qsv.h                                               \</span><br><span class="line">          hwcontext_mediacodec.h                                        \</span><br><span class="line">          hwcontext_opencl.h                                            \</span><br><span class="line">          hwcontext_vaapi.h                                             \</span><br><span class="line">          hwcontext_videotoolbox.h                                      \</span><br><span class="line">          hwcontext_vdpau.h                                             \</span><br><span class="line">          hwcontext_vulkan.h                                            \</span><br><span class="line">          imgutils.h                                                    \</span><br><span class="line">          intfloat.h                                                    \</span><br><span class="line">          intreadwrite.h                                                \</span><br><span class="line">          lfg.h                                                         \</span><br><span class="line">          log.h                                                         \</span><br><span class="line">          lzo.h                                                         \</span><br><span class="line">          macros.h                                                      \</span><br><span class="line">          mathematics.h                                                 \</span><br><span class="line">          mastering_display_metadata.h                                  \</span><br><span class="line">          md5.h                                                         \</span><br><span class="line">          mem.h                                                         \</span><br><span class="line">          motion_vector.h                                               \</span><br><span class="line">          murmur3.h                                                     \</span><br><span class="line">          opt.h                                                         \</span><br><span class="line">          parseutils.h                                                  \</span><br><span class="line">          pixdesc.h                                                     \</span><br><span class="line">          pixelutils.h                                                  \</span><br><span class="line">          pixfmt.h                                                      \</span><br><span class="line">          random_seed.h                                                 \</span><br><span class="line">          rc4.h                                                         \</span><br><span class="line">          rational.h                                                    \</span><br><span class="line">          replaygain.h                                                  \</span><br><span class="line">          ripemd.h                                                      \</span><br><span class="line">          samplefmt.h                                                   \</span><br><span class="line">          sha.h                                                         \</span><br><span class="line">          sha512.h                                                      \</span><br><span class="line">          spherical.h                                                   \</span><br><span class="line">          stereo3d.h                                                    \</span><br><span class="line">          threadmessage.h                                               \</span><br><span class="line">          time.h                                                        \</span><br><span class="line">          timecode.h                                                    \</span><br><span class="line">          timestamp.h                                                   \</span><br><span class="line">          tree.h                                                        \</span><br><span class="line">          twofish.h                                                     \</span><br><span class="line">          uuid.h                                                        \</span><br><span class="line">          version.h                                                     \</span><br><span class="line">          video_enc_params.h                                            \</span><br><span class="line">          xtea.h                                                        \</span><br><span class="line">          tea.h                                                         \</span><br><span class="line">          tx.h                                                          \</span><br><span class="line">          film_grain_params.h                                           \</span><br><span class="line"></span><br><span class="line">ARCH_HEADERS = bswap.h                                                  \</span><br><span class="line">               intmath.h                                                \</span><br><span class="line">               intreadwrite.h                                           \</span><br><span class="line">               timer.h                                                  \</span><br><span class="line"></span><br><span class="line">BUILT_HEADERS = avconfig.h                                              \</span><br><span class="line">                ffversion.h</span><br><span class="line"></span><br><span class="line">OBJS = adler32.o                                                        \</span><br><span class="line">       aes.o                                                            \</span><br><span class="line">       aes_ctr.o                                                        \</span><br><span class="line">       audio_fifo.o                                                     \</span><br><span class="line">       avstring.o                                                       \</span><br><span class="line">       avsscanf.o                                                       \</span><br><span class="line">       base64.o                                                         \</span><br><span class="line">       blowfish.o                                                       \</span><br><span class="line">       bprint.o                                                         \</span><br><span class="line">       buffer.o                                                         \</span><br><span class="line">       cast5.o                                                          \</span><br><span class="line">       camellia.o                                                       \</span><br><span class="line">       channel_layout.o                                                 \</span><br><span class="line">       color_utils.o                                                    \</span><br><span class="line">       cpu.o                                                            \</span><br><span class="line">       crc.o                                                            \</span><br><span class="line">       csp.o                                                            \</span><br><span class="line">       des.o                                                            \</span><br><span class="line">       detection_bbox.o                                                 \</span><br><span class="line">       dict.o                                                           \</span><br><span class="line">       display.o                                                        \</span><br><span class="line">       dovi_meta.o                                                      \</span><br><span class="line">       downmix_info.o                                                   \</span><br><span class="line">       encryption_info.o                                                \</span><br><span class="line">       error.o                                                          \</span><br><span class="line">       eval.o                                                           \</span><br><span class="line">       fifo.o                                                           \</span><br><span class="line">       file.o                                                           \</span><br><span class="line">       file_open.o                                                      \</span><br><span class="line">       float_dsp.o                                                      \</span><br><span class="line">       fixed_dsp.o                                                      \</span><br><span class="line">       frame.o                                                          \</span><br><span class="line">       hash.o                                                           \</span><br><span class="line">       hdr_dynamic_metadata.o                                           \</span><br><span class="line">       hdr_dynamic_vivid_metadata.o                                     \</span><br><span class="line">       hmac.o                                                           \</span><br><span class="line">       hwcontext.o                                                      \</span><br><span class="line">       imgutils.o                                                       \</span><br><span class="line">       integer.o                                                        \</span><br><span class="line">       intmath.o                                                        \</span><br><span class="line">       lfg.o                                                            \</span><br><span class="line">       lls.o                                                            \</span><br><span class="line">       log.o                                                            \</span><br><span class="line">       log2_tab.o                                                       \</span><br><span class="line">       lzo.o                                                            \</span><br><span class="line">       mathematics.o                                                    \</span><br><span class="line">       mastering_display_metadata.o                                     \</span><br><span class="line">       md5.o                                                            \</span><br><span class="line">       mem.o                                                            \</span><br><span class="line">       murmur3.o                                                        \</span><br><span class="line">       opt.o                                                            \</span><br><span class="line">       parseutils.o                                                     \</span><br><span class="line">       pixdesc.o                                                        \</span><br><span class="line">       pixelutils.o                                                     \</span><br><span class="line">       random_seed.o                                                    \</span><br><span class="line">       rational.o                                                       \</span><br><span class="line">       reverse.o                                                        \</span><br><span class="line">       rc4.o                                                            \</span><br><span class="line">       ripemd.o                                                         \</span><br><span class="line">       samplefmt.o                                                      \</span><br><span class="line">       sha.o                                                            \</span><br><span class="line">       sha512.o                                                         \</span><br><span class="line">       slicethread.o                                                    \</span><br><span class="line">       spherical.o                                                      \</span><br><span class="line">       stereo3d.o                                                       \</span><br><span class="line">       threadmessage.o                                                  \</span><br><span class="line">       time.o                                                           \</span><br><span class="line">       timecode.o                                                       \</span><br><span class="line">       tree.o                                                           \</span><br><span class="line">       twofish.o                                                        \</span><br><span class="line">       utils.o                                                          \</span><br><span class="line">       xga_font_data.o                                                  \</span><br><span class="line">       xtea.o                                                           \</span><br><span class="line">       tea.o                                                            \</span><br><span class="line">       tx.o                                                             \</span><br><span class="line">       tx_float.o                                                       \</span><br><span class="line">       tx_double.o                                                      \</span><br><span class="line">       tx_int32.o                                                       \</span><br><span class="line">       uuid.o                                                           \</span><br><span class="line">       version.o                                                        \</span><br><span class="line">       video_enc_params.o                                               \</span><br><span class="line">       film_grain_params.o                                              \</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">OBJS-<span class="variable">$(CONFIG_CUDA)</span>                     += hwcontext_cuda.o</span><br><span class="line">OBJS-<span class="variable">$(CONFIG_D3D11VA)</span>                  += hwcontext_d3d11va.o</span><br><span class="line">OBJS-<span class="variable">$(CONFIG_DXVA2)</span>                    += hwcontext_dxva2.o</span><br><span class="line">OBJS-<span class="variable">$(CONFIG_LIBDRM)</span>                   += hwcontext_drm.o</span><br><span class="line">OBJS-<span class="variable">$(CONFIG_MACOS_KPERF)</span>              += macos_kperf.o</span><br><span class="line">OBJS-<span class="variable">$(CONFIG_MEDIACODEC)</span>               += hwcontext_mediacodec.o</span><br><span class="line">OBJS-<span class="variable">$(CONFIG_OPENCL)</span>                   += hwcontext_opencl.o</span><br><span class="line">OBJS-<span class="variable">$(CONFIG_QSV)</span>                      += hwcontext_qsv.o</span><br><span class="line">OBJS-<span class="variable">$(CONFIG_VAAPI)</span>                    += hwcontext_vaapi.o</span><br><span class="line">OBJS-<span class="variable">$(CONFIG_VIDEOTOOLBOX)</span>             += hwcontext_videotoolbox.o</span><br><span class="line">OBJS-<span class="variable">$(CONFIG_VDPAU)</span>                    += hwcontext_vdpau.o</span><br><span class="line">OBJS-<span class="variable">$(CONFIG_VULKAN)</span>                   += hwcontext_vulkan.o</span><br><span class="line"></span><br><span class="line">OBJS += $(COMPAT_OBJS:%=../compat/%)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Windows resource file</span></span><br><span class="line">SLIBOBJS-<span class="variable">$(HAVE_GNU_WINDRES)</span>            += avutilres.o</span><br><span class="line"></span><br><span class="line">SKIPHEADERS                            += objc.h</span><br><span class="line">SKIPHEADERS-<span class="variable">$(HAVE_CUDA_H)</span>             += hwcontext_cuda.h</span><br><span class="line">SKIPHEADERS-<span class="variable">$(CONFIG_CUDA)</span>             += hwcontext_cuda_internal.h     \</span><br><span class="line">                                          cuda_check.h</span><br><span class="line">SKIPHEADERS-<span class="variable">$(CONFIG_D3D11VA)</span>          += hwcontext_d3d11va.h</span><br><span class="line">SKIPHEADERS-<span class="variable">$(CONFIG_DXVA2)</span>            += hwcontext_dxva2.h</span><br><span class="line">SKIPHEADERS-<span class="variable">$(CONFIG_QSV)</span>              += hwcontext_qsv.h</span><br><span class="line">SKIPHEADERS-<span class="variable">$(CONFIG_OPENCL)</span>           += hwcontext_opencl.h</span><br><span class="line">SKIPHEADERS-<span class="variable">$(CONFIG_VAAPI)</span>            += hwcontext_vaapi.h</span><br><span class="line">SKIPHEADERS-<span class="variable">$(CONFIG_VIDEOTOOLBOX)</span>     += hwcontext_videotoolbox.h</span><br><span class="line">SKIPHEADERS-<span class="variable">$(CONFIG_VDPAU)</span>            += hwcontext_vdpau.h</span><br><span class="line">SKIPHEADERS-<span class="variable">$(CONFIG_VULKAN)</span>           += hwcontext_vulkan.h vulkan.h   \</span><br><span class="line">                                          vulkan_functions.h            \</span><br><span class="line">                                          vulkan_loader.h</span><br><span class="line"></span><br><span class="line">TESTPROGS = adler32                                                     \</span><br><span class="line">            aes                                                         \</span><br><span class="line">            aes_ctr                                                     \</span><br><span class="line">            audio_fifo                                                  \</span><br><span class="line">            avstring                                                    \</span><br><span class="line">            base64                                                      \</span><br><span class="line">            blowfish                                                    \</span><br><span class="line">            bprint                                                      \</span><br><span class="line">            cast5                                                       \</span><br><span class="line">            camellia                                                    \</span><br><span class="line">            channel_layout                                              \</span><br><span class="line">            color_utils                                                 \</span><br><span class="line">            cpu                                                         \</span><br><span class="line">            crc                                                         \</span><br><span class="line">            des                                                         \</span><br><span class="line">            dict                                                        \</span><br><span class="line">            display                                                     \</span><br><span class="line">            encryption_info                                             \</span><br><span class="line">            error                                                       \</span><br><span class="line">            eval                                                        \</span><br><span class="line">            file                                                        \</span><br><span class="line">            fifo                                                        \</span><br><span class="line">            hash                                                        \</span><br><span class="line">            hmac                                                        \</span><br><span class="line">            hwdevice                                                    \</span><br><span class="line">            integer                                                     \</span><br><span class="line">            imgutils                                                    \</span><br><span class="line">            lfg                                                         \</span><br><span class="line">            lls                                                         \</span><br><span class="line">            log                                                         \</span><br><span class="line">            md5                                                         \</span><br><span class="line">            murmur3                                                     \</span><br><span class="line">            opt                                                         \</span><br><span class="line">            pca                                                         \</span><br><span class="line">            parseutils                                                  \</span><br><span class="line">            pixdesc                                                     \</span><br><span class="line">            pixelutils                                                  \</span><br><span class="line">            pixfmt_best                                                 \</span><br><span class="line">            random_seed                                                 \</span><br><span class="line">            rational                                                    \</span><br><span class="line">            ripemd                                                      \</span><br><span class="line">            sha                                                         \</span><br><span class="line">            sha512                                                      \</span><br><span class="line">            softfloat                                                   \</span><br><span class="line">            tree                                                        \</span><br><span class="line">            twofish                                                     \</span><br><span class="line">            utf8                                                        \</span><br><span class="line">            uuid                                                        \</span><br><span class="line">            xtea                                                        \</span><br><span class="line">            tea                                                         \</span><br><span class="line"></span><br><span class="line">TESTPROGS-<span class="variable">$(HAVE_THREADS)</span>            += cpu_init</span><br><span class="line">TESTPROGS-<span class="variable">$(HAVE_LZO1X_999_COMPRESS)</span> += lzo</span><br><span class="line"></span><br><span class="line">TOOLS = crypto_bench ffhash ffeval ffescape</span><br><span class="line"></span><br><span class="line"><span class="section">tools/crypto_bench$(EXESUF): ELIBS += $(if <span class="variable">$(VERSUS)</span>,$(subst +, -l,+<span class="variable">$(VERSUS)</span>),)</span></span><br><span class="line"><span class="section">tools/crypto_bench.o: CFLAGS += -DUSE_EXT_LIBS=0$(if <span class="variable">$(VERSUS)</span>,$(subst +,+USE_,+<span class="variable">$(VERSUS)</span>),)</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$(SUBDIR)</span>tests/lzo<span class="variable">$(EXESUF)</span>: ELIBS = -llzo2</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如第一个libavutil.pri文件如下</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>($$PWD/x86/x86.pri)</span><br><span class="line"></span><br><span class="line">HEADERS+=\</span><br><span class="line">$$PWD/adler32.h\</span><br><span class="line">$$PWD/aes.h\</span><br><span class="line">$$PWD/aes_ctr.h\</span><br><span class="line">$$PWD/attributes.h\</span><br><span class="line">$$PWD/audio_fifo.h\</span><br><span class="line">$$PWD/avassert.h\</span><br><span class="line">$$PWD/avstring.h\</span><br><span class="line">$$PWD/avutil.h\</span><br><span class="line">$$PWD/base64.h\</span><br><span class="line">$$PWD/blowfish.h\</span><br><span class="line">$$PWD/bprint.h\</span><br><span class="line">$$PWD/bswap.h\</span><br><span class="line">$$PWD/buffer.h\</span><br><span class="line">$$PWD/cast5.h\</span><br><span class="line">$$PWD/camellia.h\</span><br><span class="line">$$PWD/channel_layout.h\</span><br><span class="line">$$PWD/common.h\</span><br><span class="line">$$PWD/cpu.h\</span><br><span class="line">$$PWD/crc.h\</span><br><span class="line">$$PWD/csp.h\</span><br><span class="line">$$PWD/des.h\</span><br><span class="line">$$PWD/detection_bbox.h\</span><br><span class="line">$$PWD/dict.h\</span><br><span class="line">$$PWD/display.h\</span><br><span class="line">$$PWD/dovi_meta.h\</span><br><span class="line">$$PWD/downmix_info.h\</span><br><span class="line">$$PWD/encryption_info.h\</span><br><span class="line">$$PWD/error.h\</span><br><span class="line">$$PWD/eval.h\</span><br><span class="line">$$PWD/fifo.h\</span><br><span class="line">$$PWD/file.h\</span><br><span class="line">$$PWD/frame.h\</span><br><span class="line">$$PWD/hash.h\</span><br><span class="line">$$PWD/hdr_dynamic_metadata.h\</span><br><span class="line">$$PWD/hdr_dynamic_vivid_metadata.h\</span><br><span class="line">$$PWD/hmac.h\</span><br><span class="line">$$PWD/hwcontext.h</span><br><span class="line"></span><br><span class="line">SOURCES+=\</span><br><span class="line">$$PWD/adler32.c\</span><br><span class="line">$$PWD/aes.c\</span><br><span class="line">$$PWD/aes_ctr.c\</span><br><span class="line">$$PWD/audio_fifo.c\</span><br><span class="line">$$PWD/avstring.c\</span><br><span class="line">$$PWD/avsscanf.c\</span><br><span class="line">$$PWD/base64.c\</span><br><span class="line">$$PWD/blowfish.c\</span><br><span class="line">$$PWD/bprint.c\</span><br><span class="line">$$PWD/buffer.c\</span><br><span class="line">$$PWD/cast5.c\</span><br><span class="line">$$PWD/camellia.c\</span><br><span class="line">$$PWD/channel_layout.c\</span><br><span class="line">$$PWD/color_utils.c\</span><br><span class="line">$$PWD/cpu.c\</span><br><span class="line">$$PWD/crc.c\</span><br><span class="line">$$PWD/csp.c\</span><br><span class="line">$$PWD/des.c\</span><br><span class="line">$$PWD/detection_bbox.c\</span><br><span class="line">$$PWD/dict.c\</span><br><span class="line">$$PWD/display.c\</span><br><span class="line">$$PWD/dovi_meta.c\</span><br><span class="line">$$PWD/downmix_info.c\</span><br><span class="line">$$PWD/encryption_info.c\</span><br><span class="line">$$PWD/error.c\</span><br><span class="line">$$PWD/eval.c\</span><br><span class="line">$$PWD/fifo.c\</span><br><span class="line">$$PWD/file.c\</span><br><span class="line">$$PWD/file_open.c\</span><br><span class="line">$$PWD/float_dsp.c\</span><br><span class="line">$$PWD/fixed_dsp.c\</span><br><span class="line">$$PWD/frame.c\</span><br><span class="line">$$PWD/hash.c\</span><br><span class="line">$$PWD/hdr_dynamic_metadata.c\</span><br><span class="line">$$PWD/hdr_dynamic_vivid_metadata.c\</span><br><span class="line">$$PWD/hmac.c\</span><br><span class="line">$$PWD/hwcontext_dxva2.c\</span><br><span class="line">$$PWD/hwcontext.c\</span><br><span class="line">$$PWD/integer.c\</span><br><span class="line">$$PWD/intmath.c\</span><br><span class="line">$$PWD/lfg.c\</span><br><span class="line">$$PWD/lls.c\</span><br><span class="line">$$PWD/log.c\</span><br><span class="line">$$PWD/log2_tab.c\</span><br><span class="line">$$PWD/lzo.c\</span><br><span class="line">$$PWD/mathematics.c\</span><br><span class="line">$$PWD/mastering_display_metadata.c\</span><br><span class="line">$$PWD/md5.c\</span><br><span class="line">$$PWD/mem.c\</span><br><span class="line">$$PWD/murmur3.c\</span><br><span class="line">$$PWD/opt.c\</span><br><span class="line">$$PWD/parseutils.c\</span><br><span class="line">$$PWD/pixdesc.c\</span><br><span class="line">$$PWD/pixelutils.c\</span><br><span class="line">$$PWD/random_seed.c\</span><br><span class="line">$$PWD/rational.c\</span><br><span class="line">$$PWD/reverse.c\</span><br><span class="line">$$PWD/rc4.c\</span><br><span class="line">$$PWD/ripemd.c\</span><br><span class="line">$$PWD/samplefmt.c\</span><br><span class="line">$$PWD/sha.c\</span><br><span class="line">$$PWD/sha512.c\</span><br><span class="line">$$PWD/spherical.c\</span><br><span class="line">$$PWD/stereo3d.c\</span><br><span class="line">$$PWD/threadmessage.c\</span><br><span class="line">$$PWD/time.c\</span><br><span class="line">$$PWD/timecode.c\</span><br><span class="line">$$PWD/tree.c\</span><br><span class="line">$$PWD/twofish.c\</span><br><span class="line">$$PWD/utils.c\</span><br><span class="line">$$PWD/xga_font_data.c\</span><br><span class="line">$$PWD/xtea.c\</span><br><span class="line">$$PWD/tea.c\</span><br><span class="line">$$PWD/uuid.c\</span><br><span class="line">$$PWD/version.c\</span><br><span class="line">$$PWD/video_enc_params.c\</span><br><span class="line">$$PWD/film_grain_params.c\</span><br><span class="line">$$PWD/tx.c\</span><br><span class="line">$$PWD/tx_float.c\</span><br><span class="line">$$PWD/tx_double.c\</span><br><span class="line">$$PWD/tx_int32.c\</span><br><span class="line">$$PWD/slicethread.c\</span><br><span class="line">$$PWD/imgutils.c\</span><br></pre></td></tr></table></figure><p>对应的x86.pri</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">SOURCES +=\</span><br><span class="line">$$PWD/cpu.c\</span><br><span class="line">$$PWD/fixed_dsp_init.c\</span><br><span class="line">$$PWD/float_dsp_init.c\</span><br><span class="line">$$PWD/imgutils_init.c\</span><br><span class="line">$$PWD/lls_init.c\</span><br><span class="line">$$PWD/tx_float_init.c\</span><br><span class="line">$$PWD/pixelutils_init.c</span><br><span class="line"></span><br><span class="line">ASM_SOURCE += \</span><br><span class="line">$$PWD/cpuid.asm\</span><br><span class="line">$$PWD/fixed_dsp.asm\</span><br><span class="line">$$PWD/float_dsp.asm\</span><br><span class="line">$$PWD/imgutils.asm\</span><br><span class="line">$$PWD/lls.asm\</span><br><span class="line">$$PWD/tx_float.asm\</span><br><span class="line">$$PWD/pixelutils.asm\</span><br><span class="line">$$PWD/x86util.asm\</span><br><span class="line">$$PWD/x86inc.asm</span><br></pre></td></tr></table></figure><h2 id="编译-SDL-更新"><a href="#编译-SDL-更新" class="headerlink" title="编译 SDL(更新)"></a>编译 SDL(更新)</h2><p>去<a href="https://www.libsdl.org/download-2.0.php">SDL官网</a>下载代码<br>依然使用以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure</span><br></pre></td></tr></table></figure><p>新建sdl.pri内容如下(参考sdl的makefile)</p><blockquote><p>编译过程会报错comdlg找不到LPUNKNOWN错误<br>解决方案:<br>根据错误提示定位到文件hid.c 在文件开头添加</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unknwnbase.h&gt;</span></span></span><br></pre></td></tr></table></figure><p>问题解决</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br></pre></td><td class="code"><pre><span class="line">CONFIG += -Wl,--no-undefined -Wc,-static-libgcc</span><br><span class="line">QMAKE_CFLAGS=   -DUSING_GENERATED_CONFIG_H -I./<span class="keyword">include</span> -idirafter ./src/video/khronos  -mmmx -m3dnow -msse -msse2 -msse3 -Wall -fno-strict-aliasing -Wdeclaration-after-statement -Werror=declaration-after-statement -mpreferred-stack-boundary=2</span><br><span class="line"></span><br><span class="line">INCLUDEPATH += $$PWD/<span class="keyword">include</span></span><br><span class="line">INCLUDEPATH += $$PWD/src/video/khronos</span><br><span class="line"></span><br><span class="line">HEADERS += \</span><br><span class="line"><span class="comment">#        $$PWD/include/SDL.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_assert.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_atomic.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_audio.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_bits.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_blendmode.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_clipboard.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_cpuinfo.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_egl.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_endian.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_error.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_events.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_filesystem.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_gamecontroller.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_gesture.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_haptic.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_hidapi.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_hints.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_joystick.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_keyboard.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_keycode.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_loadso.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_locale.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_log.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_main.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_messagebox.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_metal.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_misc.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_mouse.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_mutex.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_name.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_opengl.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_opengl_glext.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_opengles.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_opengles2_gl2ext.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_opengles2_gl2.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_opengles2_gl2platform.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_opengles2.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_opengles2_khrplatform.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_pixels.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_platform.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_power.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_quit.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_rect.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_render.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_rwops.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_scancode.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_sensor.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_shape.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_stdinc.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_surface.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_system.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_syswm.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_thread.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_timer.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_touch.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_types.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_version.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_video.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/SDL_vulkan.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/begin_code.h \</span></span><br><span class="line"><span class="comment">#        $$PWD/include/close_code.h</span></span><br><span class="line"></span><br><span class="line">SOURCES +=\</span><br><span class="line">$$PWD/src/SDL.c\</span><br><span class="line">$$PWD/src/SDL_assert.c\</span><br><span class="line">$$PWD/src/SDL_dataqueue.c\</span><br><span class="line">$$PWD/src/SDL_error.c\</span><br><span class="line">$$PWD/src/SDL_hints.c\</span><br><span class="line">$$PWD/src/SDL_list.c\</span><br><span class="line">$$PWD/src/SDL_log.c\</span><br><span class="line">$$PWD/src/atomic/SDL_atomic.c\</span><br><span class="line">$$PWD/src/atomic/SDL_spinlock.c\</span><br><span class="line">$$PWD/src/audio/SDL_audio.c\</span><br><span class="line">$$PWD/src/audio/SDL_audiocvt.c\</span><br><span class="line">$$PWD/src/audio/SDL_audiodev.c\</span><br><span class="line">$$PWD/src/audio/SDL_audiotypecvt.c\</span><br><span class="line">$$PWD/src/audio/SDL_mixer.c\</span><br><span class="line">$$PWD/src/audio/SDL_wave.c\</span><br><span class="line">$$PWD/src/cpuinfo/SDL_cpuinfo.c\</span><br><span class="line">$$PWD/src/dynapi/SDL_dynapi.c\</span><br><span class="line">$$PWD/src/events/SDL_clipboardevents.c\</span><br><span class="line">$$PWD/src/events/SDL_displayevents.c\</span><br><span class="line">$$PWD/src/events/SDL_dropevents.c\</span><br><span class="line">$$PWD/src/events/SDL_events.c\</span><br><span class="line">$$PWD/src/events/SDL_gesture.c\</span><br><span class="line">$$PWD/src/events/SDL_keyboard.c\</span><br><span class="line">$$PWD/src/events/SDL_mouse.c\</span><br><span class="line">$$PWD/src/events/SDL_quit.c\</span><br><span class="line">$$PWD/src/events/SDL_touch.c\</span><br><span class="line">$$PWD/src/events/SDL_windowevents.c\</span><br><span class="line">$$PWD/src/events/imKStoUCS.c\</span><br><span class="line">$$PWD/src/file/SDL_rwops.c\</span><br><span class="line">$$PWD/src/haptic/SDL_haptic.c\</span><br><span class="line">$$PWD/src/hidapi/SDL_hidapi.c\</span><br><span class="line">$$PWD/src/joystick/SDL_gamecontroller.c\</span><br><span class="line">$$PWD/src/joystick/SDL_joystick.c\</span><br><span class="line">$$PWD/src/libm/e_atan2.c\</span><br><span class="line">$$PWD/src/libm/e_exp.c\</span><br><span class="line">$$PWD/src/libm/e_fmod.c\</span><br><span class="line">$$PWD/src/libm/e_log.c\</span><br><span class="line">$$PWD/src/libm/e_log10.c\</span><br><span class="line">$$PWD/src/libm/e_pow.c\</span><br><span class="line">$$PWD/src/libm/e_rem_pio2.c\</span><br><span class="line">$$PWD/src/libm/e_sqrt.c\</span><br><span class="line">$$PWD/src/libm/k_cos.c\</span><br><span class="line">$$PWD/src/libm/k_rem_pio2.c\</span><br><span class="line">$$PWD/src/libm/k_sin.c\</span><br><span class="line">$$PWD/src/libm/k_tan.c\</span><br><span class="line">$$PWD/src/libm/s_atan.c\</span><br><span class="line">$$PWD/src/libm/s_copysign.c\</span><br><span class="line">$$PWD/src/libm/s_cos.c\</span><br><span class="line">$$PWD/src/libm/s_fabs.c\</span><br><span class="line">$$PWD/src/libm/s_floor.c\</span><br><span class="line">$$PWD/src/libm/s_scalbn.c\</span><br><span class="line">$$PWD/src/libm/s_sin.c\</span><br><span class="line">$$PWD/src/libm/s_tan.c\</span><br><span class="line">$$PWD/src/misc/SDL_url.c\</span><br><span class="line">$$PWD/src/power/SDL_power.c\</span><br><span class="line">$$PWD/src/render/SDL_d3dmath.c\</span><br><span class="line">$$PWD/src/render/SDL_render.c\</span><br><span class="line">$$PWD/src/render/SDL_yuv_sw.c\</span><br><span class="line">$$PWD/src/render/direct3d/SDL_render_d3d.c\</span><br><span class="line">$$PWD/src/render/direct3d/SDL_shaders_d3d.c\</span><br><span class="line">$$PWD/src/render/direct3d11/SDL_render_d3d11.c\</span><br><span class="line">$$PWD/src/render/direct3d11/SDL_shaders_d3d11.c\</span><br><span class="line">$$PWD/src/render/opengl/SDL_render_gl.c\</span><br><span class="line">$$PWD/src/render/opengl/SDL_shaders_gl.c\</span><br><span class="line">$$PWD/src/render/opengles/SDL_render_gles.c\</span><br><span class="line">$$PWD/src/render/opengles2/SDL_render_gles2.c\</span><br><span class="line">$$PWD/src/render/opengles2/SDL_shaders_gles2.c\</span><br><span class="line">$$PWD/src/render/psp/SDL_render_psp.c\</span><br><span class="line">$$PWD/src/render/software/SDL_blendfillrect.c\</span><br><span class="line">$$PWD/src/render/software/SDL_blendline.c\</span><br><span class="line">$$PWD/src/render/software/SDL_blendpoint.c\</span><br><span class="line">$$PWD/src/render/software/SDL_drawline.c\</span><br><span class="line">$$PWD/src/render/software/SDL_drawpoint.c\</span><br><span class="line">$$PWD/src/render/software/SDL_render_sw.c\</span><br><span class="line">$$PWD/src/render/software/SDL_rotate.c\</span><br><span class="line">$$PWD/src/render/software/SDL_triangle.c\</span><br><span class="line">$$PWD/src/render/vitagxm/SDL_render_vita_gxm.c\</span><br><span class="line">$$PWD/src/render/vitagxm/SDL_render_vita_gxm_memory.c\</span><br><span class="line">$$PWD/src/render/vitagxm/SDL_render_vita_gxm_tools.c\</span><br><span class="line">$$PWD/src/sensor/SDL_sensor.c\</span><br><span class="line">$$PWD/src/stdlib/SDL_crc32.c\</span><br><span class="line">$$PWD/src/stdlib/SDL_getenv.c\</span><br><span class="line">$$PWD/src/stdlib/SDL_iconv.c\</span><br><span class="line">$$PWD/src/stdlib/SDL_malloc.c\</span><br><span class="line">$$PWD/src/stdlib/SDL_qsort.c\</span><br><span class="line">$$PWD/src/stdlib/SDL_stdlib.c\</span><br><span class="line">$$PWD/src/stdlib/SDL_string.c\</span><br><span class="line">$$PWD/src/stdlib/SDL_strtokr.c\</span><br><span class="line">$$PWD/src/thread/SDL_thread.c\</span><br><span class="line">$$PWD/src/timer/SDL_timer.c\</span><br><span class="line">$$PWD/src/video/SDL_RLEaccel.c\</span><br><span class="line">$$PWD/src/video/SDL_blit.c\</span><br><span class="line">$$PWD/src/video/SDL_blit_0.c\</span><br><span class="line">$$PWD/src/video/SDL_blit_1.c\</span><br><span class="line">$$PWD/src/video/SDL_blit_A.c\</span><br><span class="line">$$PWD/src/video/SDL_blit_N.c\</span><br><span class="line">$$PWD/src/video/SDL_blit_auto.c\</span><br><span class="line">$$PWD/src/video/SDL_blit_copy.c\</span><br><span class="line">$$PWD/src/video/SDL_blit_slow.c\</span><br><span class="line">$$PWD/src/video/SDL_bmp.c\</span><br><span class="line">$$PWD/src/video/SDL_clipboard.c\</span><br><span class="line">$$PWD/src/video/SDL_egl.c\</span><br><span class="line">$$PWD/src/video/SDL_fillrect.c\</span><br><span class="line">$$PWD/src/video/SDL_pixels.c\</span><br><span class="line">$$PWD/src/video/SDL_rect.c\</span><br><span class="line">$$PWD/src/video/SDL_shape.c\</span><br><span class="line">$$PWD/src/video/SDL_stretch.c\</span><br><span class="line">$$PWD/src/video/SDL_surface.c\</span><br><span class="line">$$PWD/src/video/SDL_video.c\</span><br><span class="line">$$PWD/src/video/SDL_vulkan_utils.c\</span><br><span class="line">$$PWD/src/video/SDL_yuv.c\</span><br><span class="line">$$PWD/src/video/yuv2rgb/yuv_rgb.c\</span><br><span class="line">$$PWD/src/locale/SDL_locale.c\</span><br><span class="line">$$PWD/src/video/dummy/SDL_nullevents.c\</span><br><span class="line">$$PWD/src/video/dummy/SDL_nullframebuffer.c\</span><br><span class="line">$$PWD/src/video/dummy/SDL_nullvideo.c\</span><br><span class="line">$$PWD/src/audio/disk/SDL_diskaudio.c\</span><br><span class="line">$$PWD/src/audio/dummy/SDL_dummyaudio.c\</span><br><span class="line">$$PWD/src/joystick/hidapi/SDL_hidapi_gamecube.c\</span><br><span class="line">$$PWD/src/joystick/hidapi/SDL_hidapi_luna.c\</span><br><span class="line">$$PWD/src/joystick/hidapi/SDL_hidapi_ps4.c\</span><br><span class="line">$$PWD/src/joystick/hidapi/SDL_hidapi_ps5.c\</span><br><span class="line">$$PWD/src/joystick/hidapi/SDL_hidapi_rumble.c\</span><br><span class="line">$$PWD/src/joystick/hidapi/SDL_hidapi_stadia.c\</span><br><span class="line">$$PWD/src/joystick/hidapi/SDL_hidapi_steam.c\</span><br><span class="line">$$PWD/src/joystick/hidapi/SDL_hidapi_switch.c\</span><br><span class="line">$$PWD/src/joystick/hidapi/SDL_hidapi_xbox360.c\</span><br><span class="line">$$PWD/src/joystick/hidapi/SDL_hidapi_xbox360w.c\</span><br><span class="line">$$PWD/src/joystick/hidapi/SDL_hidapi_xboxone.c\</span><br><span class="line">$$PWD/src/joystick/hidapi/SDL_hidapijoystick.c\</span><br><span class="line">$$PWD/src/core/windows/SDL_hid.c\</span><br><span class="line">$$PWD/src/core/windows/SDL_windows.c\</span><br><span class="line">$$PWD/src/core/windows/SDL_xinput.c\</span><br><span class="line">$$PWD/src/misc/windows/SDL_sysurl.c\</span><br><span class="line">$$PWD/src/locale/windows/SDL_syslocale.c\</span><br><span class="line">$$PWD/src/video/windows/SDL_windowsclipboard.c\</span><br><span class="line">$$PWD/src/video/windows/SDL_windowsevents.c\</span><br><span class="line">$$PWD/src/video/windows/SDL_windowsframebuffer.c\</span><br><span class="line">$$PWD/src/video/windows/SDL_windowskeyboard.c\</span><br><span class="line">$$PWD/src/video/windows/SDL_windowsmessagebox.c\</span><br><span class="line">$$PWD/src/video/windows/SDL_windowsmodes.c\</span><br><span class="line">$$PWD/src/video/windows/SDL_windowsmouse.c\</span><br><span class="line">$$PWD/src/video/windows/SDL_windowsopengl.c\</span><br><span class="line">$$PWD/src/video/windows/SDL_windowsopengles.c\</span><br><span class="line">$$PWD/src/video/windows/SDL_windowsshape.c\</span><br><span class="line">$$PWD/src/video/windows/SDL_windowsvideo.c\</span><br><span class="line">$$PWD/src/video/windows/SDL_windowsvulkan.c\</span><br><span class="line">$$PWD/src/video/windows/SDL_windowswindow.c\</span><br><span class="line">$$PWD/src/audio/winmm/SDL_winmm.c\</span><br><span class="line">$$PWD/src/audio/directsound/SDL_directsound.c\</span><br><span class="line">$$PWD/src/audio/wasapi/SDL_wasapi.c\</span><br><span class="line">$$PWD/src/audio/wasapi/SDL_wasapi_win32.c\</span><br><span class="line">$$PWD/src/joystick/windows/SDL_dinputjoystick.c\</span><br><span class="line">$$PWD/src/joystick/windows/SDL_rawinputjoystick.c\</span><br><span class="line">$$PWD/src/joystick/windows/SDL_windows_gaming_input.c\</span><br><span class="line">$$PWD/src/joystick/windows/SDL_windowsjoystick.c\</span><br><span class="line">$$PWD/src/joystick/windows/SDL_xinputjoystick.c\</span><br><span class="line">$$PWD/src/haptic/windows/SDL_dinputhaptic.c\</span><br><span class="line">$$PWD/src/haptic/windows/SDL_windowshaptic.c\</span><br><span class="line">$$PWD/src/haptic/windows/SDL_xinputhaptic.c\</span><br><span class="line">$$PWD/src/sensor/windows/SDL_windowssensor.c\</span><br><span class="line">$$PWD/src/power/windows/SDL_syspower.c\</span><br><span class="line">$$PWD/src/filesystem/windows/SDL_sysfilesystem.c\</span><br><span class="line">$$PWD/src/thread/windows/SDL_syscond_cv.c\</span><br><span class="line">$$PWD/src/thread/windows/SDL_sysmutex.c\</span><br><span class="line">$$PWD/src/thread/windows/SDL_syssem.c\</span><br><span class="line">$$PWD/src/thread/windows/SDL_systhread.c\</span><br><span class="line">$$PWD/src/thread/windows/SDL_systls.c\</span><br><span class="line">$$PWD/src/thread/generic/SDL_syscond.c\</span><br><span class="line">$$PWD/src/timer/windows/SDL_systimer.c\</span><br><span class="line">$$PWD/src/loadso/windows/SDL_sysloadso.c\</span><br><span class="line">$$PWD/src/joystick/virtual/SDL_virtualjoystick.c\</span><br><span class="line"><span class="comment">#$$PWD/src/main/windows/SDL_windows_main.c</span></span><br><span class="line"></span><br><span class="line">LIBS +=-lm -ldinput8 -ldxguid -ldxerr8 -luser32 -lgdi32 -lwinmm -limm32 -lole32 -loleaut32 -lshell32 -lsetupapi -lversion -luuid</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>新建一个工程 将ffmpeg文件夹拷贝过去</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">TEMPLATE = app</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>($$PWD/ffmpeg/ffmpeg.pri)</span><br><span class="line"></span><br><span class="line">SOURCES +=\</span><br><span class="line">$$PWD/main.cpp\</span><br><span class="line"></span><br><span class="line">DESTDIR = $$PWD/../bin</span><br></pre></td></tr></table></figure><h3 id="工程1"><a href="#工程1" class="headerlink" title="工程1"></a>工程1</h3><p>mian.cpp文件如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//如果是.cpp文件必须加上extern &quot;C&quot;</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;libavcodec/avcodec.h&quot;</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//缓冲区大小（缓存5帧数据）</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AUDIO_INBUF_SIZE 40960</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    name   depth</span></span><br><span class="line"><span class="comment">    u8        8</span></span><br><span class="line"><span class="comment">    s16      16</span></span><br><span class="line"><span class="comment">    s32      32</span></span><br><span class="line"><span class="comment">    flt      32</span></span><br><span class="line"><span class="comment">    dbl      64</span></span><br><span class="line"><span class="comment">    u8p       8</span></span><br><span class="line"><span class="comment">    s16p     16</span></span><br><span class="line"><span class="comment">    s32p     32</span></span><br><span class="line"><span class="comment">    fltp     32</span></span><br><span class="line"><span class="comment">    dblp     64</span></span><br><span class="line"><span class="comment">    s64      64</span></span><br><span class="line"><span class="comment">    s64p     64</span></span><br><span class="line"><span class="comment">    //此代码解码的音频文件格式如下:</span></span><br><span class="line"><span class="comment">    //AAC文件(一帧1024字节)，双声道（2），FLTP（32位，4字节）</span></span><br><span class="line"><span class="comment">    //AAC文件 frame_size 和 nb_samples 大小均为1024</span></span><br><span class="line"><span class="comment">    //一帧音频所占字节大小</span></span><br><span class="line"><span class="comment">    //1024*2*4=8192字节</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AUDIO_REFILL_THRESH 8192</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INPUT_FILE_NAME <span class="meta-string">&quot;WavinFlag.aac&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OUTPUT_FILE_NAME <span class="meta-string">&quot;lh_online.pcm&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">get_format_from_sample_fmt</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>** fmt,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">enum</span> AVSampleFormat sample_fmt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sample_fmt_entry</span> &#123;</span></span><br><span class="line">        <span class="class"><span class="keyword">enum</span> <span class="title">AVSampleFormat</span> <span class="title">sample_fmt</span>;</span> <span class="keyword">const</span> <span class="keyword">char</span>* fmt_be, * fmt_le;</span><br><span class="line">    &#125; sample_fmt_entries[] = &#123;</span><br><span class="line">        &#123; AV_SAMPLE_FMT_U8,  <span class="string">&quot;u8&quot;</span>,    <span class="string">&quot;u8&quot;</span>    &#125;,</span><br><span class="line">        &#123; AV_SAMPLE_FMT_S16, <span class="string">&quot;s16be&quot;</span>, <span class="string">&quot;s16le&quot;</span> &#125;,</span><br><span class="line">        &#123; AV_SAMPLE_FMT_S32, <span class="string">&quot;s32be&quot;</span>, <span class="string">&quot;s32le&quot;</span> &#125;,</span><br><span class="line">        &#123; AV_SAMPLE_FMT_FLT, <span class="string">&quot;f32be&quot;</span>, <span class="string">&quot;f32le&quot;</span> &#125;,</span><br><span class="line">        &#123; AV_SAMPLE_FMT_DBL, <span class="string">&quot;f64be&quot;</span>, <span class="string">&quot;f64le&quot;</span> &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">    *fmt = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="built_in">FF_ARRAY_ELEMS</span>(sample_fmt_entries); i++) &#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">sample_fmt_entry</span>* <span class="title">entry</span> =</span> &amp;sample_fmt_entries[i];</span><br><span class="line">        <span class="keyword">if</span> (sample_fmt == entry-&gt;sample_fmt) &#123;</span><br><span class="line">            *fmt = <span class="built_in">AV_NE</span>(entry-&gt;fmt_be, entry-&gt;fmt_le);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">av_log</span>(<span class="literal">NULL</span>, AV_LOG_ERROR, <span class="string">&quot;sample format %s is not supported as output format\n&quot;</span>, <span class="built_in">av_get_sample_fmt_name</span>(sample_fmt));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">decode</span><span class="params">(AVCodecContext* dec_ctx, AVFrame* frame, AVPacket* pkt,</span></span></span><br><span class="line"><span class="params"><span class="function">    FILE* ofile)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, ch;</span><br><span class="line">    <span class="keyword">int</span> ret, data_size;</span><br><span class="line">    ret = <span class="built_in">avcodec_send_packet</span>(dec_ctx, pkt);</span><br><span class="line">    <span class="keyword">if</span> (ret &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">av_log</span>(<span class="literal">NULL</span>, AV_LOG_ERROR, <span class="string">&quot;发送数据包到解码器出错。\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (ret &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        ret = <span class="built_in">avcodec_receive_frame</span>(dec_ctx, frame);</span><br><span class="line">        <span class="keyword">if</span> (ret == <span class="built_in">AVERROR</span>(EAGAIN) || ret == AVERROR_EOF)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (ret &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">av_log</span>(<span class="literal">NULL</span>, AV_LOG_ERROR, <span class="string">&quot;Error sending a packet for decoding.\n&quot;</span>);</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;frame_number: %d \n&quot;</span>, dec_ctx-&gt;frame_number);</span><br><span class="line">        <span class="comment">//获取每个采样点当中每个声道的大小</span></span><br><span class="line">        data_size = <span class="built_in">av_get_bytes_per_sample</span>(dec_ctx-&gt;sample_fmt);</span><br><span class="line">        <span class="keyword">if</span> (data_size &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">av_log</span>(<span class="literal">NULL</span>, AV_LOG_ERROR, <span class="string">&quot;Failed to calculate data size.\n&quot;</span>);</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//遍历采样点</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; frame-&gt;nb_samples; i++) &#123;</span><br><span class="line">            <span class="comment">//遍历声道</span></span><br><span class="line">            <span class="keyword">for</span> (ch = <span class="number">0</span>; ch &lt; dec_ctx-&gt;channels; ch++) &#123;</span><br><span class="line">                <span class="built_in">fwrite</span>(frame-&gt;data[ch] + data_size * i, <span class="number">1</span>, data_size, ofile);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> AVCodec* codec;</span><br><span class="line">    AVCodecParserContext* parser;</span><br><span class="line">    AVCodecContext* c = <span class="literal">NULL</span>;</span><br><span class="line">    FILE* ifile, * ofile;</span><br><span class="line">    AVFrame* frame;</span><br><span class="line">    AVPacket* pkt;</span><br><span class="line">    <span class="keyword">uint8_t</span> inbuf[AUDIO_INBUF_SIZE + AV_INPUT_BUFFER_PADDING_SIZE];</span><br><span class="line">    <span class="keyword">uint8_t</span>* data;</span><br><span class="line">    <span class="keyword">size_t</span>   data_size;</span><br><span class="line">    <span class="keyword">int</span> ret,len;</span><br><span class="line">    <span class="class"><span class="keyword">enum</span> <span class="title">AVSampleFormat</span> <span class="title">sfmt</span>;</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span>* fmt;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化inbuf数字默认值</span></span><br><span class="line">    <span class="built_in">memset</span>(inbuf + AUDIO_INBUF_SIZE, <span class="number">0</span>, AV_INPUT_BUFFER_PADDING_SIZE);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取解码器（此处需要读取的文件是AAC，故）</span></span><br><span class="line">    codec = <span class="built_in">avcodec_find_decoder</span>(AV_CODEC_ID_AAC);</span><br><span class="line">    <span class="keyword">if</span> (!codec) &#123;</span><br><span class="line">        <span class="built_in">av_log</span>(<span class="literal">NULL</span>, AV_LOG_ERROR, <span class="string">&quot;Codec not found.\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注册解析器</span></span><br><span class="line">    parser = <span class="built_in">av_parser_init</span>(codec-&gt;id);</span><br><span class="line">    <span class="keyword">if</span> (!parser) &#123;</span><br><span class="line">        <span class="built_in">av_log</span>(<span class="literal">NULL</span>, AV_LOG_ERROR, <span class="string">&quot;parser not found.\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//分配解析器上下文</span></span><br><span class="line">    c = <span class="built_in">avcodec_alloc_context3</span>(codec);</span><br><span class="line">    <span class="keyword">if</span> (!c) &#123;</span><br><span class="line">        <span class="built_in">av_log</span>(<span class="literal">NULL</span>, AV_LOG_ERROR, <span class="string">&quot;Could not allocate video codec context.\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打开解码器</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">avcodec_open2</span>(c, codec, <span class="literal">NULL</span>) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">av_log</span>(<span class="literal">NULL</span>, AV_LOG_ERROR, <span class="string">&quot;Could not open codec.\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//分配AVPacket</span></span><br><span class="line">    pkt = <span class="built_in">av_packet_alloc</span>();</span><br><span class="line">    <span class="keyword">if</span> (!pkt) &#123;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//分配AVFrame</span></span><br><span class="line">    frame = <span class="built_in">av_frame_alloc</span>();</span><br><span class="line">    <span class="keyword">if</span> (!frame) &#123;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打开输入文件</span></span><br><span class="line">    ifile = <span class="built_in">fopen</span>(INPUT_FILE_NAME, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!ifile) &#123;</span><br><span class="line">        <span class="built_in">av_log</span>(<span class="literal">NULL</span>, AV_LOG_ERROR, <span class="string">&quot;Could not open \s.\n&quot;</span>, INPUT_FILE_NAME);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//打开输入文件</span></span><br><span class="line">    ofile = <span class="built_in">fopen</span>(OUTPUT_FILE_NAME, <span class="string">&quot;wb+&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!ofile) &#123;</span><br><span class="line">        <span class="built_in">av_log</span>(<span class="literal">NULL</span>, AV_LOG_ERROR, <span class="string">&quot;Could not open \s.\n&quot;</span>, OUTPUT_FILE_NAME);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//从输入流 ifile 读取数据到 inbuf 所指向的数组中</span></span><br><span class="line">    data = inbuf;</span><br><span class="line">    data_size = <span class="built_in">fread</span>(inbuf, <span class="number">1</span>, AUDIO_INBUF_SIZE, ifile);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (data_size &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">//使用注册的解析器 parser 把数据分割成帧</span></span><br><span class="line">        ret = <span class="built_in">av_parser_parse2</span>(parser, c, &amp;pkt-&gt;data, &amp;pkt-&gt;size,</span><br><span class="line">            data, data_size,</span><br><span class="line">            AV_NOPTS_VALUE, AV_NOPTS_VALUE, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (ret &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">fprintf</span>(stderr, <span class="string">&quot;Error while parsing\n&quot;</span>);</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//根据使用情况重置数据位置</span></span><br><span class="line">        data += ret;</span><br><span class="line">        data_size -= ret;</span><br><span class="line">        <span class="comment">//送往解码</span></span><br><span class="line">        <span class="keyword">if</span> (pkt-&gt;size)</span><br><span class="line">            <span class="built_in">decode</span>(c, frame, pkt, ofile);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断缓存区剩余数据是否小于一帧音频大小</span></span><br><span class="line">        <span class="comment">//小于的话从文件继续读取，之后在送往解码</span></span><br><span class="line">        <span class="keyword">if</span> (data_size &lt; AUDIO_REFILL_THRESH) &#123;</span><br><span class="line">            <span class="built_in">memmove</span>(inbuf, data, data_size);</span><br><span class="line">            data = inbuf;</span><br><span class="line">            len = <span class="built_in">fread</span>(data + data_size, <span class="number">1</span>,</span><br><span class="line">                AUDIO_INBUF_SIZE - data_size, ifile);</span><br><span class="line">            <span class="keyword">if</span> (len &gt; <span class="number">0</span>)</span><br><span class="line">                data_size += len;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//flush 解码器</span></span><br><span class="line">    <span class="built_in">decode</span>(c, frame, <span class="literal">NULL</span>, ofile);</span><br><span class="line">    <span class="comment">//此时就已经解码完了，我们稍后使用ffplay播放下音频</span></span><br><span class="line">    <span class="comment">//解码出来的pcm数据是没有这些基础数据的，我们需要从元数据获取</span></span><br><span class="line">    <span class="comment">//打印下基本信息</span></span><br><span class="line">    <span class="comment">//声道数</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;channels: %d \n&quot;</span>, c-&gt;channels);</span><br><span class="line">    <span class="comment">//采样率</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sample_rate: %d  \n&quot;</span>, c-&gt;sample_rate);</span><br><span class="line">    <span class="comment">//一帧音频所占字节代销</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;buffer: %d  \n&quot;</span>, <span class="built_in">av_samples_get_buffer_size</span>(<span class="literal">NULL</span>, c-&gt;channels, c-&gt;frame_size, c-&gt;sample_fmt, <span class="number">1</span>));</span><br><span class="line">    <span class="comment">//采样格式</span></span><br><span class="line">    sfmt = c-&gt;sample_fmt;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sample_fmt: %s  \n&quot;</span>, <span class="built_in">av_get_sample_fmt_name</span>(sfmt));</span><br><span class="line">    <span class="comment">//如果为planar，转换为packed格式</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">av_sample_fmt_is_planar</span>(sfmt)) &#123;</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">char</span>* packed = <span class="built_in">av_get_sample_fmt_name</span>(sfmt);</span><br><span class="line">        sfmt = <span class="built_in">av_get_packed_sample_fmt</span>(sfmt);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">get_format_from_sample_fmt</span>(&amp;fmt, sfmt) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">av_log</span>(<span class="literal">NULL</span>, AV_LOG_ERROR, <span class="string">&quot;Could not get forma \s.\n&quot;</span>, <span class="built_in">av_get_sample_fmt_name</span>(sfmt));</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打印播放命令</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Play the output audio file with the command:\n&quot;</span></span><br><span class="line">        <span class="string">&quot;ffplay -f %s -ac %d -ar %d %s\n&quot;</span>,</span><br><span class="line">        fmt, c-&gt;channels, c-&gt;sample_rate,OUTPUT_FILE_NAME);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//资源释放</span></span><br><span class="line">    <span class="built_in">fclose</span>(ifile);</span><br><span class="line">    <span class="built_in">fclose</span>(ofile);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">av_parser_close</span>(parser);</span><br><span class="line">    <span class="built_in">avcodec_free_context</span>(&amp;c);</span><br><span class="line">    <span class="built_in">av_frame_free</span>(&amp;frame);</span><br><span class="line">    <span class="built_in">av_packet_free</span>(&amp;pkt);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="工程2-ffmpeg-exe"><a href="#工程2-ffmpeg-exe" class="headerlink" title="工程2(ffmpeg.exe)"></a>工程2(ffmpeg.exe)</h3><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">TEMPLATE = app</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>($$PWD/sdl/sdl.pri)</span><br><span class="line"><span class="keyword">include</span>($$PWD/ffmpeg/ffmpeg.pri)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">TARGET = ffmpeg</span><br><span class="line"></span><br><span class="line">HEADERS += \</span><br><span class="line">    $$PWD/ffmpeg/fftools/cmdutils.h \</span><br><span class="line">    $$PWD/ffmpeg/fftools/ffmpeg.h \</span><br><span class="line">    $$PWD/ffmpeg/fftools/fopen_utf8.h \</span><br><span class="line">    $$PWD/ffmpeg/fftools/opt_common.h</span><br><span class="line"></span><br><span class="line">SOURCES += \</span><br><span class="line">    $$PWD/ffmpeg/fftools/cmdutils.c \</span><br><span class="line">    $$PWD/ffmpeg/fftools/ffmpeg.c \</span><br><span class="line">    $$PWD/ffmpeg/fftools/ffmpeg_filter.c \</span><br><span class="line">    $$PWD/ffmpeg/fftools/ffmpeg_hw.c \</span><br><span class="line">    $$PWD/ffmpeg/fftools/ffmpeg_mux.c \</span><br><span class="line">    $$PWD/ffmpeg/fftools/ffmpeg_opt.c \</span><br><span class="line">    $$PWD/ffmpeg/fftools/opt_common.c</span><br><span class="line"></span><br><span class="line">DESTDIR = $$PWD/../bin</span><br></pre></td></tr></table></figure><h3 id="工程3-ffplay"><a href="#工程3-ffplay" class="headerlink" title="工程3(ffplay)"></a>工程3(ffplay)</h3><p>好久没发图了,来一张吧… <img src="/../photos/Windows%E4%B8%8BMingw%E7%89%88%E6%9C%AC%E7%9A%84FFMPEG%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/ffplay.webp" alt="ffplay播放(魔鬼中的天使)"></p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">TEMPLATE = app</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>($$PWD/sdl/sdl.pri)</span><br><span class="line"><span class="keyword">include</span>($$PWD/ffmpeg/ffmpeg.pri)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">TARGET = ffplay</span><br><span class="line"></span><br><span class="line">HEADERS += \</span><br><span class="line">    $$PWD/ffmpeg/fftools/cmdutils.h \</span><br><span class="line">    $$PWD/ffmpeg/fftools/ffmpeg.h \</span><br><span class="line">    $$PWD/ffmpeg/fftools/fopen_utf8.h \</span><br><span class="line">    $$PWD/ffmpeg/fftools/opt_common.h</span><br><span class="line"></span><br><span class="line">SOURCES += \</span><br><span class="line">    $$PWD/ffmpeg/fftools/cmdutils.c \</span><br><span class="line">    $$PWD/ffmpeg/fftools/ffplay.c\</span><br><span class="line"></span><br><span class="line">DESTDIR = $$PWD/../bin</span><br></pre></td></tr></table></figure><h2 id="附件下载"><a href="#附件下载" class="headerlink" title="附件下载"></a>附件下载</h2><p><a href="https://liusblog.top/attachment/Windows%E4%B8%8BMingw%E7%89%88%E6%9C%AC%E7%9A%84FFMPEG%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/ffmpeg.zip">配置参考附件</a></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ol><li><a href="https://wiki.qt.io/Undocumented_QMake">Undocumented_QMake</a></li><li><a href="https://doc.qt.io/qt-6/qmake-advanced-usage.html#adding-compilers">adding-compilers</a></li><li><a href="https://forum.qt.io/topic/115675/avoiding-name-clashes-with-qmake-if-two-files-in-project-have-the-same-name/6">Avoiding name clashes with Qmake</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="音视频" scheme="https://liusblog.top/categories/%E9%9F%B3%E8%A7%86%E9%A2%91/"/>
    
    
    <category term="Qt" scheme="https://liusblog.top/tags/Qt/"/>
    
    <category term="Windows" scheme="https://liusblog.top/tags/Windows/"/>
    
    <category term="FFMPEG" scheme="https://liusblog.top/tags/FFMPEG/"/>
    
    <category term="Mingw32" scheme="https://liusblog.top/tags/Mingw32/"/>
    
  </entry>
  
  <entry>
    <title>VS2019无法设置Qt版本解决方案</title>
    <link href="https://liusblog.top/2022/06/26/VS2019%E6%97%A0%E6%B3%95%E8%AE%BE%E7%BD%AEQt%E7%89%88%E6%9C%AC%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>https://liusblog.top/2022/06/26/VS2019%E6%97%A0%E6%B3%95%E8%AE%BE%E7%BD%AEQt%E7%89%88%E6%9C%AC%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</id>
    <published>2022-06-26T04:24:02.000Z</published>
    <updated>2023-01-03T07:07:00.359Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>妈的,网上一大堆都是废话,尤其是CSDN, FUCK</p></blockquote><h2 id="问题表现"><a href="#问题表现" class="headerlink" title="问题表现:"></a>问题表现:</h2><p>在VS2019下打开Qt插件扩展添加qt版本有问题(添加不上),或者设置完成后无效</p><ul><li><p>网上搜的解决方案如下:</p></li><li><p><em>降版本</em>*(根本你妹的不管用啊)</p></li><li><p>根本原因:<br>VS2019的编译器版本和Qt提供的编译器不兼容,VS2019快捷方式默认只运行vcvarsall.bat需要指定编译器参数</p></li></ul><h2 id="一把梭"><a href="#一把梭" class="headerlink" title="一把梭"></a>一把梭</h2><p>新建一个bat文件 如 vscodeQt.bat 就放到Qt安装目录下得了,然后创建一个快捷方式</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:<span class="symbol">\W</span>INDOWS<span class="symbol">\S</span>ystem32<span class="symbol">\c</span>md.exe /A /Q /K C:<span class="symbol">\Q</span>tOS<span class="symbol">\5</span>.15.2<span class="symbol">\m</span>svc2019<span class="symbol">\b</span>in<span class="symbol">\v</span>scodeQt.bat</span><br></pre></td></tr></table></figure><p>内容如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">echo</span> Setting up environment <span class="keyword">for</span> Qt usage...</span><br><span class="line"><span class="built_in">set</span> PATH=C:\QtOS\5.15.2\msvc2019\bin;%PATH%</span><br><span class="line"><span class="built_in">cd</span> /D C:\QtOS\5.15.2\msvc2019</span><br><span class="line"><span class="built_in">echo</span> Remember to call vcvarsall.bat to complete environment setup!</span><br><span class="line"></span><br><span class="line">call <span class="string">&quot;C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvarsall.bat&quot;</span> x86_amd64</span><br><span class="line"><span class="string">&quot;C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\devenv.exe&quot;</span></span><br></pre></td></tr></table></figure><h2 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题?"></a>可能遇到的问题?</h2><ol><li><p>工具链错误<br><img src="/photos/VS2019%E6%97%A0%E6%B3%95%E8%AE%BE%E7%BD%AEQt%E7%89%88%E6%9C%AC%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E5%B7%A5%E5%85%B7%E9%93%BE%E9%94%99%E8%AF%AF.webp" alt="工具链错误"><br><img src="/photos/VS2019%E6%97%A0%E6%B3%95%E8%AE%BE%E7%BD%AEQt%E7%89%88%E6%9C%AC%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E5%B7%A5%E5%85%B7%E9%93%BE%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3.webp" alt="工具链错误解决"></p></li><li><p>架构错误<br><img src="/photos/VS2019%E6%97%A0%E6%B3%95%E8%AE%BE%E7%BD%AEQt%E7%89%88%E6%9C%AC%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E6%9E%B6%E6%9E%84%E9%94%99%E8%AF%AF.webp" alt="架构错误"><br><img src="/photos/VS2019%E6%97%A0%E6%B3%95%E8%AE%BE%E7%BD%AEQt%E7%89%88%E6%9C%AC%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E6%9E%B6%E6%9E%84%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3.webp" alt="架构错误解决"></p></li><li><p>Qt版本错误<br><img src="/photos/VS2019%E6%97%A0%E6%B3%95%E8%AE%BE%E7%BD%AEQt%E7%89%88%E6%9C%AC%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/Qt%E7%89%88%E6%9C%AC%E9%94%99%E8%AF%AF.webp" alt="Qt版本错误"><br><img src="/photos/VS2019%E6%97%A0%E6%B3%95%E8%AE%BE%E7%BD%AEQt%E7%89%88%E6%9C%AC%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/Qt%E7%89%88%E6%9C%AC%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3.webp" alt="Qt版本错误解决"><br><img src="/photos/VS2019%E6%97%A0%E6%B3%95%E8%AE%BE%E7%BD%AEQt%E7%89%88%E6%9C%AC%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/Qt%E6%A8%A1%E5%9D%97%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3.webp" alt="Qt模块错误解决"></p></li><li><p>DLL依赖错误<br><img src="/photos/VS2019%E6%97%A0%E6%B3%95%E8%AE%BE%E7%BD%AEQt%E7%89%88%E6%9C%AC%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/DLL%E4%BE%9D%E8%B5%96%E9%94%99%E8%AF%AF.webp" alt="DLL依赖错误"><br>解决:<br>其他的Qt版本不要设置为PATH变量中,否则可能造成干扰</p></li></ol><blockquote><p>下面都是废话</p></blockquote><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><ol start="0"><li><p>先卸载已安装的Qt插件. 打开命令行</p></li><li><p>运行Qt 安装目录下的qtenv2.bat(C:\Qt\5.15.2\msvc2019\bin\qtenv2.bat)</p></li><li><p>运行 vcvarsall.bat 注意带参数 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvarsall.bat)<br>参数为 Qt安装版本(如我只安装的Qt5.15.2的 MSVC 32位版本)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Qt\5.15.2\msvc2019\bin\qtenv2.bat</span><br><span class="line">C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvarsall.bat x86_amd64</span><br></pre></td></tr></table></figure></li><li><p>在环境变量中找到QtMsBuild路径 典型的为C:\Users\用户名\AppData\Local\QtMsBuild 删除该目录(同时删除环境变量值)</p></li><li><p>在注册表中删除Digia</p><ul><li>uninstall QtAddin</li><li>search and delete all “qt” files (e.g. “C:\Users*****\AppData\Local\QtMsBuild”)<br>remove QtAddin related environment variables (e.g. QTDIR, QtMsBuild, …)</li><li>search registry, remove Digia and QtAddin related keys</li><li>install QtAddin</li></ul></li><li><p>删除已有Qt工程目录下的.qmake.stash 以及和VS2019 相关的文件如 *.vcxproj</p></li><li><p>利用QtAddin打开pro工程(打完收招)</p></li></ol><blockquote><p>其实最简单的应该是安装Qt版本的时候64位和32位一起安装(我为了省磁盘空间只安装了32位的Qt Msvc2019版本)</p></blockquote><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://bugreports.qt.io/browse/QTVSADDINBUG-806">Cannot add a Qt Version in QT options</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Qt" scheme="https://liusblog.top/categories/Qt/"/>
    
    
    <category term="Qt" scheme="https://liusblog.top/tags/Qt/"/>
    
    <category term="Windows" scheme="https://liusblog.top/tags/Windows/"/>
    
    <category term="VS2019" scheme="https://liusblog.top/tags/VS2019/"/>
    
    <category term="版本" scheme="https://liusblog.top/tags/%E7%89%88%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>Qt开机自动启</title>
    <link href="https://liusblog.top/2022/06/23/Qt%E5%BC%80%E6%9C%BA%E8%87%AA%E5%8A%A8%E5%90%AF%E5%8A%A8/"/>
    <id>https://liusblog.top/2022/06/23/Qt%E5%BC%80%E6%9C%BA%E8%87%AA%E5%8A%A8%E5%90%AF%E5%8A%A8/</id>
    <published>2022-06-23T06:45:54.000Z</published>
    <updated>2022-06-23T07:32:10.133Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>开机自启动是一个常用需求,本文探讨之..</p></blockquote><h2 id="windows平台"><a href="#windows平台" class="headerlink" title="windows平台"></a>windows平台</h2><ol><li><p>修改注册表: 不推荐</p><ul><li>有些杀软拦截</li><li>启动时机较早(当然是启动后),可能有些COM之类的接口调用会失败</li></ul></li><li><p>使用计划任务自启动: 不推荐</p><ul><li>不利于编程</li><li>可设置性最高(甚至不用登陆windows就可以运行)</li></ul></li><li><p>使用快捷方式启动: 推荐</p><ul><li>编程简单</li></ul></li></ol><p>下面只介绍在方法三的编程</p><hr><p>3.1  简单启动<br>使用QStandardPaths + QFile::link 可以完成该目的<br>需要注意的是在XP和非XP系统的快捷方式路径不同(分别为Startup和启动)</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开机自启动</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">runWithWindows</span><span class="params">(<span class="keyword">bool</span> autoRun, QString exeName, QString linkName)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> Q_OS_WIN</span></span><br><span class="line">    QString startUpPath = <span class="built_in">QString</span>(<span class="string">&quot;%1/%2&quot;</span>)</span><br><span class="line">            .<span class="built_in">arg</span>(QStandardPaths::<span class="built_in">writableLocation</span>(QStandardPaths::ApplicationsLocation))</span><br><span class="line">            .<span class="built_in">arg</span>(<span class="string">&quot;Startup&quot;</span>);</span><br><span class="line"></span><br><span class="line">    QDir dir;</span><br><span class="line">    <span class="comment">//XP(中文)路径为&quot;启动&quot;</span></span><br><span class="line">    <span class="keyword">if</span>(!dir.<span class="built_in">exists</span>(startUpPath))&#123;</span><br><span class="line">        startUpPath = <span class="built_in">QString</span>(<span class="string">&quot;%1/%2&quot;</span>)</span><br><span class="line">                .<span class="built_in">arg</span>(QStandardPaths::<span class="built_in">writableLocation</span>(QStandardPaths::ApplicationsLocation))</span><br><span class="line">                .<span class="built_in">arg</span>(<span class="string">&quot;启动&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    QString linkFull = <span class="built_in">QString</span>(<span class="string">&quot;%1/%2.lnk&quot;</span>)</span><br><span class="line">            .<span class="built_in">arg</span>(startUpPath)</span><br><span class="line">            .<span class="built_in">arg</span>(linkName);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(autoRun)&#123;</span><br><span class="line">        <span class="comment">//如果文件不一致,则创建</span></span><br><span class="line">        <span class="keyword">if</span>(QFile::<span class="built_in">symLinkTarget</span>(linkFull) != exeName)&#123;</span><br><span class="line">            QFile::<span class="built_in">link</span>(exeName, linkFull);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(QFile::<span class="built_in">exists</span>(linkFull))&#123;</span><br><span class="line">            QFile::<span class="built_in">remove</span>(linkFull);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.2 带参数的启动<br>上面的方式可用于简单的开机自启,但是如果需要创建带参数的快捷方式就鸡鸡了,查看Qt的源代码qfsfileengine_win.cpp中的bool QFSFileEngine::link(const QString &amp;newName)函数, 发现官方偷懒了没办法自己动手吧…</p><blockquote><p>在pro文件中添加<br>win32{<br>   LIBS += -lole32<br>   LIBS += -luuid<br>}</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> Q_OS_WIN32</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;shlobj.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;shobjidl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> Q_OS_WIN32</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">CreateFileShortcut</span><span class="params">(<span class="keyword">const</span> QString &amp;linkFullName, <span class="keyword">const</span> QString &amp;arguments, <span class="keyword">const</span> QString &amp;workDir, <span class="keyword">const</span> QString &amp;exeName)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QString startUpPath = <span class="built_in">QString</span>(<span class="string">&quot;%1/%2&quot;</span>)</span><br><span class="line">            .<span class="built_in">arg</span>(QStandardPaths::<span class="built_in">writableLocation</span>(QStandardPaths::ApplicationsLocation))</span><br><span class="line">            .<span class="built_in">arg</span>(<span class="string">&quot;Startup&quot;</span>);</span><br><span class="line"></span><br><span class="line">    QDir dir;</span><br><span class="line">    <span class="keyword">if</span>(!dir.<span class="built_in">exists</span>(startUpPath))&#123;</span><br><span class="line">        startUpPath = <span class="built_in">QString</span>(<span class="string">&quot;%1/%2&quot;</span>)</span><br><span class="line">                .<span class="built_in">arg</span>(QStandardPaths::<span class="built_in">writableLocation</span>(QStandardPaths::ApplicationsLocation))</span><br><span class="line">                .<span class="built_in">arg</span>(<span class="string">&quot;启动&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    QString linkFull = <span class="built_in">QString</span>(<span class="string">&quot;%1/%2.lnk&quot;</span>)</span><br><span class="line">            .<span class="built_in">arg</span>(startUpPath)</span><br><span class="line">            .<span class="built_in">arg</span>(exeName);</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> !defined(Q_OS_WINCE) &amp;&amp; !defined(Q_OS_WINRT)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> !defined(QT_NO_LIBRARY)</span></span><br><span class="line">    <span class="keyword">bool</span> ret = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    QString linkName = linkFullName;</span><br><span class="line">    QString pathDir = workDir;</span><br><span class="line">    <span class="comment">//### assume that they add .lnk</span></span><br><span class="line">    IShellLink *psl;</span><br><span class="line">    <span class="keyword">bool</span> neededCoInit = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    HRESULT hres = <span class="built_in">CoCreateInstance</span>(CLSID_ShellLink, <span class="literal">NULL</span>, CLSCTX_INPROC_SERVER, IID_IShellLink, (<span class="keyword">void</span> **)&amp;psl);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (hres == CO_E_NOTINITIALIZED) &#123; <span class="comment">// COM was not initialized</span></span><br><span class="line">        neededCoInit = <span class="literal">true</span>;</span><br><span class="line">        <span class="built_in">CoInitialize</span>(<span class="literal">NULL</span>);</span><br><span class="line">        hres = <span class="built_in">CoCreateInstance</span>(CLSID_ShellLink, <span class="literal">NULL</span>, CLSCTX_INPROC_SERVER, IID_IShellLink, (<span class="keyword">void</span> **)&amp;psl);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hres)) &#123;</span><br><span class="line">        hres = psl-&gt;<span class="built_in">SetPath</span>((<span class="keyword">wchar_t</span> *)linkName.<span class="built_in">replace</span>(<span class="built_in">QLatin1Char</span>(<span class="string">&#x27;/&#x27;</span>), <span class="built_in">QLatin1Char</span>(<span class="string">&#x27;\\&#x27;</span>)).<span class="built_in">utf16</span>());</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hres)) &#123;</span><br><span class="line">            hres = psl-&gt;<span class="built_in">SetWorkingDirectory</span>((<span class="keyword">wchar_t</span> *)pathDir.<span class="built_in">replace</span>(<span class="built_in">QLatin1Char</span>(<span class="string">&#x27;/&#x27;</span>), <span class="built_in">QLatin1Char</span>(<span class="string">&#x27;\\&#x27;</span>)).<span class="built_in">utf16</span>());</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hres)) &#123;</span><br><span class="line">                <span class="keyword">if</span>(!arguments.<span class="built_in">isEmpty</span>())&#123;</span><br><span class="line">                    psl-&gt;<span class="built_in">SetArguments</span>((<span class="keyword">wchar_t</span> *)arguments.<span class="built_in">utf16</span>());</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                IPersistFile *ppf;</span><br><span class="line">                hres = psl-&gt;<span class="built_in">QueryInterface</span>(IID_IPersistFile, (<span class="keyword">void</span> **)&amp;ppf);</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hres)) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                    hres = ppf-&gt;<span class="built_in">Save</span>((<span class="keyword">wchar_t</span>*)linkFull.<span class="built_in">utf16</span>(), TRUE);</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hres))</span><br><span class="line">                        ret = <span class="literal">true</span>;</span><br><span class="line">                    ppf-&gt;<span class="built_in">Release</span>();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        psl-&gt;<span class="built_in">Release</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!ret)</span><br><span class="line">        <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;create link error&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (neededCoInit)</span><br><span class="line">        <span class="built_in">CoUninitialize</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">    <span class="built_in">Q_UNUSED</span>(newName);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// QT_NO_LIBRARY</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">elif</span> defined(Q_OS_WINCE) &amp;&amp; !defined(QT_NO_WINCE_SHELLSDK)</span></span><br><span class="line">    QString linkName = newName;</span><br><span class="line">    linkName.<span class="built_in">replace</span>(<span class="built_in">QLatin1Char</span>(<span class="string">&#x27;/&#x27;</span>), <span class="built_in">QLatin1Char</span>(<span class="string">&#x27;\\&#x27;</span>));</span><br><span class="line">    <span class="keyword">if</span> (!linkName.<span class="built_in">endsWith</span>(<span class="built_in">QLatin1String</span>(<span class="string">&quot;.lnk&quot;</span>)))</span><br><span class="line">        linkName += <span class="built_in">QLatin1String</span>(<span class="string">&quot;.lnk&quot;</span>);</span><br><span class="line">    QString orgName = <span class="built_in">fileName</span>(AbsoluteName).<span class="built_in">replace</span>(<span class="built_in">QLatin1Char</span>(<span class="string">&#x27;/&#x27;</span>), <span class="built_in">QLatin1Char</span>(<span class="string">&#x27;\\&#x27;</span>));</span><br><span class="line">    <span class="comment">// Need to append on our own</span></span><br><span class="line">    orgName.<span class="built_in">prepend</span>(<span class="built_in">QLatin1Char</span>(<span class="string">&#x27;&quot;&#x27;</span>));</span><br><span class="line">    orgName.<span class="built_in">append</span>(<span class="built_in">QLatin1Char</span>(<span class="string">&#x27;&quot;&#x27;</span>));</span><br><span class="line">    <span class="keyword">bool</span> ret = <span class="built_in">SUCCEEDED</span>(<span class="built_in">SHCreateShortcut</span>((<span class="keyword">wchar_t</span>*)linkName.<span class="built_in">utf16</span>(), (<span class="keyword">wchar_t</span>*)orgName.<span class="built_in">utf16</span>()));</span><br><span class="line">    <span class="keyword">if</span> (!ret)</span><br><span class="line">        <span class="built_in">setError</span>(QFile::RenameError, <span class="built_in">qt_error_string</span>());</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> <span class="comment">// Q_OS_WINCE &amp;&amp; !QT_NO_WINCE_SHELLSDK</span></span></span><br><span class="line">    <span class="built_in">Q_UNUSED</span>(newName);</span><br><span class="line">    <span class="built_in">Q_UNIMPLEMENTED</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// Q_OS_WINRT</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Linux平台"><a href="#Linux平台" class="headerlink" title="Linux平台"></a>Linux平台</h2><p>这个和windows平台类似(参考了ubuntu下的<a href="https://github.com/oguzhaninan/Stacer">Stacer软件</a>)</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">StartUp::setup</span><span class="params">(<span class="keyword">bool</span> autoRun, QString path, QString linkName, QString icon)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QString autostartPath = QStandardPaths::<span class="built_in">writableLocation</span>(QStandardPaths::ConfigLocation).<span class="built_in">append</span>(<span class="string">&quot;/autostart&quot;</span>);</span><br><span class="line">    <span class="function">QFileInfo <span class="title">fi</span><span class="params">(autostartPath)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (fi.<span class="built_in">isDir</span>()) &#123;</span><br><span class="line">        autostartPath.<span class="built_in">append</span>(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! <span class="built_in">QDir</span>(autostartPath).<span class="built_in">exists</span>()) &#123;</span><br><span class="line">        <span class="built_in">QDir</span>().<span class="built_in">mkdir</span>(autostartPath);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    QString exePath = <span class="built_in">QString</span>(<span class="string">&quot;%1%2.desktop&quot;</span>).<span class="built_in">arg</span>(autostartPath).<span class="built_in">arg</span>(linkName);</span><br><span class="line">    <span class="keyword">if</span>(autoRun)&#123;</span><br><span class="line">        <span class="function">QFile <span class="title">f</span><span class="params">(exePath)</span></span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(f.<span class="built_in">open</span>(QIODevice::WriteOnly))&#123;</span><br><span class="line">            f.<span class="built_in">write</span>(<span class="string">&quot;[Desktop Entry]\n&quot;</span>);</span><br><span class="line">            f.<span class="built_in">write</span>(<span class="built_in">QString</span>(<span class="string">&quot;Name=%1\n&quot;</span>).<span class="built_in">arg</span>(linkName).<span class="built_in">toUtf8</span>());</span><br><span class="line">            f.<span class="built_in">write</span>(<span class="built_in">QString</span>(<span class="string">&quot;Comment=%1 Linux Version\n&quot;</span>).<span class="built_in">arg</span>(linkName).<span class="built_in">toUtf8</span>());</span><br><span class="line">            f.<span class="built_in">write</span>(<span class="built_in">QString</span>(<span class="string">&quot;GenericName=%1\n&quot;</span>).<span class="built_in">arg</span>(linkName).<span class="built_in">toUtf8</span>());</span><br><span class="line">            f.<span class="built_in">write</span>(<span class="built_in">QString</span>(<span class="string">&quot;Terminal=false\n&quot;</span>).<span class="built_in">toUtf8</span>());</span><br><span class="line">            f.<span class="built_in">write</span>(<span class="built_in">QString</span>(<span class="string">&quot;Type=Application\n&quot;</span>).<span class="built_in">toUtf8</span>());</span><br><span class="line">            f.<span class="built_in">write</span>(<span class="built_in">QString</span>(<span class="string">&quot;Exec=%1.sh\n&quot;</span>).<span class="built_in">arg</span>(path).<span class="built_in">toUtf8</span>());</span><br><span class="line">            f.<span class="built_in">write</span>(<span class="built_in">QString</span>(<span class="string">&quot;MimeType=text/plain;\n&quot;</span>).<span class="built_in">toUtf8</span>());</span><br><span class="line">            f.<span class="built_in">write</span>(<span class="built_in">QString</span>(<span class="string">&quot;Icon=%1\n&quot;</span>).<span class="built_in">arg</span>(icon).<span class="built_in">toUtf8</span>());</span><br><span class="line">            f.<span class="built_in">write</span>(<span class="built_in">QString</span>(<span class="string">&quot;StartupNotify=true\n&quot;</span>).<span class="built_in">toUtf8</span>());</span><br><span class="line">            f.<span class="built_in">write</span>(<span class="built_in">QString</span>(<span class="string">&quot;Actions=Run;&quot;</span>).<span class="built_in">toUtf8</span>());</span><br><span class="line">            f.<span class="built_in">close</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//在桌面创建快捷方式需要用gio命令激活</span></span><br><span class="line">        <span class="comment">//gio set ~/Desktop/XXXX.desktop metadata::trusted true</span></span><br><span class="line">        QString desktopPath = <span class="built_in">QString</span>(<span class="string">&quot;%1/%2.desktop&quot;</span>)</span><br><span class="line">                .<span class="built_in">arg</span>(QStandardPaths::<span class="built_in">writableLocation</span>(QStandardPaths::DesktopLocation))</span><br><span class="line">                .<span class="built_in">arg</span>(linkName);</span><br><span class="line"></span><br><span class="line">        QFile::<span class="built_in">copy</span>(exePath, desktopPath);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        QFile::<span class="built_in">remove</span>(exePath);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Qt" scheme="https://liusblog.top/categories/Qt/"/>
    
    
    <category term="Qt" scheme="https://liusblog.top/tags/Qt/"/>
    
    <category term="Windows" scheme="https://liusblog.top/tags/Windows/"/>
    
    <category term="跨平台" scheme="https://liusblog.top/tags/%E8%B7%A8%E5%B9%B3%E5%8F%B0/"/>
    
    <category term="Linux" scheme="https://liusblog.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>巧用grid布局交换div位置</title>
    <link href="https://liusblog.top/2022/03/23/%E9%A1%B5%E9%9D%A2%E4%BA%A4%E6%8D%A2%E4%BD%8D%E7%BD%AE%E7%9A%84%E4%B8%80%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
    <id>https://liusblog.top/2022/03/23/%E9%A1%B5%E9%9D%A2%E4%BA%A4%E6%8D%A2%E4%BD%8D%E7%BD%AE%E7%9A%84%E4%B8%80%E7%A7%8D%E6%96%B9%E6%B3%95/</id>
    <published>2022-03-23T14:08:40.000Z</published>
    <updated>2022-03-23T18:13:22.119Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>经过搜索大部分都是给出使用js来设置css的style属性,这样每个元素还要计算位置,非常不方便,同时可能导致页面混乱</p></blockquote><h2 id="grid布局"><a href="#grid布局" class="headerlink" title="grid布局"></a>grid布局</h2><p><a href="http://ruanyifeng.com/blog/2019/03/grid-layout-tutorial.html">阮一峰大神的博客</a>里面啥都有</p><p>下面说一下这种特殊定位布局的方法<br><img src="/photos/%E5%B7%A7%E7%94%A8grid%E5%B8%83%E5%B1%80%E4%BA%A4%E6%8D%A2div%E4%BD%8D%E7%BD%AE/%E7%89%B9%E5%AE%9A%E5%B8%83%E5%B1%80.webp" alt="布局图"><br>观察一下上图可以发现可以将父级div分为3x4的其中4号元素占用两行两列</p><ol><li>声明父级元素为grid</li><li>指定列数为4列</li><li>指定行数为3行</li><li>指定元素的布局见gridpos4 中grid-column(2 / span 2)意思是 从第二列开始,然后跨越两行</li></ol><p><em><strong>注意</strong></em>: 在vue中的less语法经过测试和大神的有出入 (grid-column: 2 / 4; 会报错) </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#container</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: grid;</span><br><span class="line">    grid-template-<span class="attribute">columns</span>: <span class="number">1</span>fr <span class="number">1</span>fr <span class="number">1</span>fr <span class="number">1</span>fr;</span><br><span class="line">    grid-template-rows: <span class="number">1</span>fr <span class="number">1</span>fr <span class="number">1</span>fr;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.gridpos4</span> &#123;</span><br><span class="line">    grid-column: <span class="number">2</span> / span <span class="number">2</span>;</span><br><span class="line">    grid-row: <span class="number">1</span> / span <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="元素交换位置"><a href="#元素交换位置" class="headerlink" title="元素交换位置"></a>元素交换位置</h2><ol><li>使用transform动画 <a href="%22https://github.com/SimonZhangITer/DataVisualization">参见项目</a></li></ol><p><img src="/photos/%E5%B7%A7%E7%94%A8grid%E5%B8%83%E5%B1%80%E4%BA%A4%E6%8D%A2div%E4%BD%8D%E7%BD%AE/%E4%BD%BF%E7%94%A8transform.gif" alt="使用transform"></p><p>关键代码如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;flex-container column&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item one&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;clickChart(&#x27;1&#x27;)&quot;</span> <span class="attr">style</span>=<span class="string">&quot;transform: translate(-22.4%,-33.5%) scale(0.33)&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">multipleColumn</span>&gt;</span><span class="tag">&lt;/<span class="name">multipleColumn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item two&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;clickChart(&#x27;2&#x27;)&quot;</span> <span class="attr">style</span>=<span class="string">&quot;transform: translate(-22.4%,0.5%) scale(0.33)&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">column</span>&gt;</span><span class="tag">&lt;/<span class="name">column</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item three&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;clickChart(&#x27;3&#x27;)&quot;</span> <span class="attr">style</span>=<span class="string">&quot;transform: translate(-22.4%,34.5%) scale(0.33)&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">v-line</span>&gt;</span><span class="tag">&lt;/<span class="name">v-line</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item four active&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;clickChart(&#x27;4&#x27;)&quot;</span> <span class="attr">style</span>=<span class="string">&quot;transform: translate(43.7%, 0) scale(1)&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">point</span>&gt;</span><span class="tag">&lt;/<span class="name">point</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>优点就不说了,下面说点不方便的地方</p><ul><li>要每次写定每个元素的位置,这个还真不好计算</li><li>切换只是transform等比例放大缩小显示效果(这样放大时可能会早晨模糊)</li></ul><ol start="2"><li>我的方法<br>既然巴拉巴拉说了人家的不足,show my code, 简单解释下核心思路,因为可以通过grid-column以及grid-row来指定每个元素的位置,于是在鼠标点击的时候来改变类简单时间交换两个元素的位置</li></ol><p><img src="/photos/%E5%B7%A7%E7%94%A8grid%E5%B8%83%E5%B1%80%E4%BA%A4%E6%8D%A2div%E4%BD%8D%E7%BD%AE/%E6%95%88%E6%9E%9C%E5%B1%95%E7%A4%BA.gif" alt="效果展示"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;robots&quot;</span> <span class="attr">content</span>=<span class="string">&quot;noindex&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>JS Bin<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-id">#container</span> &#123;</span></span><br><span class="line"><span class="css"><span class="attribute">display</span>: grid;</span></span><br><span class="line"><span class="css">grid-template-<span class="attribute">columns</span>: <span class="number">1</span>fr <span class="number">1</span>fr <span class="number">1</span>fr <span class="number">1</span>fr;</span></span><br><span class="line"><span class="css">grid-template-rows: <span class="number">1</span>fr <span class="number">1</span>fr <span class="number">1</span>fr;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.gridpos1</span> &#123;</span></span><br><span class="line"><span class="css">grid-column: <span class="number">1</span>;</span></span><br><span class="line"><span class="css">grid-row: <span class="number">1</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.gridpos2</span> &#123;</span></span><br><span class="line"><span class="css">grid-column: <span class="number">4</span>;</span></span><br><span class="line"><span class="css">grid-row: <span class="number">1</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.gridpos3</span> &#123;</span></span><br><span class="line"><span class="css">grid-column: <span class="number">1</span>;</span></span><br><span class="line"><span class="css">grid-row: <span class="number">2</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.gridpos4</span> &#123;</span></span><br><span class="line"><span class="css">grid-column: <span class="number">2</span> / span <span class="number">2</span>;</span></span><br><span class="line"><span class="css">grid-row: <span class="number">1</span> / span <span class="number">2</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">transition</span>: all <span class="number">4s</span> ease-in-out;</span></span><br><span class="line"><span class="css"><span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">360deg</span>) <span class="built_in">scale</span>(<span class="number">0.5</span>) <span class="built_in">scale</span>(<span class="number">2</span>);</span></span><br><span class="line"><span class="css"><span class="attribute">animation</span>: move <span class="number">2s</span>;</span></span><br><span class="line"><span class="css"><span class="comment">/* transform: scale(2.0) scale(0.5); */</span></span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.gridpos5</span> &#123;</span></span><br><span class="line"><span class="css">grid-column: <span class="number">4</span>;</span></span><br><span class="line"><span class="css">grid-row: <span class="number">2</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.gridpos6</span> &#123;</span></span><br><span class="line"><span class="css">grid-column: <span class="number">1</span>;</span></span><br><span class="line"><span class="css">grid-row: <span class="number">3</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.gridpos7</span> &#123;</span></span><br><span class="line"><span class="css">grid-column: <span class="number">2</span>;</span></span><br><span class="line"><span class="css">grid-row: <span class="number">3</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.gridpos8</span> &#123;</span></span><br><span class="line"><span class="css">grid-column: <span class="number">3</span>;</span></span><br><span class="line"><span class="css">grid-row: <span class="number">3</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.gridpos9</span> &#123;</span></span><br><span class="line"><span class="css">grid-column: <span class="number">4</span>;</span></span><br><span class="line"><span class="css">grid-row: <span class="number">3</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="comment">/* 声明动画 关键帧 @keyframes 动画名称&#123;&#125; */</span></span></span><br><span class="line"><span class="css"><span class="keyword">@keyframes</span> move &#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">from</span> &#123;</span></span><br><span class="line"><span class="css"><span class="attribute">opacity</span>: <span class="number">0.2</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-tag">to</span> &#123;</span></span><br><span class="line"><span class="css"><span class="attribute">opacity</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.item</span> &#123;</span></span><br><span class="line"><span class="css"><span class="attribute">font-size</span>: <span class="number">4em</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="css"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#e5e4e9</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.item-1</span> &#123;</span></span><br><span class="line"><span class="css"><span class="attribute">background-color</span>: <span class="number">#ef342a</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.item-2</span> &#123;</span></span><br><span class="line"><span class="css"><span class="attribute">background-color</span>: <span class="number">#f68f26</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.item-3</span> &#123;</span></span><br><span class="line"><span class="css"><span class="attribute">background-color</span>: <span class="number">#4ba946</span>;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.item-4</span> &#123;</span></span><br><span class="line"><span class="css"><span class="attribute">background-color</span>: <span class="number">#0376c2</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.item-5</span> &#123;</span></span><br><span class="line"><span class="css"><span class="attribute">background-color</span>: <span class="number">#c077af</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.item-6</span> &#123;</span></span><br><span class="line"><span class="css"><span class="attribute">background-color</span>: <span class="number">#f8d29d</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.item-7</span> &#123;</span></span><br><span class="line"><span class="css"><span class="attribute">background-color</span>: <span class="number">#b5a87f</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.item-8</span> &#123;</span></span><br><span class="line"><span class="css"><span class="attribute">background-color</span>: <span class="number">#d0e4a9</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.item-9</span> &#123;</span></span><br><span class="line"><span class="css"><span class="attribute">background-color</span>: <span class="number">#4dc7ec</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item item-1 gridpos1&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;clickf(1)&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item item-2 gridpos2&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;clickf(2)&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item item-3 gridpos3&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;clickf(3)&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item item-4 gridpos4&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;clickf(4)&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item item-5 gridpos5&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;clickf(5)&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item item-6 gridpos6&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;clickf(6)&quot;</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item item-7 gridpos7&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;clickf(7)&quot;</span>&gt;</span>7<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item item-8 gridpos8&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;clickf(8)&quot;</span>&gt;</span>8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item item-9 gridpos9&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;clickf(9)&quot;</span>&gt;</span>9<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.lastIndex = <span class="number">4</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">clickf</span>(<span class="params">p</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> ele = <span class="built_in">document</span>.getElementsByClassName(<span class="string">`item-<span class="subst">$&#123;p&#125;</span>`</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> centerEle = <span class="built_in">document</span>.getElementsByClassName(<span class="string">`item-<span class="subst">$&#123;lastIndex&#125;</span>`</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> posName = <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> eleClassList = ele.classList;</span></span><br><span class="line"><span class="javascript"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; eleClassList.length; i++) &#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span> (eleClassList[i].indexOf(<span class="string">&quot;gridpos&quot;</span>) !== -<span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="javascript">posName = eleClassList[i];</span></span><br><span class="line"><span class="javascript"><span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span> (posName === <span class="string">&quot;gridpos4&quot;</span>) &#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">&quot;点击了中间&quot;</span>)</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span>;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">//1. 被点击和中间先移除</span></span></span><br><span class="line"><span class="javascript">ele.classList.remove(posName);</span></span><br><span class="line"><span class="javascript">centerEle.classList.remove(<span class="string">&quot;gridpos4&quot;</span>)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">//2.各自增加</span></span></span><br><span class="line"><span class="javascript">ele.classList.add(<span class="string">&quot;gridpos4&quot;</span>);</span></span><br><span class="line"><span class="javascript">centerEle.classList.add(posName);</span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.lastIndex = p;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="PS"><a href="#PS" class="headerlink" title="PS"></a>PS</h2><p>很久都没ps了,在和echarts结合的时候需要注意两点</p><ol><li>在切换grid位置完成的时候,要发送一个resize事件,当然前提是每个echart要绑定页面大小改变resize事件,这里不展开说<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> myEvent = <span class="keyword">new</span> Event(<span class="string">&#x27;resize&#x27;</span>);</span><br><span class="line"><span class="built_in">window</span>.dispatchEvent(myEvent);</span><br></pre></td></tr></table></figure></li><li>请注意上例中的  <code>overflow: hidden;</code> 这句不然会造成页面的布局混乱</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="网站开发" scheme="https://liusblog.top/categories/%E7%BD%91%E7%AB%99%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="vue" scheme="https://liusblog.top/tags/vue/"/>
    
    <category term="grid布局" scheme="https://liusblog.top/tags/grid%E5%B8%83%E5%B1%80/"/>
    
    <category term="动画" scheme="https://liusblog.top/tags/%E5%8A%A8%E7%94%BB/"/>
    
  </entry>
  
  <entry>
    <title>哔哩哔哩缓存视频导出教程</title>
    <link href="https://liusblog.top/2022/01/13/%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9%E7%BC%93%E5%AD%98%E8%A7%86%E9%A2%91%E5%AF%BC%E5%87%BA%E6%95%99%E7%A8%8B/"/>
    <id>https://liusblog.top/2022/01/13/%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9%E7%BC%93%E5%AD%98%E8%A7%86%E9%A2%91%E5%AF%BC%E5%87%BA%E6%95%99%E7%A8%8B/</id>
    <published>2022-01-13T12:49:33.000Z</published>
    <updated>2022-08-08T09:53:32.554Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>有时候资源会被清理…还好有缓存,怎么导出呢?请往下看</p></blockquote><ol><li><p>将手机连接到电脑,打开 XXXX/Android/data/tv.danmaku.bili/download 文件夹找到要导出的视频<br>如下图<br><img src="/photos/%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9%E7%BC%93%E5%AD%98%E8%A7%86%E9%A2%91%E5%AF%BC%E5%87%BA%E6%95%99%E7%A8%8B/%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9%E8%A7%86%E9%A2%91%E7%BC%93%E5%AD%98%E8%B7%AF%E5%BE%84.webp" alt="哔哩哔哩视频缓存路径"></p></li><li><p>运行本大神写的小脚本(需要安装ffmpeg)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">listDir</span>(<span class="params">path</span>):</span></span><br><span class="line">    files = os.listdir(path)</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">        jsName = os.path.join(path, file, <span class="string">&quot;entry.json&quot;</span>)</span><br><span class="line"></span><br><span class="line">        audioName = os.path.join(path, file, <span class="string">&quot;16&quot;</span>, <span class="string">&quot;audio.m4s&quot;</span>)</span><br><span class="line">        videoName = os.path.join(path, file, <span class="string">&quot;16&quot;</span>, <span class="string">&quot;video.m4s&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(jsName, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                data = f.read()</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    info = json.loads(data)</span><br><span class="line">                    title = info[<span class="string">&#x27;page_data&#x27;</span>][<span class="string">&#x27;part&#x27;</span>]</span><br><span class="line">                    <span class="comment"># ffmpeg -i video.mp4 -i audio.wav -c:v copy -c:a aac -strict experimental output.mp4</span></span><br><span class="line">                    os.popen(</span><br><span class="line">                        <span class="string">&#x27;ffmpeg -i %s -i %s -c:v copy -c:a aac -strict experimental &quot;%s.mp4&quot;&#x27;</span> % (audioName, videoName, title))</span><br><span class="line">                    <span class="built_in">print</span>(audioName, title)</span><br><span class="line">                <span class="keyword">except</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;#################&quot;</span>, jsName)</span><br><span class="line">                    <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="built_in">print</span>(jsName)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    listDir(<span class="string">&quot;.&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>硬是凑够三步….</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Python" scheme="https://liusblog.top/categories/Python/"/>
    
    
    <category term="哔哩哔哩" scheme="https://liusblog.top/tags/%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9/"/>
    
    <category term="bilibili" scheme="https://liusblog.top/tags/bilibili/"/>
    
    <category term="视频导出" scheme="https://liusblog.top/tags/%E8%A7%86%E9%A2%91%E5%AF%BC%E5%87%BA/"/>
    
  </entry>
  
  <entry>
    <title>Qt中的多线程</title>
    <link href="https://liusblog.top/2022/01/11/Qt%E4%B8%AD%E7%9A%84%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    <id>https://liusblog.top/2022/01/11/Qt%E4%B8%AD%E7%9A%84%E5%A4%9A%E7%BA%BF%E7%A8%8B/</id>
    <published>2022-01-11T12:34:25.000Z</published>
    <updated>2022-01-13T09:43:30.824Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>众所周知Qt的多线程有两种方法(写起来有三种), 注意当线程存在死循环时(即使是waitcondition等待),则该线程的事件循环将会被阻塞</p></blockquote><ol><li>继承QThread<br>官方范例里面都没有说线程等待某一个事件的问题,查找文档之后发现有个QWaitCondition 很好用, 大概如下</li></ol><figure class="highlight h"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> INHERITQTHREAD_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INHERITQTHREAD_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QThread&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QWaitCondition&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QMutex&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDateTime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTimer&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDebug&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">InheritQThread</span> :</span> <span class="keyword">public</span> QThread</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">explicit</span> <span class="title">InheritQThread</span><span class="params">(QObject *parent = <span class="number">0</span>)</span></span>;</span><br><span class="line">    ~InheritQThread();</span><br><span class="line"></span><br><span class="line">signals:</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> slots:</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    QWaitCondition m_condition;</span><br><span class="line">    QMutex m_mutex;</span><br><span class="line">    <span class="keyword">bool</span> m_quit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// INHERITQTHREAD_H</span></span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;inheritqthread.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">InheritQThread::<span class="built_in">InheritQThread</span>(QObject *parent) : <span class="built_in">QThread</span>(parent)</span><br><span class="line">&#123;</span><br><span class="line">    m_quit = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    QTimer *t = <span class="keyword">new</span> <span class="built_in">QTimer</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    t-&gt;<span class="built_in">setTimerType</span>(Qt::PreciseTimer);</span><br><span class="line">    t-&gt;<span class="built_in">setInterval</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">connect</span>(t, &amp;QTimer::timeout, [=]()&#123;</span><br><span class="line">        <span class="comment">//此段代码运行在老线程中...</span></span><br><span class="line">        m_condition.<span class="built_in">wakeAll</span>();</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    t-&gt;<span class="built_in">start</span>();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">InheritQThread::~<span class="built_in">InheritQThread</span>()</span><br><span class="line">&#123;</span><br><span class="line">    m_condition.<span class="built_in">wakeAll</span>();</span><br><span class="line">    m_quit = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">quit</span>();</span><br><span class="line">    <span class="built_in">wait</span>();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;线程退出完毕&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InheritQThread::run</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(m_quit)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        m_mutex.<span class="built_in">lock</span>();</span><br><span class="line">        m_condition.<span class="built_in">wait</span>(&amp;m_mutex);</span><br><span class="line">        m_mutex.<span class="built_in">unlock</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//simulate time consuming operator</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++)&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">qDebug</span>() &lt;&lt; QDateTime::<span class="built_in">currentDateTime</span>().<span class="built_in">toString</span>(<span class="string">&quot;yyyy-MM-dd hh:mm:ss.zzz&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>用一个父类<strong>包裹</strong>下QThread, 分两种情况</li></ol><ul><li>使用Controller  和 Worker 然后通过信号槽来工作, 参见官方文档的例子<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Worker</span> :</span> <span class="keyword">public</span> QObject</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> slots:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">doWork</span><span class="params">(<span class="keyword">const</span> QString &amp;parameter)</span> </span>&#123;</span><br><span class="line">        QString result;</span><br><span class="line">        <span class="comment">/* ... here is the expensive or blocking operation ... */</span></span><br><span class="line">        <span class="function">emit <span class="title">resultReady</span><span class="params">(result)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">signals:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">resultReady</span><span class="params">(<span class="keyword">const</span> QString &amp;result)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Controller</span> :</span> <span class="keyword">public</span> QObject</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line">    QThread workerThread;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Controller</span>() &#123;</span><br><span class="line">        Worker *worker = <span class="keyword">new</span> Worker;</span><br><span class="line">        worker-&gt;<span class="built_in">moveToThread</span>(&amp;workerThread);</span><br><span class="line">        <span class="built_in">connect</span>(&amp;workerThread, &amp;QThread::finished, worker, &amp;QObject::deleteLater);</span><br><span class="line">        <span class="built_in">connect</span>(<span class="keyword">this</span>, &amp;Controller::operate, worker, &amp;Worker::doWork);</span><br><span class="line">        <span class="built_in">connect</span>(worker, &amp;Worker::resultReady, <span class="keyword">this</span>, &amp;Controller::handleResults);</span><br><span class="line">        workerThread.<span class="built_in">start</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">Controller</span>() &#123;</span><br><span class="line">        workerThread.<span class="built_in">quit</span>();</span><br><span class="line">        workerThread.<span class="built_in">wait</span>();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">public</span> slots:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">handleResults</span><span class="params">(<span class="keyword">const</span> QString &amp;)</span></span>;</span><br><span class="line">signals:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">operate</span><span class="params">(<span class="keyword">const</span> QString &amp;)</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li>将父类moveToThread,大概如下<blockquote><p>调用时注意 ThreadContainer *c = new ThreadContainer; 不能有父对象<br>同时注意析构时删除 c</p></blockquote></li></ul><figure class="highlight h"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> THREADCONTAINER_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> THREADCONTAINER_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QObject&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QThread&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTimer&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QMutex&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ThreadContainer</span> :</span> <span class="keyword">public</span> QObject</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">explicit</span> <span class="title">ThreadContainer</span><span class="params">(QObject *parent = <span class="number">0</span>)</span></span>;</span><br><span class="line">    ~ThreadContainer();</span><br><span class="line"></span><br><span class="line">signals:</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> slots:</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    QMutex m_mutex;</span><br><span class="line">    <span class="keyword">bool</span> m_quit;</span><br><span class="line"></span><br><span class="line">    QThread *m_thread;</span><br><span class="line">    QTimer *m_timer;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">doWork</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// THREADCONTAINER_H</span></span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;threadcontainer.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDateTime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDebug&gt;</span></span></span><br><span class="line"></span><br><span class="line">ThreadContainer::<span class="built_in">ThreadContainer</span>(QObject *parent) : <span class="built_in">QObject</span>(parent)</span><br><span class="line">&#123;</span><br><span class="line">    m_quit = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    m_thread = <span class="keyword">new</span> QThread;</span><br><span class="line">    m_thread-&gt;<span class="built_in">start</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//这一句</span></span><br><span class="line">    <span class="built_in">moveToThread</span>(m_thread);</span><br><span class="line"></span><br><span class="line">    m_timer = <span class="keyword">new</span> QTimer;</span><br><span class="line">    m_timer-&gt;<span class="built_in">setTimerType</span>(Qt::PreciseTimer);</span><br><span class="line">    m_timer-&gt;<span class="built_in">setInterval</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注意此时doWork运行在新线程中</span></span><br><span class="line">    <span class="comment">//connect(m_timer, &amp;QTimer::timeout, this, &amp;ThreadContainer::doWork);</span></span><br><span class="line">    <span class="built_in">connect</span>(m_timer, &amp;QTimer::timeout, <span class="keyword">this</span>, [=]()&#123;</span><br><span class="line">        <span class="comment">//不信你可以打印当前的 QThread::currentThreadId()</span></span><br><span class="line">        <span class="built_in">doWork</span>();</span><br><span class="line">    &#125;);</span><br><span class="line">    m_timer-&gt;<span class="built_in">start</span>();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;ThreadContainer&quot;</span> &lt;&lt; QThread::<span class="built_in">currentThreadId</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//如果doWork是一个死循环,则这里不能直接调用,因为还是运行在父线程中,想要调用可使用以下方法,同时在doWork如果使用waitcondition,则应该写一个函数显示调用wakeAll</span></span><br><span class="line">    <span class="comment">//1. 通过QTimer::singleShot</span></span><br><span class="line">    <span class="comment">//2. 使用QMetaObject::invokeMethod(this, &quot;doWork&quot;, Qt::QueuedConnection);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//此句话以后(构造函数结束)该类的函数都将运行在子线程,除非是生成该对象的线程显式的调用时,被调用的函数才会运行在调用者的线程</span></span><br><span class="line">    <span class="comment">//既函数运行线程由调用者决定因为构造函数运行在调用者线程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ThreadContainer::~<span class="built_in">ThreadContainer</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//这段代码运行在父线程,因为析构一般都是外部调用</span></span><br><span class="line">    m_mutex.<span class="built_in">lock</span>();</span><br><span class="line">    m_quit = <span class="literal">true</span>;</span><br><span class="line">    m_mutex.<span class="built_in">unlock</span>();</span><br><span class="line"></span><br><span class="line">    m_thread-&gt;<span class="built_in">quit</span>();</span><br><span class="line">    m_thread-&gt;<span class="built_in">wait</span>();</span><br><span class="line">    <span class="keyword">delete</span> m_thread;</span><br><span class="line">    <span class="keyword">delete</span> m_timer;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;线程退出完毕&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果此函数使用while死循环,则需要外部驱动来触发等待条件</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ThreadContainer::doWork</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">QMutexLocker <span class="title">locker</span><span class="params">(&amp;m_mutex)</span></span>;</span><br><span class="line">    <span class="keyword">if</span>(m_quit)&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//simulate time consuming operator</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++)&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; QDateTime::<span class="built_in">currentDateTime</span>().<span class="built_in">toString</span>(<span class="string">&quot;yyyy-MM-dd hh:mm:ss.zzz&quot;</span>) &lt;&lt; QThread::<span class="built_in">currentThreadId</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Qt" scheme="https://liusblog.top/categories/Qt/"/>
    
    
    <category term="Qt" scheme="https://liusblog.top/tags/Qt/"/>
    
    <category term="多线程" scheme="https://liusblog.top/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
    <category term="QThread" scheme="https://liusblog.top/tags/QThread/"/>
    
  </entry>
  
  <entry>
    <title>有关Qt的一些记录</title>
    <link href="https://liusblog.top/2022/01/02/%E6%9C%89%E5%85%B3Qt%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%B0%E5%BD%95/"/>
    <id>https://liusblog.top/2022/01/02/%E6%9C%89%E5%85%B3Qt%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%B0%E5%BD%95/</id>
    <published>2022-01-02T03:49:29.000Z</published>
    <updated>2022-04-21T11:13:12.894Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="windows下QtCreator的大内存改造-32位"><a href="#windows下QtCreator的大内存改造-32位" class="headerlink" title="windows下QtCreator的大内存改造(32位)"></a>windows下QtCreator的大内存改造(32位)</h2><p>因为要查看Qt的源代码,因为我用的Qt版本是5.7.0是32位的,所以会出现加载文件过多而崩溃的现象,方法为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">editbin /largeaddressaware qtcreator.exe</span><br></pre></td></tr></table></figure><p>修改前先备份原程序,修改好以后通过dumpbin /headers来查看是否多了一条Application can handle large (&gt;2GB) addresses</p><h2 id="Unable-to-set-geometry的bug修复"><a href="#Unable-to-set-geometry的bug修复" class="headerlink" title="Unable to set geometry的bug修复"></a>Unable to set geometry的bug修复</h2><p>Qt有个bug:当使用QSystemTrayIcon时,可能会用到拦截关闭按钮后隐藏的需求,此时如果最大化后点击关闭按钮那么恢复窗口时则会出现setGeometry: Unable to set geometry的问题.官方的示例也存在该问题.折腾了好久才勉强解决<br>开始想重载窗口的close()函数,直接调用hide()函数,结果失败,通过阅读帮助发现该函数底层不管如何会首先发送一个QCloseEvent时间(在重载函数调用之前)这就尴尬了.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">QWidget::close</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><blockquote><p>Closes this widget. Returns true if the widget was closed; otherwise returns false.<br>First it sends the widget a QCloseEvent. The widget is hidden if it accepts the close event. If it ignores the event, nothing happens. The default implementation of QWidget::closeEvent() accepts the close event.</p></blockquote><p>经过一阵乱撸找到最终的解决方案如下,在隐藏前需要改变窗口的状态(或者调用showNormal()也可)</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//拦截关闭事件</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWidget::closeEvent</span><span class="params">(QCloseEvent *event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//隐藏之前记录是否为最大化</span></span><br><span class="line">    m_lastIsMax = <span class="built_in">isMaximized</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//必须黑科技一把,清除掉最大化状态....</span></span><br><span class="line">    <span class="built_in">setWindowState</span>(<span class="built_in">windowState</span>() &amp; ~Qt::WindowMaximized);</span><br><span class="line">    <span class="comment">//showNormal();</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//显示为正常窗口之后才能隐藏,否则会导致最大化窗口的问题...</span></span><br><span class="line">    <span class="built_in">hide</span>();</span><br><span class="line">    event-&gt;<span class="built_in">ignore</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//恢复时,先判断是否最后关闭时为最大化</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWidget::showWindowNormal</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(m_lastIsMax)&#123;</span><br><span class="line">        <span class="built_in">showMaximized</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">       <span class="built_in">show</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">activateWindow</span>();</span><br><span class="line">    <span class="built_in">raise</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="程序带上Qt源码调试"><a href="#程序带上Qt源码调试" class="headerlink" title="程序带上Qt源码调试"></a>程序带上Qt源码调试</h2><p>打开QtCreator,在工具-&gt;选项-&gt;调试器-&gt;概要 找到添加Qt源码…然后点击找到Qt安装目录下的Src文件夹即可<br><img src="/photos/%E6%9C%89%E5%85%B3Qt%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%B0%E5%BD%95/%E5%8A%A0%E5%85%A5Qt%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95.webp" alt="加入Qt源码"></p><h2 id="崩溃收集"><a href="#崩溃收集" class="headerlink" title="崩溃收集"></a>崩溃收集</h2><ol start="0"><li><p>如果是Linux环境请下载<a href="https://github.com/adelshokhy112/linux-syscall-support">linux_syscall_support.h</a>放到<strong>src/third_party/lss</strong>目录下</p></li><li><p>使用谷歌的breakpad<br><a href="https://github.com/google/breakpad">google的breakpad</a></p></li><li><p>编写一个.pri文件</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ***************************************************************************</span></span><br><span class="line"><span class="comment"># Implemented using http://blog.inventic.eu/2012/08/qt-and-google-breakpad/</span></span><br><span class="line"><span class="comment"># as a the reference.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Get Google Breakpad here: https://code.google.com/p/google-breakpad/</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The required breakpad sources have been copied into /src in order to make</span></span><br><span class="line"><span class="comment"># integration with the application smooth and easy.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># To use source from Google Breakpad SVN checkout instead, change $$PWD/src</span></span><br><span class="line"><span class="comment"># to path where it was checked out. </span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># ***************************************************************************</span></span><br><span class="line"><span class="comment"># 更新linux下的配置</span></span><br><span class="line"><span class="comment"># convert_UTF.c-&gt;convert_UTF.cc</span></span><br><span class="line"><span class="comment"># + breakpad_getcontext.S</span></span><br><span class="line"><span class="comment"># + microdump_writer.cc</span></span><br><span class="line"><span class="comment"># + ucontext_reader.cc</span></span><br><span class="line"><span class="comment"># + thread_info.cc</span></span><br><span class="line"></span><br><span class="line">HEADERS += $$PWD/crashhandler.h</span><br><span class="line">SOURCES += $$PWD/crashhandler.cpp</span><br><span class="line"> </span><br><span class="line">INCLUDEPATH += $$PWD</span><br><span class="line">INCLUDEPATH += $$PWD/src</span><br><span class="line"></span><br><span class="line"><span class="comment"># Windows</span></span><br><span class="line"><span class="section">win32:HEADERS += $$PWD/src/common/windows/string_utils-inl.h</span></span><br><span class="line"><span class="section">win32:HEADERS += $$PWD/src/common/windows/guid_string.h</span></span><br><span class="line"><span class="section">win32:HEADERS += $$PWD/src/client/windows/handler/exception_handler.h</span></span><br><span class="line"><span class="section">win32:HEADERS += $$PWD/src/client/windows/common/ipc_protocol.h</span></span><br><span class="line"><span class="section">win32:HEADERS += $$PWD/src/google_breakpad/common/minidump_format.h</span></span><br><span class="line"><span class="section">win32:HEADERS += $$PWD/src/google_breakpad/common/breakpad_types.h</span></span><br><span class="line"><span class="section">win32:HEADERS += $$PWD/src/client/windows/crash_generation/crash_generation_client.h</span></span><br><span class="line"><span class="section">win32:HEADERS += $$PWD/src/common/scoped_ptr.h</span></span><br><span class="line"><span class="section">win32:SOURCES += $$PWD/src/client/windows/handler/exception_handler.cc</span></span><br><span class="line"><span class="section">win32:SOURCES += $$PWD/src/common/windows/string_utils.cc</span></span><br><span class="line"><span class="section">win32:SOURCES += $$PWD/src/common/windows/guid_string.cc</span></span><br><span class="line"><span class="section">win32:SOURCES += $$PWD/src/client/windows/crash_generation/crash_generation_client.cc</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Linux</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/client/linux/minidump_writer/cpu_set.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/client/linux/minidump_writer/proc_cpuinfo_reader.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/client/linux/handler/exception_handler.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/client/linux/crash_generation/crash_generation_client.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/client/linux/handler/minidump_descriptor.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/client/linux/minidump_writer/minidump_writer.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/client/linux/minidump_writer/line_reader.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/client/linux/minidump_writer/linux_dumper.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/client/linux/minidump_writer/linux_ptrace_dumper.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/client/linux/minidump_writer/directory_reader.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/client/linux/log/log.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/client/minidump_file_writer-inl.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/client/minidump_file_writer.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/common/linux/linux_libc_support.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/common/linux/eintr_wrapper.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/common/linux/ignore_ret.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/common/linux/file_id.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/common/linux/memory_mapped_file.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/common/linux/safe_readlink.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/common/linux/guid_creator.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/common/linux/elfutils.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/common/linux/elfutils-inl.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/common/linux/elf_gnu_compat.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/common/using_std_string.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/common/memory.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/common/basictypes.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/common/memory_range.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/common/string_conversion.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/common/convert_UTF.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/google_breakpad/common/minidump_format.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/google_breakpad/common/minidump_size.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/google_breakpad/common/breakpad_types.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/common/scoped_ptr.h</span></span><br><span class="line"><span class="section">unix:HEADERS += $$PWD/src/third_party/lss/linux_syscall_support.h</span></span><br><span class="line"><span class="section">unix:SOURCES += $$PWD/src/client/linux/crash_generation/crash_generation_client.cc</span></span><br><span class="line"><span class="section">unix:SOURCES += $$PWD/src/client/linux/handler/exception_handler.cc</span></span><br><span class="line"><span class="section">unix:SOURCES += $$PWD/src/client/linux/handler/minidump_descriptor.cc</span></span><br><span class="line"><span class="section">unix:SOURCES += $$PWD/src/client/linux/minidump_writer/minidump_writer.cc</span></span><br><span class="line"><span class="section">unix:SOURCES += $$PWD/src/client/linux/minidump_writer/linux_dumper.cc</span></span><br><span class="line"><span class="section">unix:SOURCES += $$PWD/src/client/linux/minidump_writer/linux_ptrace_dumper.cc</span></span><br><span class="line"><span class="section">unix:SOURCES += $$PWD/src/client/linux/log/log.cc</span></span><br><span class="line"><span class="section">unix:SOURCES += $$PWD/src/client/minidump_file_writer.cc</span></span><br><span class="line"><span class="section">unix:SOURCES += $$PWD/src/common/linux/linux_libc_support.cc</span></span><br><span class="line"><span class="section">unix:SOURCES += $$PWD/src/common/linux/file_id.cc</span></span><br><span class="line"><span class="section">unix:SOURCES += $$PWD/src/common/linux/memory_mapped_file.cc</span></span><br><span class="line"><span class="section">unix:SOURCES += $$PWD/src/common/linux/safe_readlink.cc</span></span><br><span class="line"><span class="section">unix:SOURCES += $$PWD/src/common/linux/guid_creator.cc</span></span><br><span class="line"><span class="section">unix:SOURCES += $$PWD/src/common/linux/elfutils.cc</span></span><br><span class="line"><span class="section">unix:SOURCES += $$PWD/src/common/string_conversion.cc</span></span><br><span class="line"><span class="section">unix:SOURCES += $$PWD/src/common/convert_UTF.cc</span></span><br><span class="line"><span class="section">unix:SOURCES += $$PWD/src/common/linux/breakpad_getcontext.S</span></span><br><span class="line"><span class="section">unix:SOURCES += $$PWD/src/client/linux/microdump_writer/microdump_writer.cc</span></span><br><span class="line"><span class="section">unix:SOURCES += $$PWD/src/client/linux/dump_writer_common/ucontext_reader.cc</span></span><br><span class="line"><span class="section">unix:SOURCES += $$PWD/src/client/linux/dump_writer_common/thread_info.cc</span></span><br><span class="line"><span class="comment">#breakpad app need debug info inside binaries</span></span><br><span class="line"><span class="section">unix:QMAKE_CXXFLAGS+=-g</span></span><br></pre></td></tr></table></figure></li><li><p>添加头文件crashhandler.h</p><figure class="highlight h"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QtCore/QString&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> Breakpad &#123;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">CrashHandlerPrivate</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">CrashHandler</span></span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="function"><span class="keyword">static</span> CrashHandler* <span class="title">instance</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">(<span class="keyword">const</span> QString&amp;  reportPath)</span></span>;</span><br><span class="line">    </span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">setReportCrashesToSystem</span><span class="params">(<span class="keyword">bool</span> report)</span></span>;</span><br><span class="line">        <span class="function"><span class="keyword">bool</span> <span class="title">writeMinidump</span><span class="params">()</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">        CrashHandler();</span><br><span class="line">        ~CrashHandler();</span><br><span class="line">        Q_DISABLE_COPY(CrashHandler)</span><br><span class="line">        CrashHandlerPrivate* d;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写cpp文件crashhandler.cpp</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;crashhandler.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QtCore/QDir&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QtCore/QProcess&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QtCore/QCoreApplication&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QString&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined(Q_OS_LINUX)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;client/linux/handler/exception_handler.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">elif</span> defined(Q_OS_WIN32)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;client/windows/handler/exception_handler.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> Breakpad &#123;</span><br><span class="line">    <span class="comment">/************************************************************************/</span></span><br><span class="line">    <span class="comment">/* CrashHandlerPrivate                                                  */</span></span><br><span class="line">    <span class="comment">/************************************************************************/</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">CrashHandlerPrivate</span></span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="built_in">CrashHandlerPrivate</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            pHandler = <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        ~<span class="built_in">CrashHandlerPrivate</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">delete</span> pHandler;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">InitCrashHandler</span><span class="params">(<span class="keyword">const</span> QString&amp; dumpPath)</span></span>;</span><br><span class="line">        <span class="keyword">static</span> google_breakpad::ExceptionHandler* pHandler;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">bool</span> bReportCrashesToSystem;</span><br><span class="line">    &#125;;</span><br><span class="line"> </span><br><span class="line">    google_breakpad::ExceptionHandler* CrashHandlerPrivate::pHandler = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">bool</span> CrashHandlerPrivate::bReportCrashesToSystem = <span class="literal">false</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/************************************************************************/</span></span><br><span class="line">    <span class="comment">/* DumpCallback                                                         */</span></span><br><span class="line">    <span class="comment">/************************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined(Q_OS_WIN32)</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">DumpCallback</span><span class="params">(<span class="keyword">const</span> <span class="keyword">wchar_t</span>* _dump_dir,<span class="keyword">const</span> <span class="keyword">wchar_t</span>* _minidump_id,<span class="keyword">void</span>* context,EXCEPTION_POINTERS* exinfo,MDRawAssertionInfo* assertion,<span class="keyword">bool</span> success)</span></span></span><br><span class="line"><span class="function"><span class="meta">#<span class="meta-keyword">elif</span> defined(Q_OS_LINUX)</span></span></span><br><span class="line"><span class="function">    <span class="keyword">bool</span> <span class="title">DumpCallback</span><span class="params">(<span class="keyword">const</span> google_breakpad::MinidumpDescriptor &amp;md,<span class="keyword">void</span> *context, <span class="keyword">bool</span> success)</span></span></span><br><span class="line"><span class="function"><span class="meta">#<span class="meta-keyword">endif</span></span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">Q_UNUSED</span>(context);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined(Q_OS_WIN32)</span></span><br><span class="line">        <span class="built_in">Q_UNUSED</span>(_dump_dir);</span><br><span class="line">        <span class="built_in">Q_UNUSED</span>(_minidump_id);</span><br><span class="line">        <span class="built_in">Q_UNUSED</span>(assertion);</span><br><span class="line">        <span class="built_in">Q_UNUSED</span>(exinfo);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">        <span class="built_in">qDebug</span>(<span class="string">&quot;BreakpadQt crash&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        NO STACK USE, NO HEAP USE THERE !!!</span></span><br><span class="line"><span class="comment">        Creating QString&#x27;s, using qDebug, etc. - everything is crash-unfriendly.</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="keyword">return</span> CrashHandlerPrivate::bReportCrashesToSystem ? success : <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">CrashHandlerPrivate::InitCrashHandler</span><span class="params">(<span class="keyword">const</span> QString&amp; dumpPath)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ( pHandler != <span class="literal">NULL</span> )</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined(Q_OS_WIN32)</span></span><br><span class="line">        std::wstring pathAsStr = (<span class="keyword">const</span> <span class="keyword">wchar_t</span>*)dumpPath.<span class="built_in">utf16</span>();</span><br><span class="line">        pHandler = <span class="keyword">new</span> google_breakpad::<span class="built_in">ExceptionHandler</span>(</span><br><span class="line">            pathAsStr,</span><br><span class="line">            <span class="comment">/*FilterCallback*/</span> <span class="number">0</span>,</span><br><span class="line">            DumpCallback,</span><br><span class="line">            <span class="comment">/*context*/</span></span><br><span class="line">            <span class="number">0</span>,</span><br><span class="line">            <span class="literal">true</span></span><br><span class="line">            );</span><br><span class="line"><span class="meta">#<span class="meta-keyword">elif</span> defined(Q_OS_LINUX)</span></span><br><span class="line">        std::string pathAsStr = dumpPath.<span class="built_in">toStdString</span>();</span><br><span class="line">        <span class="function">google_breakpad::MinidumpDescriptor <span class="title">md</span><span class="params">(pathAsStr)</span></span>;</span><br><span class="line">        pHandler = <span class="keyword">new</span> google_breakpad::<span class="built_in">ExceptionHandler</span>(</span><br><span class="line">            md,</span><br><span class="line">            <span class="comment">/*FilterCallback*/</span> <span class="number">0</span>,</span><br><span class="line">            DumpCallback,</span><br><span class="line">            <span class="comment">/*context*/</span> <span class="number">0</span>,</span><br><span class="line">            <span class="literal">true</span>,</span><br><span class="line">            <span class="number">-1</span></span><br><span class="line">            );</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/************************************************************************/</span></span><br><span class="line">    <span class="comment">/* CrashHandler                                                         */</span></span><br><span class="line">    <span class="comment">/************************************************************************/</span></span><br><span class="line">    <span class="function">CrashHandler* <span class="title">CrashHandler::instance</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">static</span> CrashHandler globalHandler;</span><br><span class="line">        <span class="keyword">return</span> &amp;globalHandler;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    CrashHandler::<span class="built_in">CrashHandler</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        d = <span class="keyword">new</span> <span class="built_in">CrashHandlerPrivate</span>();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    CrashHandler::~<span class="built_in">CrashHandler</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">delete</span> d;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">CrashHandler::setReportCrashesToSystem</span><span class="params">(<span class="keyword">bool</span> report)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        d-&gt;bReportCrashesToSystem = report;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">CrashHandler::writeMinidump</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">bool</span> res = d-&gt;pHandler-&gt;<span class="built_in">WriteMinidump</span>();</span><br><span class="line">        <span class="keyword">if</span> (res) &#123;</span><br><span class="line">            <span class="built_in">qDebug</span>(<span class="string">&quot;BreakpadQt: writeMinidump() success.&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">qWarning</span>(<span class="string">&quot;BreakpadQt: writeMinidump() failed.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">CrashHandler::Init</span><span class="params">( <span class="keyword">const</span> QString&amp; reportPath )</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        d-&gt;<span class="built_in">InitCrashHandler</span>(reportPath);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ol start="5"><li>测试程序<br>新建一个工程在将breakpad拷贝到3rdparty目录下,然后pro文件中添加<figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>($$PWD/3rdparty/breakpad/breakpad.pri)</span><br></pre></td></tr></table></figure></li></ol><p>测试程序main.cpp</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;crashhandler.h&quot;</span></span></span><br><span class="line"><span class="comment">//see https://github.com/JPNaude/dev_notes/wiki/Using-Google-Breakpad-with-Qt</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">buggyFunc</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">delete</span> <span class="keyword">reinterpret_cast</span>&lt;QString*&gt;(<span class="number">0xFEE1DEAD</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">QApplication <span class="title">a</span><span class="params">(argc, argv)</span></span>;</span><br><span class="line">    <span class="comment">// We put the dumps in the user&#x27;s home directory for this example:</span></span><br><span class="line">    Breakpad::CrashHandler::<span class="built_in">instance</span>()-&gt;<span class="built_in">Init</span>(QCoreApplication::<span class="built_in">applicationDirPath</span>());</span><br><span class="line"></span><br><span class="line"><span class="built_in">buggyFunc</span>();</span><br><span class="line"><span class="keyword">return</span> a.<span class="built_in">exec</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//more</span></span><br><span class="line"><span class="comment">//minidump_stackwalk.exe xxxx.dmp symbols &gt; foo.txt 2&gt;&amp;1</span></span><br></pre></td></tr></table></figure><ol start="6"><li>运行minidump_stackwalk.exe程序分析dmp文件<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minidump_stackwalk.exe xxxx.dmp symbols &gt; foo.txt 2&gt;&amp;1</span><br></pre></td></tr></table></figure></li></ol><p>7.打开 foo.txt文件<br>记住该文件下跟exe相关的地方,找到如下图中的eip寄存器地址(该寄存器应该为堆栈地址指针)<br><img src="/photos/%E6%9C%89%E5%85%B3Qt%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%B0%E5%BD%95/%E8%BD%AC%E5%AD%98%E6%96%87%E4%BB%B6.webp" alt="加入Qt源码"></p><ol start="8"><li>重新编译文件</li></ol><p>在.pro工程中添加以下内容后重新编译</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">QMAKE_CXXFLAGS_RELEASE += -g</span><br><span class="line"></span><br><span class="line">QMAKE_CFLAGS_RELEASE += -g</span><br><span class="line"></span><br><span class="line">QMAKE_LFLAGS_RELEASE = -mthreads -Wl, <span class="comment">#其中最后的逗号注意添加，如果不添加可能编译不过</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#禁止优化(存疑)</span></span><br><span class="line"></span><br><span class="line">QMAKE_CFLAGS_RELEASE -= -O2</span><br><span class="line"></span><br><span class="line">QMAKE_CXXFLAGS_RELEASE -= -O2</span><br><span class="line"></span><br><span class="line"><span class="comment">#或者使用以下语句</span></span><br><span class="line"><span class="comment">#QMAKE_CFLAGS_RELEASE = $$QMAKE_CFLAGS_RELEASE_WITH_DEBUGINFO</span></span><br><span class="line"><span class="comment">#QMAKE_CXXFLAGS_RELEASE = $$QMAKE_CXXFLAGS_RELEASE_WITH_DEBUGINFO</span></span><br><span class="line"><span class="comment">#QMAKE_LFLAGS_RELEASE = $$QMAKE_LFLAGS_RELEASE_WITH_DEBUGINFO</span></span><br></pre></td></tr></table></figure><ol start="9"><li>运行addr2line(该软件为Qt自带xxx\Tools\mingw530_32\bin\addr2line.exe)找到源文件中的地址<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">addr2line.exe -e untitled.exe -a 40eaf4 404774</span><br></pre></td></tr></table></figure><img src="/photos/%E6%9C%89%E5%85%B3Qt%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%B0%E5%BD%95/%E4%BD%BF%E7%94%A8addr2line.webp" alt="加入Qt源码"></li></ol><p>10.效果如下<br><img src="/photos/%E6%9C%89%E5%85%B3Qt%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%B0%E5%BD%95/%E6%BA%90%E6%96%87%E4%BB%B6.webp" alt="加入Qt源码"><br>你就说巧不巧吧……</p><blockquote><p>如果不加调试信息则找不到,但是还可以使用调试工具打开</p></blockquote><p><img src="/photos/%E6%9C%89%E5%85%B3Qt%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%B0%E5%BD%95/%E4%B8%8D%E5%8A%A0%E8%B0%83%E8%AF%95%E4%BF%A1%E6%81%AF.webp" alt="加入Qt源码"><br>找到第一个地址<strong>4b59</strong>然后在调试工具中找到地址发现为窗口显示的下一条语句,嗯听天由命吧<br><img src="/photos/%E6%9C%89%E5%85%B3Qt%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%B0%E5%BD%95/%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7%E6%89%93%E5%BC%80.webp" alt="加入Qt源码"></p><p>增加一条指令,将文件转为汇编…</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">objdump -S untilted.exe &gt; test.asm</span><br></pre></td></tr></table></figure><h2 id="静态Qt编译Mysql驱动"><a href="#静态Qt编译Mysql驱动" class="headerlink" title="静态Qt编译Mysql驱动"></a>静态Qt编译Mysql驱动</h2><ol><li>按照其他教程,下载相应版本的Qt源码放到对应的路径下</li><li>建立qt_plugin_qsqlmysql.pri<br>模仿sqlite在路径 …Qt\Qt5.7.1\5.7\mingw53_32_release_static\mkspecs\modules 下建立一个文件内容如下</li></ol><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">QT_PLUGIN<span class="selector-class">.qsqlmysql</span><span class="selector-class">.TYPE</span> = sqldrivers</span><br><span class="line">QT_PLUGIN<span class="selector-class">.qsqlmysql</span><span class="selector-class">.EXTENDS</span> =</span><br><span class="line">QT_PLUGIN<span class="selector-class">.qsqlmysql</span><span class="selector-class">.CLASS_NAME</span> = QMYSQLDriverPlugin</span><br><span class="line">QT_PLUGINS += qsqlmysql</span><br></pre></td></tr></table></figure><p>这样Qt编译的时候会扫描该目录下的文件,自动导入</p><ol start="3"><li>编译完成后生成的文件为</li></ol><ul><li>libqsqlmysql.a</li><li>qsqlmysql.prl<figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">QMAKE_PRL_BUILD_DIR = C:/Qt/Qt5.7.1/5.7/Src/qtbase/src/plugins/sqldrivers/mysql</span><br><span class="line">QMAKE_PRO_INPUT = mysql.pro</span><br><span class="line">QMAKE_PRL_TARGET = libqsqlmysql.a</span><br><span class="line">QMAKE_PRL_CONFIG = lex yacc depend_includepath testcase_targets import_plugins import_qpa_plugin incremental_off windows qt_build_extra file_copies qt warn_on release link_prl debug_and_release precompile_header release static static_runtime rtti no_plugin_manifest directwrite qpa win32 mingw gcc copy_dir_files precompile_header pcre release sse2 sse3 ssse3 sse4_1 sse4_2 avx avx2 largefile prefix_build force_independent create_prl link_prl prepare_docs qt_docs_targets no_private_qt_headers_warning QTDIR_build qt_example_installs exceptions_off testcase_exceptions warning_clean release ReleaseBuild Release build_pass c++11 plugin relative_qt_rpath create_cmake c++11 strict_c++ c++14 c++1z release ReleaseBuild Release build_pass have_target staticlib exclusive_builds no_autoqmake thread moc resources</span><br><span class="line">QMAKE_PRL_LIBS = -llibmysql -LC:/Qt/Qt5.7.1/5.7/mingw53_32_release_static/lib C:/Qt/Qt5.7.1/5.7/mingw53_32_release_static/lib\\libQt5Sql.a -LC:/Qt/Qt5.7.1/5.7/OpenSSL_MinGW32_Static/lib C:/Qt/Qt5.7.1/5.7/mingw53_32_release_static/lib\\libQt5Core.a -lole32 -luuid -lws2_32 -ladvapi32 -lshell32 -luser32 -lkernel32 -lmpr C:/Qt/Qt5.7.1/5.7/mingw53_32_release_static/lib\\libqtpcre.a</span><br></pre></td></tr></table></figure></li></ul><ol start="4"><li><p>编译完成后就行了,但此时还需要拷贝动态链接库libmysql.dll到可执行目录留下,不然运行的时候会报错,一直想解决这个问题(不能完全做到打包到一个文件中)</p></li><li><p>下载mingw转化工具(reimp.exe)重新编译也许可以(暂时未做尝试) dlltool.exe在Qt的工具目录下就有</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reimp -d libmysql.lib</span><br><span class="line">dlltool -k -d libmysql.def -l libmysql.a</span><br></pre></td></tr></table></figure><p>有需要的自取(转化的版本我试了下5.7的不行,低版本的可以,未继续深入,同时把第二步中的qt_plugin_qsqlmysql.pri改名后既可以不加载mysql了</p></li></ol><h2 id="附件下载"><a href="#附件下载" class="headerlink" title="附件下载"></a>附件下载</h2><p><a href="/attachment/%E6%9C%89%E5%85%B3Qt%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%B0%E5%BD%95/minidump_stackwalk.zip">minidump_stackwalk下载</a></p><p><a href="/attachment/%E6%9C%89%E5%85%B3Qt%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%B0%E5%BD%95/reimp.zip">reimp下载</a><br>[]</p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://blog.csdn.net/p942005405/article/details/102678369">qt mingw 创建dump 并查找crash 出错行</a><br><a href="https://github.com/JPNaude/dev_notes/wiki/Using-Google-Breakpad-with-Qt">JPNaude的教程</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Qt" scheme="https://liusblog.top/categories/Qt/"/>
    
    
    <category term="Qt" scheme="https://liusblog.top/tags/Qt/"/>
    
    <category term="QtCreator" scheme="https://liusblog.top/tags/QtCreator/"/>
    
  </entry>
  
  <entry>
    <title>go语言协程池之端口扫描器</title>
    <link href="https://liusblog.top/2021/08/31/go%E8%AF%AD%E8%A8%80%E5%8D%8F%E7%A8%8B%E6%B1%A0%E4%B9%8B%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F%E5%99%A8/"/>
    <id>https://liusblog.top/2021/08/31/go%E8%AF%AD%E8%A8%80%E5%8D%8F%E7%A8%8B%E6%B1%A0%E4%B9%8B%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F%E5%99%A8/</id>
    <published>2021-08-31T13:02:27.000Z</published>
    <updated>2024-08-20T01:03:40.763Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>学习下GO语言的协程的端口扫描,更多教程见大神的bilibili主页</p></blockquote><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><p>参见微软MVP<strong>杨旭</strong>大神的<a href="https://www.bilibili.com/video/BV13K4y1a7dt">Go语言（Golang）编写 TCP 端口扫描器（完结）</a></p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li>开启协程池</li><li>投递任务(<strong>用go routine实现</strong>)</li><li>获取结果(注意这里的数量要和分配的任务相同)</li><li>收尾(关闭chan)</li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;flag&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;net&quot;</span></span><br><span class="line"><span class="string">&quot;sort&quot;</span></span><br><span class="line"><span class="string">&quot;strconv&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">worker</span><span class="params">(ip <span class="keyword">string</span>, ports <span class="keyword">chan</span> <span class="keyword">int</span>, result <span class="keyword">chan</span> <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> port := <span class="keyword">range</span> ports &#123;</span><br><span class="line">addr := net.JoinHostPort(ip, strconv.Itoa(port))</span><br><span class="line"></span><br><span class="line">conn, err := net.Dial(<span class="string">&quot;tcp&quot;</span>, addr)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">result &lt;- <span class="number">0</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">conn.Close()</span><br><span class="line">result &lt;- port</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//0. 初始化变量,读取ip</span></span><br><span class="line"><span class="keyword">var</span> ip <span class="keyword">string</span></span><br><span class="line">flag.StringVar(&amp;ip, <span class="string">&quot;ip&quot;</span>, <span class="string">&quot;127.0.0.1&quot;</span>, <span class="string">&quot;input ip for scan(support ipv4/6)&quot;</span>)</span><br><span class="line">flag.Parse()</span><br><span class="line">fmt.Printf(<span class="string">&quot;scan (%s) range 1~65535\n&quot;</span>, ip)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用带缓冲的chan来存储任务,非缓冲的chan获取结果</span></span><br><span class="line">jobs := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>, <span class="number">10240</span>)</span><br><span class="line">result := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>)</span><br><span class="line"></span><br><span class="line">start := time.Now()</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> openedPorts []<span class="keyword">int</span></span><br><span class="line"><span class="comment">//1.开启协程池</span></span><br><span class="line"><span class="keyword">for</span> p := <span class="number">0</span>; p &lt; <span class="built_in">cap</span>(jobs); p++ &#123;</span><br><span class="line"><span class="keyword">go</span> worker(ip, jobs, result)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2. 投递任务</span></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> j := <span class="number">1</span>; j &lt;= <span class="number">65535</span>; j++ &#123;</span><br><span class="line">jobs &lt;- j</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="comment">//3. 获取结果(注意这里的数量要和分配的任务相同)</span></span><br><span class="line"><span class="keyword">for</span> j := <span class="number">1</span>; j &lt;= <span class="number">65535</span>; j++ &#123;</span><br><span class="line">r := &lt;-result</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> r != <span class="number">0</span> &#123;</span><br><span class="line">openedPorts = <span class="built_in">append</span>(openedPorts, r)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//4. 关闭chan,否则 worker里面会一直循环</span></span><br><span class="line"><span class="built_in">close</span>(jobs)</span><br><span class="line"><span class="built_in">close</span>(result)</span><br><span class="line"></span><br><span class="line"><span class="comment">//排序</span></span><br><span class="line">fmt.Println(<span class="string">&quot;open ports:&quot;</span>)</span><br><span class="line">sort.Ints(openedPorts)</span><br><span class="line"><span class="keyword">for</span> _, port := <span class="keyword">range</span> openedPorts &#123;</span><br><span class="line">fmt.Println(port)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">since := time.Since(start)</span><br><span class="line">fmt.Printf(<span class="string">&quot;time consuming %v&quot;</span>, since)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Python" scheme="https://liusblog.top/categories/Python/"/>
    
    
    <category term="go" scheme="https://liusblog.top/tags/go/"/>
    
    <category term="goroutines" scheme="https://liusblog.top/tags/goroutines/"/>
    
    <category term="端口扫描" scheme="https://liusblog.top/tags/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/"/>
    
  </entry>
  
  <entry>
    <title>数据库建表范式</title>
    <link href="https://liusblog.top/2021/07/05/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BB%BA%E8%A1%A8%E8%8C%83%E5%BC%8F/"/>
    <id>https://liusblog.top/2021/07/05/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BB%BA%E8%A1%A8%E8%8C%83%E5%BC%8F/</id>
    <published>2021-07-05T13:23:27.000Z</published>
    <updated>2021-10-20T07:57:28.328Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="设计口诀"><a href="#设计口诀" class="headerlink" title="设计口诀:"></a>设计口诀:</h2><ul><li><p><strong>多对多</strong>:<br>  多对多三张表,关系表辆外键</p></li><li><p><strong>一对多</strong>:<br>  一对多两张表,多的表加外键</p></li><li><p><strong>一对一</strong>(一张表拆分, <strong>一对多</strong>特殊形式,如用户详细信息和简要信息):</p><ul><li>主键共享</li><li>外键唯一</li></ul></li></ul><h2 id="范式的目的"><a href="#范式的目的" class="headerlink" title="范式的目的"></a>范式的目的</h2><p>按照三范式设计的表不会出现冗余</p><h2 id="第一范式"><a href="#第一范式" class="headerlink" title="第一范式"></a>第一范式</h2><p>任何一张表都应该有主键, 并且每个字段原子不可再分</p><table><thead><tr><th>学生学号</th><th>学生姓名</th><th>联系方式</th></tr></thead><tbody><tr><td>1001</td><td>张三</td><td><a href="mailto:&#122;&#104;&#97;&#x6e;&#x67;&#115;&#97;&#110;&#x40;&#120;&#120;&#46;&#99;&#111;&#x6d;">&#122;&#104;&#97;&#x6e;&#x67;&#115;&#97;&#110;&#x40;&#120;&#120;&#46;&#99;&#111;&#x6d;</a>, 13xxxxxxx</td></tr><tr><td>1002</td><td>李四</td><td><a href="mailto:&#108;&#x69;&#x73;&#x69;&#x40;&#120;&#x78;&#46;&#x63;&#x6f;&#109;">&#108;&#x69;&#x73;&#x69;&#x40;&#120;&#x78;&#46;&#x63;&#x6f;&#109;</a>, 13xxxxxxx</td></tr></tbody></table><blockquote><p>联系方式可再分</p></blockquote><p>更改后</p><table><thead><tr><th>学生学号</th><th>学生姓名</th><th>email</th><th>电话</th></tr></thead><tbody><tr><td>1001</td><td>张三</td><td><a href="mailto:&#122;&#104;&#x61;&#x6e;&#103;&#115;&#x61;&#110;&#x40;&#120;&#120;&#46;&#99;&#111;&#x6d;">&#122;&#104;&#x61;&#x6e;&#103;&#115;&#x61;&#110;&#x40;&#120;&#120;&#46;&#99;&#111;&#x6d;</a></td><td>13xxxxxxx</td></tr><tr><td>1002</td><td>李四</td><td><a href="mailto:&#x6c;&#105;&#x73;&#105;&#64;&#120;&#120;&#x2e;&#x63;&#x6f;&#x6d;">&#x6c;&#105;&#x73;&#105;&#64;&#120;&#120;&#x2e;&#x63;&#x6f;&#x6d;</a></td><td>13xxxxxxx</td></tr></tbody></table><h2 id="第二范式"><a href="#第二范式" class="headerlink" title="第二范式"></a>第二范式</h2><p>建立在第一范式之上,所有的非主键字段完全依赖主键,不能产生部分依赖</p><table><thead><tr><th>学生学号</th><th>学生姓名</th><th>教师编号</th><th>教师姓名</th></tr></thead><tbody><tr><td>1001</td><td>张三</td><td>001</td><td>赵老师</td></tr><tr><td>1002</td><td>李四</td><td>002</td><td>陈老师</td></tr><tr><td>1001</td><td>张三</td><td>002</td><td>陈老师</td></tr></tbody></table><blockquote><p>满足第一范式吗? 不满足,因为没有主键<br>关系为 多对多</p></blockquote><p>所以确定主键</p><table><thead><tr><th>学生学号(PK)</th><th>教师编号(PK)</th><th>学生姓名</th><th>教师姓名</th></tr></thead><tbody><tr><td>1001</td><td>001</td><td>张三</td><td>赵老师</td></tr><tr><td>1002</td><td>002</td><td>李四</td><td>陈老师</td></tr><tr><td>1001</td><td>002</td><td>张三</td><td>陈老师</td></tr></tbody></table><blockquote><p>此时,复合主键已经满足第一范式,但是不满足第二范式,此时存在数据冗余</p></blockquote><p>多对多:三张表,关系表辆外键</p><blockquote><p>学生表</p></blockquote><table><thead><tr><th>sNo(PK)</th><th>姓名</th></tr></thead><tbody><tr><td>1</td><td>张胜</td></tr><tr><td>2</td><td>李四</td></tr><tr><td>3</td><td>王五</td></tr></tbody></table><blockquote><p>老师表</p></blockquote><table><thead><tr><th>tNo(PK)</th><th>姓名</th></tr></thead><tbody><tr><td>1</td><td>王老师</td></tr><tr><td>2</td><td>张老师</td></tr><tr><td>3</td><td>李老师</td></tr></tbody></table><blockquote><p>关系表</p></blockquote><table><thead><tr><th>id(PK)</th><th>sno(fk)</th><th>tno(fk)</th></tr></thead><tbody><tr><td>1</td><td>1</td><td>3</td></tr><tr><td>2</td><td>1</td><td>1</td></tr><tr><td>3</td><td>2</td><td>2</td></tr><tr><td>4</td><td>2</td><td>3</td></tr><tr><td>5</td><td>3</td><td>1</td></tr><tr><td>6</td><td>3</td><td>3</td></tr></tbody></table><h2 id="第三范式"><a href="#第三范式" class="headerlink" title="第三范式"></a>第三范式</h2><p>建立在第二范式基础上,所有非主键字段直接依赖主键,不能产生传递依赖</p><blockquote><p>如学生班级表 一对多关系</p></blockquote><table><thead><tr><th>学生学号(PK)</th><th>学生姓名</th><th>班级编号</th><th>班级名称</th></tr></thead><tbody><tr><td>1001</td><td>张三</td><td>1</td><td>一年一班</td></tr><tr><td>1002</td><td>李四</td><td>2</td><td>一年二班</td></tr><tr><td>1001</td><td>张三</td><td>3</td><td>一年三班</td></tr><tr><td>1001</td><td>张三</td><td>4</td><td>一年四班</td></tr></tbody></table><blockquote><p>班级名称依赖于班级编号,但是班级编号依然依赖于学生学号(因为是主键)</p></blockquote><p>一对多? 两张表多的表加外键</p><blockquote><p>班级表t_class</p></blockquote><table><thead><tr><th>cno(pk)</th><th>cname</th></tr></thead><tbody><tr><td>1</td><td>一班</td></tr><tr><td>2</td><td>二班</td></tr></tbody></table><blockquote><p>学生表t_student</p></blockquote><table><thead><tr><th>sno(pk)</th><th>sname</th><th>classno(fk)</th></tr></thead><tbody><tr><td>1</td><td>张三</td><td>1</td></tr><tr><td>2</td><td>李四</td><td>1</td></tr><tr><td>3</td><td>王五</td><td>2</td></tr><tr><td>4</td><td>周六</td><td>2</td></tr><tr><td>5</td><td>马五</td><td>2</td></tr></tbody></table><h2 id="一对多表设计"><a href="#一对多表设计" class="headerlink" title="一对多表设计"></a>一对多表设计</h2><blockquote><p>t_user_login 用户登录表</p></blockquote><table><thead><tr><th>sno(pk)</th><th>sname</th><th>classno(fk)</th></tr></thead><tbody><tr><td>1</td><td>张三</td><td>1</td></tr><tr><td>2</td><td>李四</td><td>1</td></tr></tbody></table><blockquote><p>t_user_detail 用户详细信息表(<strong>主键共享</strong> 主键为t_user_login的主键)</p></blockquote><table><thead><tr><th>id(pk+fk)</th><th>realname</th><th>tel</th><th>…</th></tr></thead><tbody><tr><td>1</td><td>张三</td><td>138xxxxx</td><td>…</td></tr><tr><td>2</td><td>李四</td><td>138yyyyy</td><td>…</td></tr></tbody></table><blockquote><p>t_user_detail 用户详细信息表(<strong>外键唯一</strong>约束)</p></blockquote><table><thead><tr><th>id(pk)</th><th>realname</th><th>tel</th><th>userid(fk+unique)</th></tr></thead><tbody><tr><td>1</td><td>张三</td><td>138xxxxx</td><td>2</td></tr><tr><td>2</td><td>李四</td><td>138yyyyy</td><td>1</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="网站开发" scheme="https://liusblog.top/categories/%E7%BD%91%E7%AB%99%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="数据库" scheme="https://liusblog.top/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="范式" scheme="https://liusblog.top/tags/%E8%8C%83%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>再谈Qt数据库</title>
    <link href="https://liusblog.top/2021/02/11/%E5%86%8D%E8%B0%88Qt%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>https://liusblog.top/2021/02/11/%E5%86%8D%E8%B0%88Qt%E6%95%B0%E6%8D%AE%E5%BA%93/</id>
    <published>2021-02-11T12:47:29.000Z</published>
    <updated>2022-04-21T11:18:00.453Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>以前写的Qt数据退出时提示异常的情况,经历时间的摧残,再战数据库</p></blockquote><h2 id="多线程支持"><a href="#多线程支持" class="headerlink" title="多线程支持"></a>多线程支持</h2><p>一个函数在不同线程中调用,可通过 <strong>QThread::currentThread</strong>来区分<br>所以可声明一个单例函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> QSqlDatabase <span class="title">dataBase</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">QSqlDatabase <span class="title">DataBaseManager::dataBase</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QString name = QString::<span class="built_in">number</span>((quint64)QThread::<span class="built_in">currentThread</span>(), <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//如果已经连接并且数据库名没有变化,则返回</span></span><br><span class="line">    <span class="keyword">if</span>(QSqlDatabase::<span class="built_in">contains</span>(name))&#123;</span><br><span class="line">        QSqlDatabase db = QSqlDatabase::<span class="built_in">database</span>(name);</span><br><span class="line">        <span class="keyword">if</span>(db.<span class="built_in">databaseName</span>() == m_dbName)&#123;</span><br><span class="line">            <span class="keyword">return</span> db;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">closeDataBase</span>(name);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">auto</span> db = QSqlDatabase::<span class="built_in">addDatabase</span>(m_driver, name);</span><br><span class="line"></span><br><span class="line">        db.<span class="built_in">setHostName</span>(m_host);</span><br><span class="line">        db.<span class="built_in">setPort</span>(m_port);</span><br><span class="line">        db.<span class="built_in">setUserName</span>(m_userName);</span><br><span class="line">        db.<span class="built_in">setPassword</span>(m_passWord);</span><br><span class="line">        db.<span class="built_in">setDatabaseName</span>(m_dbName);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!db.<span class="built_in">open</span>()) &#123;</span><br><span class="line">            <span class="comment">//关闭数据库,必须这样..</span></span><br><span class="line">            <span class="built_in">closeDataBase</span>(name);</span><br><span class="line">            <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;数据库打开失败!&quot;</span> &lt;&lt; m_dbName &lt;&lt; name;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">qDebug</span>() &lt;&lt; <span class="built_in">QString</span>(<span class="string">&quot;数据库%1打开成功, 连接名: %2&quot;</span>).<span class="built_in">arg</span>(m_dbName).<span class="built_in">arg</span>(name);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function">emit <span class="title">DataBaseManager::instance</span><span class="params">()</span>-&gt;<span class="title">databaseTableChanged</span><span class="params">(db.tables())</span></span>;</span><br><span class="line">        <span class="keyword">return</span> db;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="信号发送"><a href="#信号发送" class="headerlink" title="信号发送"></a>信号发送</h2><p>声明一个静态单例模式函数,然后调用即可</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> DataBaseManager* <span class="title">instance</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>在需要发射信号的地方</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">emit <span class="title">DataBaseManager::instance</span><span class="params">()</span>-&gt;<span class="title">databaseTableChanged</span><span class="params">(db.tables())</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">DataBaseManager *<span class="title">DataBaseManager::instance</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> DataBaseManager qinstance;</span><br><span class="line">    <span class="keyword">return</span> &amp;qinstance;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="事务支持"><a href="#事务支持" class="headerlink" title="事务支持"></a>事务支持</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">DataBaseManager::startTransaction</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//开启事务</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">dataBase</span>().<span class="built_in">isOpen</span>()</span><br><span class="line">            &amp;&amp; <span class="built_in">dataBase</span>().<span class="built_in">driver</span>()-&gt;<span class="built_in">hasFeature</span>(QSqlDriver::Transactions))&#123;</span><br><span class="line">        <span class="comment">//QMutexLocker locker(&amp;m_mutex);</span></span><br><span class="line">        <span class="keyword">if</span>(!m_isTransactioned)&#123;</span><br><span class="line">            <span class="keyword">bool</span> ok = <span class="built_in">dataBase</span>().<span class="built_in">transaction</span>();</span><br><span class="line">            <span class="keyword">if</span>(ok)&#123;</span><br><span class="line">                m_isTransactioned = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;transaction失败&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> ok;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">DataBaseManager::commit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//开启事务</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">dataBase</span>().<span class="built_in">isOpen</span>() &amp;&amp; <span class="built_in">dataBase</span>().<span class="built_in">driver</span>()-&gt;<span class="built_in">hasFeature</span>(QSqlDriver::Transactions))&#123;</span><br><span class="line">        <span class="keyword">if</span>(m_isTransactioned)&#123;</span><br><span class="line">            <span class="keyword">bool</span> ok = <span class="built_in">dataBase</span>().<span class="built_in">commit</span>();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(ok)&#123;</span><br><span class="line">                m_isTransactioned = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;commit 失败!&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> ok;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h2><p>使用QSqlQuery执行sql语句的时,需要在构造函数中传入一个数据库</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QSqlQuery query(<span class="name">DataBaseManager</span>:<span class="symbol">:dataBase</span>())<span class="comment">;</span></span><br></pre></td></tr></table></figure><h2 id="执行sql文件"><a href="#执行sql文件" class="headerlink" title="执行sql文件"></a>执行sql文件</h2><p>一般情况下,数据库不支持多行模式,特别有些文件还有注释等,所以执行sql文件的核心思想就是解析文本文件,去掉注释变成多次单行模式</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//该函数从开源软件中扒拉出来的</span></span><br><span class="line"><span class="function">QStringList <span class="title">DataBaseManager::quickSplitQueries</span><span class="params">(<span class="keyword">const</span> QString&amp; sql, <span class="keyword">bool</span> keepEmptyQueries, <span class="keyword">bool</span> removeComments)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QChar c;</span><br><span class="line">    <span class="keyword">bool</span> inString = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">bool</span> inMultiLineComment = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">bool</span> inSingleLineComment = <span class="literal">false</span>;</span><br><span class="line">    QStringList queries;</span><br><span class="line">    QString query;</span><br><span class="line">    QString trimmed;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, total = sql.<span class="built_in">size</span>(); i &lt; total; ++i)&#123;</span><br><span class="line">        c = sql[i];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// String</span></span><br><span class="line">        <span class="keyword">if</span> (inString)&#123;</span><br><span class="line">            query += c;</span><br><span class="line">            <span class="keyword">if</span> (c == <span class="string">&#x27;\&#x27;&#x27;</span>)&#123;</span><br><span class="line">                inString = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// One-line comment</span></span><br><span class="line">        <span class="keyword">if</span> (inSingleLineComment)&#123;</span><br><span class="line">            <span class="keyword">if</span> (!removeComments)</span><br><span class="line">                query += c;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (c == <span class="string">&#x27;\r&#x27;</span> &amp;&amp; (i + <span class="number">1</span>) &lt; total &amp;&amp; sql[i+<span class="number">1</span>] == <span class="string">&#x27;\n&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span> (!removeComments)</span><br><span class="line">                    query += <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                i++;</span><br><span class="line">                inSingleLineComment = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;\n&#x27;</span> || c == <span class="string">&#x27;\r&#x27;</span>)</span><br><span class="line">                inSingleLineComment = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Multi-line comment</span></span><br><span class="line">        <span class="keyword">if</span> (inMultiLineComment)&#123;</span><br><span class="line">            <span class="keyword">if</span> (!removeComments)</span><br><span class="line">                query += c;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (c == <span class="string">&#x27;*&#x27;</span> &amp;&amp; (i + <span class="number">1</span>) &lt; total &amp;&amp; sql[i+<span class="number">1</span>] == <span class="string">&#x27;/&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span> (!removeComments)</span><br><span class="line">                    query += <span class="string">&#x27;/&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                i++;</span><br><span class="line">                inMultiLineComment = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Everything rest</span></span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">&#x27;\&#x27;&#x27;</span>)&#123;</span><br><span class="line">            query += c;</span><br><span class="line">            inString = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;-&#x27;</span> &amp;&amp; (i + <span class="number">1</span>) &lt; total &amp;&amp; sql[i+<span class="number">1</span>] == <span class="string">&#x27;-&#x27;</span>)&#123;</span><br><span class="line">            inSingleLineComment = <span class="literal">true</span>;</span><br><span class="line">            i++;</span><br><span class="line">            <span class="keyword">if</span> (!removeComments)</span><br><span class="line">                query += <span class="string">&quot;--&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;/&#x27;</span> &amp;&amp; (i + <span class="number">1</span>) &lt; total &amp;&amp; sql[i+<span class="number">1</span>] == <span class="string">&#x27;*&#x27;</span>)&#123;</span><br><span class="line">            inMultiLineComment = <span class="literal">true</span>;</span><br><span class="line">            i++;</span><br><span class="line">            <span class="keyword">if</span> (!removeComments)</span><br><span class="line">                query += <span class="string">&quot;/*&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;;&#x27;</span>)&#123;</span><br><span class="line">            query += c;</span><br><span class="line">            <span class="keyword">if</span> (keepEmptyQueries || (!(trimmed = query.<span class="built_in">trimmed</span>()).<span class="built_in">isEmpty</span>() &amp;&amp; trimmed != <span class="string">&quot;;&quot;</span>))</span><br><span class="line">                queries &lt;&lt; query;</span><br><span class="line"></span><br><span class="line">            query.<span class="built_in">clear</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            query += c;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!query.<span class="built_in">isNull</span>() &amp;&amp; (!(trimmed = query.<span class="built_in">trimmed</span>()).<span class="built_in">isEmpty</span>() &amp;&amp; trimmed != <span class="string">&quot;;&quot;</span>))</span><br><span class="line">        queries &lt;&lt; query;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> queries;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Qt" scheme="https://liusblog.top/categories/Qt/"/>
    
    
    <category term="Qt" scheme="https://liusblog.top/tags/Qt/"/>
    
    <category term="多线程" scheme="https://liusblog.top/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
    <category term="QSqlDatabase" scheme="https://liusblog.top/tags/QSqlDatabase/"/>
    
    <category term="数据库" scheme="https://liusblog.top/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="QSqlQuery" scheme="https://liusblog.top/tags/QSqlQuery/"/>
    
    <category term="单例" scheme="https://liusblog.top/tags/%E5%8D%95%E4%BE%8B/"/>
    
    <category term="事务" scheme="https://liusblog.top/tags/%E4%BA%8B%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>网站升级浏览器提示</title>
    <link href="https://liusblog.top/2020/11/14/%E7%BD%91%E7%AB%99%E5%8D%87%E7%BA%A7%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8F%90%E7%A4%BA/"/>
    <id>https://liusblog.top/2020/11/14/%E7%BD%91%E7%AB%99%E5%8D%87%E7%BA%A7%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8F%90%E7%A4%BA/</id>
    <published>2020-11-14T13:49:03.000Z</published>
    <updated>2020-11-14T14:31:45.957Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>在做网站开发时,有些”执迷不悟”的用户还是用着IE,本文给出一种检测浏览器并给出升级提示的方法</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><ol><li>在index主页开始加入以下代码(IE10以上版本不管,否则跳转到升级页面)</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">dectBrower</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> DEFAULT_VERSION = <span class="number">10.0</span>;  </span><br><span class="line">        <span class="keyword">var</span> ua = navigator.userAgent.toLowerCase();  </span><br><span class="line">        <span class="keyword">var</span> isIE = ua.indexOf(<span class="string">&quot;msie&quot;</span>)&gt;-<span class="number">1</span>;  </span><br><span class="line">        <span class="keyword">var</span> safariVersion;  </span><br><span class="line">        <span class="keyword">if</span>(isIE)&#123;  </span><br><span class="line">            safariVersion =  ua.match(<span class="regexp">/msie ([\d.]+)/</span>)[<span class="number">1</span>];  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">if</span>(safariVersion &lt; DEFAULT_VERSION )&#123;  </span><br><span class="line">            alert(<span class="string">&#x27;请升级浏览器,马上跳转!&#x27;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="built_in">window</span>.location.href = <span class="string">&quot;updateBrower.html&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dectBrower()</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>编写updateBrower.html页面,并谷歌和和火狐放到本地以供下载</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;chrome.zip&quot;</span>&gt;</span>chrome浏览器<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;firefox.zip&quot;</span>&gt;</span>FireFox浏览器<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="网站开发" scheme="https://liusblog.top/categories/%E7%BD%91%E7%AB%99%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="浏览器" scheme="https://liusblog.top/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
    <category term="IE" scheme="https://liusblog.top/tags/IE/"/>
    
    <category term="升级" scheme="https://liusblog.top/tags/%E5%8D%87%E7%BA%A7/"/>
    
  </entry>
  
  <entry>
    <title>servlet入门</title>
    <link href="https://liusblog.top/2020/10/25/servlet%E5%85%A5%E9%97%A8/"/>
    <id>https://liusblog.top/2020/10/25/servlet%E5%85%A5%E9%97%A8/</id>
    <published>2020-10-25T04:04:18.000Z</published>
    <updated>2021-08-31T13:31:09.906Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>新版的 servlet 3.0版本遇到的坑,特此记录下</p></blockquote><h2 id="遇到的坑"><a href="#遇到的坑" class="headerlink" title="遇到的坑"></a>遇到的坑</h2><p>先说下运行环境吧,网上的东西大多数都是过时的,导致本菜撸了几天, 运行Servlet后一直显示 HTTP状态 404 - 未找到<br><img src="/photos/servlet%E5%85%A5%E9%97%A8/404%E9%94%99%E8%AF%AF.webp" alt="报错"></p><h2 id="运行环境"><a href="#运行环境" class="headerlink" title="运行环境"></a>运行环境</h2><ul><li>java 11.08</li><li>servlet 3.0</li><li>tomcat 7.0</li></ul><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li><p>下载Java EE</p></li><li><p>新建 web–&gt; Dynamic Web Project 选择一个已有文件夹,新建一个文件夹helloservlet输入工程名 helloservlet<br><img src="/photos/servlet%E5%85%A5%E9%97%A8/%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B.webp" alt="新建工程"></p></li><li><p>在eclipse中找到src右键new,新建一个servlet,输入class 名字,package名可以不输入<br><img src="/photos/servlet%E5%85%A5%E9%97%A8/%E6%96%B0%E5%BB%BAServlet.webp" alt="新建Servlet"></p></li><li><p>新建tomcat服务器<br>请注意,如果有请<strong>先删除</strong>后重建一个tomcat服务器</p></li></ol><p><img src="/photos/servlet%E5%85%A5%E9%97%A8/%E6%96%B0%E5%BB%BAtomcat%E6%9C%8D%E5%8A%A1.webp" alt="新建tomcat服务"></p><ol start="5"><li>输入网址<br><a href="http://localhost:8080/%E5%B7%A5%E7%A8%8B%E5%90%8D/%E6%98%A0%E5%B0%84%E5%90%8D">http://localhost:8080/工程名/映射名</a>, 其实这里的类名为@WebServlet(“/映射名”)映射名,自动生成的话也就是类名, 可以手动修改</li></ol><p><img src="/photos/servlet%E5%85%A5%E9%97%A8/%E6%9C%80%E7%BB%88%E6%95%88%E6%9E%9C.webp" alt="最终效果"></p><p>验证下<strong>代码</strong>和<strong>网址</strong> 同时修改,比如修改为jack,修改映射后如下图所示<br><img src="/photos/servlet%E5%85%A5%E9%97%A8/%E4%BF%AE%E6%94%B9%E6%98%A0%E5%B0%84%E5%90%8D%E5%90%8E.webp" alt="修改映射名后"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li><strong>不用写web.xml,不用写web.xml,不用写web.xml</strong>,重要的事情说三遍</li><li>网址路径为工程名+映射名</li><li>要新建一个tomcat服务器</li><li>网上的教程很多都是过时的</li><li>如果非要兼容过去的写web.xml,请把代码中的@WebServlet(“/映射名”)注释掉<br>web.xml 文件如下<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee&quot;</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd&quot;</span> <span class="attr">id</span>=<span class="string">&quot;WebApp_ID&quot;</span> <span class="attr">version</span>=<span class="string">&quot;3.0&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HelloWorld<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>HelloWorld<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HelloWorld<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/HelloWorld<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2>没啥可说的都是自动生成的<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Servlet implementation class ServletDemo</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet(&quot;/ServletDemo&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletDemo</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line">       </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> HttpServlet#HttpServlet()</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ServletDemo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">response.getWriter().append(<span class="string">&quot;Served at: &quot;</span>).append(request.getContextPath());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="网站开发" scheme="https://liusblog.top/categories/%E7%BD%91%E7%AB%99%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="servlet 3.0" scheme="https://liusblog.top/tags/servlet-3-0/"/>
    
    <category term="java" scheme="https://liusblog.top/tags/java/"/>
    
    <category term="网站开发" scheme="https://liusblog.top/tags/%E7%BD%91%E7%AB%99%E5%BC%80%E5%8F%91/"/>
    
    <category term="404" scheme="https://liusblog.top/tags/404/"/>
    
    <category term="未找到" scheme="https://liusblog.top/tags/%E6%9C%AA%E6%89%BE%E5%88%B0/"/>
    
  </entry>
  
</feed>
